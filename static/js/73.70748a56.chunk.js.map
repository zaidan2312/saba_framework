{"version":3,"sources":["views/apps/app/modal/index.js","utility/canvasUtils.js"],"names":["ORIENTATION_TO_ANGLE","ModalAddEdit","_ref","_store$selectedData$n","_store$selectedData","_store$selectedData$c","_store$selectedData2","_store$selectedData$n2","_store$selectedData7","show","setShow","detailPage","formState","setFormState","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","_useState","useState","_useState2","_slicedToArray","codeApp","setCodeApp","_useState3","_useState4","appType","setAppType","_useState5","_useState6","mainLanguage","setMainLanguage","_useState7","_useState8","framework","setFramework","_useState9","_useState10","setLoadingText","_useState11","_useState12","imageSrc","setImageSrc","_useState13","x","y","_useState14","crop","setCrop","_useState15","_useState16","rotation","setRotation","_useState17","_useState18","zoom","setZoom","_useState19","_useState20","croppedAreaPixels","setCroppedAreaPixels","_useForm","useForm","control","setError","handleSubmit","errors","Option","components","appTypeOptions","value","label","icon","_jsx","ApiIcon","className","sixe","WebIcon","InstallMobileIcon","IconImgOption","props","_jsxs","_objectSpread","children","src","data","style","width","alt","appMainLanguageOptions","appFrameworkOptions","countChanges","storeData","sortedObject","selectedData","key","JSON","stringify","handleInputName","event","newValue","target","replace","replaceAll","toLowerCase","updateDataToApi","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","croppedImage","_data$key","wrap","_context","prev","next","Object","values","every","field","includes","getCroppedImg","sent","appLogo","concat","pageTitle","putData","then","res","meta","requestStatus","toast","success","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","length","type","stop","_x","apply","arguments","postDataToApi","_ref3","_callee2","formData","_data$key2","_context2","description","programming_language","main_language","language_others","framework_ver","dependencies","favicon","console","log","postData","_x2","handleReset","resetSelectedData","_useDropzone","useDropzone","multiple","onDrop","acceptedFiles","file","onFileChange","getRootProps","getInputProps","onCropComplete","useCallback","croppedArea","readFile","Promise","resolve","reader","FileReader","addEventListener","result","readAsDataURL","_ref4","_callee3","imageDataUrl","orientation","_context3","getOrientation","getRotatedImage","_x3","useEffect","_store$selectedData$l","logo","Modal","isOpen","toggle","UILoader","blocking","isLoadingAddEdit","isLoadingDetail","loader","Loader","ModalHeader","ModalBody","Form","onSubmit","Row","Col","md","xs","Label","for","Controller","defaultValue","name","render","_ref5","Input","onInput","invalid","code","_ref6","_store$selectedData$c2","_store$selectedData3","disabled","readOnly","Select","theme","selectThemeColors","filter","el","_store$selectedData4","_store$selectedData4$","info","onChange","options","classnames","classNamePrefix","CardBody","margin","Cropper","image","aspect","showGrid","onCropChange","onRotationChange","onZoomChange","restrictPosition","objectFit","DownloadCloud","size","href","onClick","e","preventDefault","Fragment","Slider","min","max","step","Button","outline","_store$selectedData5","_store$selectedData5$","_store$selectedData5$2","_store$selectedData6","_store$selectedData6$","_store$selectedData6$2","_ref7","createImage","url","reject","Image","setAttribute","getRadianAngle","degreeValue","Math","PI","rotateSize","height","rotRad","abs","cos","sin","_getCroppedImg","pixelCrop","flip","asBlob","asFile","canvas","ctx","_rotateSize","bBoxWidth","bBoxHeight","_args","undefined","horizontal","vertical","document","createElement","getContext","abrupt","translate","rotate","scale","drawImage","getImageData","putImageData","toDataURL","toBlob","URL","createObjectURL","_getRotatedImage","_args2"],"mappings":"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","file":"static/js/73.70748a56.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n  useRef,\r\n  createRef\r\n} from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText,\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from \"reactstrap\"\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport { FileText, X, DownloadCloud } from \"react-feather\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select, { components } from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ApiIcon from \"@mui/icons-material/Api\"\r\nimport WebIcon from \"@mui/icons-material/Web\"\r\nimport InstallMobileIcon from \"@mui/icons-material/InstallMobile\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport classnames from \"classnames\"\r\nimport { getOrientation } from \"get-orientation/browser\"\r\nimport {\r\n  getCroppedImg,\r\n  getRotatedImage\r\n} from \"../../../../utility/canvasUtils\"\r\nimport Cropper from \"react-easy-crop\"\r\nimport Slider from \"@mui/material/Slider\"\r\nconst ORIENTATION_TO_ANGLE = {\r\n  3: 180,\r\n  6: 90,\r\n  8: -90\r\n}\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [codeApp, setCodeApp] = useState(\"\")\r\n  const [appType, setAppType] = useState(\"\")\r\n  const [mainLanguage, setMainLanguage] = useState(\"\")\r\n  const [framework, setFramework] = useState(\"\")\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [imageSrc, setImageSrc] = useState(null)\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\r\n  const [rotation, setRotation] = useState(0)\r\n  const [zoom, setZoom] = useState(1)\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n  // const [fileToUpload, setFileToUpload] = useState()\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const { Option } = components\r\n  const IconOption = (props) => (\r\n    <Option {...props}>\r\n      {props.data.icon}\r\n      {props.data.label}\r\n    </Option>\r\n  )\r\n\r\n  const appTypeOptions = [\r\n    {\r\n      value: \"service\",\r\n      label: \"Service\",\r\n      icon: <ApiIcon className=\"me-1\" sixe={32} />\r\n    },\r\n    {\r\n      value: \"web\",\r\n      label: \"Web App\",\r\n      icon: <WebIcon className=\"me-1\" sixe={32} />\r\n    },\r\n    {\r\n      value: \"mobile\",\r\n      label: \"Mobile App\",\r\n      icon: <InstallMobileIcon className=\"me-1\" sixe={32} />\r\n    }\r\n  ]\r\n\r\n  const IconImgOption = (props) => (\r\n    <Option {...props}>\r\n      <img\r\n        className=\"me-1\"\r\n        src={props.data.icon}\r\n        style={{ width: 36 }}\r\n        alt={props.data.label}\r\n      />\r\n      {props.data.label}\r\n    </Option>\r\n  )\r\n\r\n  const appMainLanguageOptions = [\r\n    {\r\n      value: \"python\",\r\n      label: \"Python\",\r\n      icon: \"https://logos-download.com/wp-content/uploads/2016/10/Python_logo_wordmark.png\"\r\n    },\r\n    {\r\n      value: \"javascript\",\r\n      label: \"Javascript\",\r\n      icon: \"https://javascriptsu.files.wordpress.com/2020/12/js.jpg\"\r\n    }\r\n  ]\r\n\r\n  const appFrameworkOptions = [\r\n    {\r\n      value: \"react\",\r\n      label: \"React\",\r\n      icon: \"https://logos-download.com/wp-content/uploads/2016/09/React_logo_wordmark.png\"\r\n    },\r\n    {\r\n      value: \"angular\",\r\n      label: \"Angular\",\r\n      icon: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQgREvN-e1uVZXVDc2w_zLeey0Li4buQ26gF0ZmCYxaBMoybo4uQTncS3Z5WxHRyZNfA&usqp=CAU\"\r\n    },\r\n    {\r\n      value: \"flask\",\r\n      label: \"Flask\",\r\n      icon: \"https://miro.medium.com/max/1079/1*nvtdCw77Al6LgV8wt_ma6Q.png\"\r\n    },\r\n    {\r\n      value: \"flutter\",\r\n      label: \"Flutter\",\r\n      icon: \"https://png.pngitem.com/pimgs/s/480-4803274_google-flutter-hd-png-download.png\"\r\n    }\r\n  ]\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(store.selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const handleInputName = (event) => {\r\n    const value = event.target.value\r\n    const newValue = value\r\n      .replace(/[^a-zA-Z0-9 ]/g, \"\")\r\n      .replaceAll(\" \", \"_\")\r\n      .toLowerCase()\r\n    setCodeApp(newValue)\r\n  }\r\n\r\n  const updateDataToApi = async (data) => {\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        // console.log(rotation)\r\n        // console.log(crop)\r\n        if (\r\n          imageSrc.includes(\"data:image/png;base64\") ||\r\n          crop !== 0 ||\r\n          rotation !== { x: 0, y: 0 }\r\n        ) {\r\n          const croppedImage = await getCroppedImg(\r\n            imageSrc,\r\n            croppedAreaPixels,\r\n            rotation\r\n          )\r\n          data[\"logo\"] = { appLogo: croppedImage }\r\n        }\r\n        // console.log(data)\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = async (formData) => {\r\n    const data = {}\r\n    data[\"name\"] = formData[\"name\"]\r\n    data[\"code\"] = codeApp\r\n    data[\"info\"] = {\r\n      description: formData[\"description\"],\r\n      appType: appType,\r\n      programming_language: {\r\n        main_language: mainLanguage,\r\n        language_others: [],\r\n        framework: framework,\r\n        framework_ver: null,\r\n        dependencies: []\r\n      }\r\n    }\r\n    data[\"logo\"] = {\r\n      appLogo:\r\n        \"https://res.cloudinary.com/insaba/image/upload/v1661262584/app/insaba_starterkit_services/logo.png\",\r\n      favicon:\r\n        \"https://res.cloudinary.com/insaba/image/upload/v1661262584/app/insaba_starterkit_services/favicon.png\"\r\n    }\r\n\r\n    if (imageSrc) {\r\n      const croppedImage = await getCroppedImg(\r\n        imageSrc,\r\n        croppedAreaPixels,\r\n        rotation\r\n      )\r\n      console.log(\"donee\", { croppedImage })\r\n      data[\"logo\"][\"appLogo\"] = croppedImage\r\n    }\r\n    // console.log(data)\r\n\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  // ** UPLOAD\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      const file = acceptedFiles[0]\r\n      onFileChange(file)\r\n    }\r\n  })\r\n\r\n  const handleRemoveAllFiles = (e) => {\r\n    setImageSrc(null)\r\n  }\r\n\r\n  //////CROP\r\n\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels)\r\n  }, [])\r\n\r\n  function readFile(file) {\r\n    return new Promise((resolve) => {\r\n      const reader = new FileReader()\r\n      reader.addEventListener(\"load\", () => resolve(reader.result), false)\r\n      reader.readAsDataURL(file)\r\n    })\r\n  }\r\n\r\n  const onFileChange = async (file) => {\r\n    let imageDataUrl = await readFile(file)\r\n    const orientation = await getOrientation(file)\r\n    const rotation = ORIENTATION_TO_ANGLE[orientation]\r\n    if (rotation) {\r\n      imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\r\n    }\r\n\r\n    setImageSrc(imageDataUrl)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (formState === \"edit\") {\r\n      setImageSrc(store.selectedData.logo.appLogo ?? null)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={8} xs={12}>\r\n                <Row>\r\n                  <Col md={12} xs={12} className=\"mb-1\">\r\n                    <Label className=\"form-label\" for=\"name\">\r\n                      {t(\"App Name\")}\r\n                      <span className=\"text-danger\">*</span>\r\n                    </Label>\r\n                    <Controller\r\n                      defaultValue={store.selectedData?.name ?? \"\"}\r\n                      control={control}\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          {...field}\r\n                          className={\r\n                            errors.name\r\n                              ? \"form-control is-invalid\"\r\n                              : \"form-control\"\r\n                          }\r\n                          onInput={handleInputName}\r\n                          id=\"name\"\r\n                          invalid={errors.name && true}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col md={12} xs={12} className=\"mb-1\">\r\n                    <Label className=\"form-label\" for=\"code\">\r\n                      {t(\"Code\")}\r\n                      <span className=\"text-danger\">*</span>\r\n                    </Label>\r\n                    <Controller\r\n                      defaultValue={store.selectedData?.code ?? codeApp}\r\n                      control={control}\r\n                      id=\"code\"\r\n                      name=\"code\"\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          disabled={true}\r\n                          readOnly={true}\r\n                          {...field}\r\n                          value={store.selectedData?.code ?? codeApp}\r\n                          className={\r\n                            errors.code\r\n                              ? \"form-control is-invalid\"\r\n                              : \"form-control\"\r\n                          }\r\n                          id=\"code\"\r\n                          invalid={errors.code && true}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col md={12} xs={12} className=\"mb-1\">\r\n                    <Label className=\"form-label\" for=\"appType\">\r\n                      {t(\"App Type\")}\r\n                    </Label>\r\n                    <Select\r\n                      id=\"appType\"\r\n                      theme={selectThemeColors}\r\n                      defaultValue={appTypeOptions.filter(\r\n                        (el) => el.value === store.selectedData?.info?.appType\r\n                      )}\r\n                      onChange={(data) => {\r\n                        setAppType(data.value)\r\n                      }}\r\n                      options={appTypeOptions}\r\n                      components={{ Option: IconOption }}\r\n                      className={classnames(\"react-select\", {\r\n                        \"is-invalid\": appType === null\r\n                      })}\r\n                      classNamePrefix=\"select\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n\r\n              <Col md={4} xs={12}>\r\n                {/* <Label className=\"form-label\" for=\"name\">\r\n                  {t(\"App Logo\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label> */}\r\n\r\n                <CardBody\r\n                  style={{ padding: 0, margin: \"auto\" }}\r\n                  className=\"text-center\"\r\n                >\r\n                  {imageSrc && (\r\n                    <div className=\"crop-container2\">\r\n                      <Cropper\r\n                        image={imageSrc}\r\n                        crop={crop}\r\n                        rotation={rotation}\r\n                        zoom={zoom}\r\n                        aspect={1}\r\n                        showGrid={false}\r\n                        onCropChange={setCrop}\r\n                        onRotationChange={setRotation}\r\n                        onCropComplete={onCropComplete}\r\n                        onZoomChange={setZoom}\r\n                        restrictPosition={false}\r\n                        // cropSize={{ width: \"110px\", height: \"110px\" }}\r\n                        objectFit=\"vertical-cover\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {!imageSrc ? (\r\n                    <div {...getRootProps({ className: \"dropzone\" })}>\r\n                      <input {...getInputProps()} />\r\n                      <div className=\"d-flex align-items-center justify-content-center flex-column\">\r\n                        <DownloadCloud size={64} />\r\n                        <h5>{t(\"Drop Files here or click to upload\")}</h5>\r\n                        <p className=\"text-secondary\">\r\n                          {t(\"Drop files here or click\")}{\" \"}\r\n                          <a href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                            {t(\"browse\")}\r\n                          </a>{\" \"}\r\n                          {t(\"through your machine\")}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                  {imageSrc ? (\r\n                    <Fragment>\r\n                      <div className=\"d-flex justify-content-left align-items-center\">\r\n                        <div\r\n                          style={{ width: \"95px\" }}\r\n                          className=\"d-flex flex-column me-1\"\r\n                        >\r\n                          <span>{t(\"Zoom\")}</span>\r\n                        </div>\r\n                        <Slider\r\n                          value={zoom}\r\n                          min={1}\r\n                          max={3}\r\n                          step={0.1}\r\n                          aria-labelledby=\"Zoom\"\r\n                          onChange={(e, zoom) => setZoom(zoom)}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-left align-items-center  mb-1\">\r\n                        <div\r\n                          style={{ width: \"95px\" }}\r\n                          className=\"d-flex flex-column me-1\"\r\n                        >\r\n                          <span>{t(\"Rotation\")}</span>\r\n                        </div>\r\n                        <Slider\r\n                          value={rotation}\r\n                          min={0}\r\n                          max={360}\r\n                          step={1}\r\n                          aria-labelledby=\"Rotation\"\r\n                          onChange={(e, rotation) => setRotation(rotation)}\r\n                        />\r\n                      </div>\r\n\r\n                      {/* <ListGroup className=\"my-2\">{fileList}</ListGroup> */}\r\n                      <div className=\"d-flex justify-content-center\">\r\n                        <Button\r\n                          color=\"danger\"\r\n                          outline\r\n                          onClick={handleRemoveAllFiles}\r\n                        >\r\n                          {t(\"Change\")}\r\n                        </Button>\r\n                      </div>\r\n                    </Fragment>\r\n                  ) : null}\r\n                </CardBody>\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"main_language\">\r\n                  {t(\"Programming Language\")}\r\n                </Label>\r\n                <Select\r\n                  id=\"main_language\"\r\n                  theme={selectThemeColors}\r\n                  defaultValue={appMainLanguageOptions.filter(\r\n                    (el) =>\r\n                      el.value ===\r\n                      store.selectedData?.info?.programming_language\r\n                        ?.main_language\r\n                  )}\r\n                  onChange={(data) => {\r\n                    setMainLanguage(data.value)\r\n                  }}\r\n                  options={appMainLanguageOptions}\r\n                  components={{ Option: IconImgOption }}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"select\"\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"framework\">\r\n                  {t(\"Framework\")}\r\n                </Label>\r\n                <Select\r\n                  id=\"framework\"\r\n                  theme={selectThemeColors}\r\n                  defaultValue={appFrameworkOptions.filter(\r\n                    (el) =>\r\n                      el.value ===\r\n                      store.selectedData?.info?.programming_language?.framework\r\n                  )}\r\n                  onChange={(data) => {\r\n                    setFramework(data.value)\r\n                  }}\r\n                  options={appFrameworkOptions}\r\n                  components={{ Option: IconImgOption }}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"select\"\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Description\")}\r\n                  <span className=\"text-danger\"></span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.name ?? \"\"}\r\n                  control={control}\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      type=\"textarea\"\r\n                      className=\"form-control\"\r\n                      id=\"description\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","export const createImage = (url) =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image()\r\n    image.addEventListener(\"load\", () => resolve(image))\r\n    image.addEventListener(\"error\", (error) => reject(error))\r\n    image.setAttribute(\"crossOrigin\", \"anonymous\") // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  })\r\n\r\nexport function getRadianAngle(degreeValue) {\r\n  return (degreeValue * Math.PI) / 180\r\n}\r\n\r\n/**\r\n * Returns the new bounding area of a rotated rectangle.\r\n */\r\nexport function rotateSize(width, height, rotation) {\r\n  const rotRad = getRadianAngle(rotation)\r\n\r\n  return {\r\n    width:\r\n      Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\r\n    height:\r\n      Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height)\r\n  }\r\n}\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n */\r\nexport async function getCroppedImg(\r\n  imageSrc,\r\n  pixelCrop,\r\n  rotation = 0,\r\n  flip = { horizontal: false, vertical: false },\r\n  asBlob = false,\r\n  asFile = false\r\n) {\r\n  // console.log(imageSrc)\r\n  // console.log(pixelCrop)\r\n  // console.log(asBlob)\r\n\r\n  const image = await createImage(imageSrc)\r\n  const canvas = document.createElement(\"canvas\")\r\n  const ctx = canvas.getContext(\"2d\")\r\n\r\n  if (!ctx) {\r\n    return null\r\n  }\r\n\r\n  const rotRad = getRadianAngle(rotation)\r\n\r\n  // calculate bounding box of the rotated image\r\n  const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\r\n    image.width,\r\n    image.height,\r\n    rotation\r\n  )\r\n\r\n  // set canvas size to match the bounding box\r\n  canvas.width = bBoxWidth\r\n  canvas.height = bBoxHeight\r\n\r\n  // translate canvas context to a central location to allow rotating and flipping around the center\r\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2)\r\n  ctx.rotate(rotRad)\r\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1)\r\n  ctx.translate(-image.width / 2, -image.height / 2)\r\n\r\n  // draw rotated image\r\n  ctx.drawImage(image, 0, 0)\r\n\r\n  // croppedAreaPixels values are bounding box relative\r\n  // extract the cropped image using these values\r\n  const data = ctx.getImageData(\r\n    pixelCrop.x,\r\n    pixelCrop.y,\r\n    pixelCrop.width,\r\n    pixelCrop.height\r\n  )\r\n  // set canvas width to final desired crop size - this will clear existing context\r\n  canvas.width = pixelCrop.width\r\n  canvas.height = pixelCrop.height\r\n\r\n  // paste generated rotate image at the top left corner\r\n  ctx.putImageData(data, 0, 0)\r\n\r\n  if (!asBlob) {\r\n    // As Base64 string\r\n    // return canvas.toDataURL(\"image/jpeg\")\r\n    return canvas.toDataURL(\"image/png\")\r\n  } else if (asFile) {\r\n    // As a blob\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob((file) => {\r\n        resolve(file)\r\n      }, \"image/png\")\r\n    })\r\n  } else {\r\n    // As a blob\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob((file) => {\r\n        resolve(URL.createObjectURL(file))\r\n      }, \"image/png\")\r\n    })\r\n  }\r\n}\r\n\r\nexport async function getRotatedImage(imageSrc, rotation = 0) {\r\n  const image = await createImage(imageSrc)\r\n  const canvas = document.createElement(\"canvas\")\r\n  const ctx = canvas.getContext(\"2d\")\r\n\r\n  const orientationChanged =\r\n    rotation === 90 || rotation === -90 || rotation === 270 || rotation === -270\r\n  if (orientationChanged) {\r\n    canvas.width = image.height\r\n    canvas.height = image.width\r\n  } else {\r\n    canvas.width = image.width\r\n    canvas.height = image.height\r\n  }\r\n\r\n  ctx.translate(canvas.width / 2, canvas.height / 2)\r\n  ctx.rotate((rotation * Math.PI) / 180)\r\n  ctx.drawImage(image, -image.width / 2, -image.height / 2)\r\n\r\n  return new Promise((resolve) => {\r\n    canvas.toBlob((file) => {\r\n      resolve(URL.createObjectURL(file))\r\n    }, \"image/png\")\r\n  })\r\n}\r\n"],"sourceRoot":""}