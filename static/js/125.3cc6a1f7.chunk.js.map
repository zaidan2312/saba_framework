{"version":3,"sources":["views/dashboard/widgets/WidgetLeaveNeedApproval.js","@core/components/ui-loader/index.js","@core/components/avatar-group/index.js","assets/images/illustration/email.svg","../node_modules/@mui/icons-material/InsertInvitationOutlined.js","assets/images/portrait/small/avatar-s-7.jpg"],"names":["params","pagination","clickable","autoplay","delay","disableOnInteraction","WidgetLeaveNeedApproval","t","useTranslation","store","useSelector","state","dynamicStore","dispatch","dynamic_temp_state","useDispatch","colors","useContext","ThemeColors","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","loadingPostPut","setLoadingPostPut","_useState5","_useState6","loadingDelete","setLoadingDelete","_useState7","_useState8","loadingText","setLoadingText","storeName","endpointName","useEffect","_store$pageData$store","_store$pageData$store2","_store$pageData$store3","pageData","data","length","isLoading","getDataList","baseUrl","_store$pageData$store4","_store$pageData$store5","_store$pageData$store6","_store$pageData$store7","_store$pageData$store8","_store$pageData$store9","_store$pageData$store10","_store$pageData$store11","errorToast","res","_res$payload","_res$payload$error","_res$payload4","_res$payload4$error","errorFieldsMsg","payload","error","errors","_res$payload2","_res$payload2$error","errorFields","errorx","_res$payload3","_res$payload3$error","concat","toast","message","style","padding","color","danger","main","border","iconTheme","primary","putDataToApi","id","putDataWidget","then","meta","requestStatus","xxx","success","x","xx","setTimeout","getDataListMyActivity","catch","calendarStrings","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","_jsx","Col","lg","xs","children","_jsxs","Card","minHeight","CardHeader","className","InsertInvitationOutlinedIcon","CardTitle","tag","UILoader","blocking","loader","Loader","CardBody","Badge","pill","Swiper","_objectSpread","map","row","_row$Employee_PhotoPa","SwiperSlide","Avatar","imgClassName","img","Employee_PhotoPath","require","default","imgHeight","imgWidth","Employee_Name","Employee_EmployeeIdNumber","LeaveName","CardText","Reason","Moment","calendar","StartDate","EndDate","Button","Ripple","Spinner","size","type","onClick","e","preventDefault","Id_LeaveState","props","_classnames","overlayColor","Tag","classnames","_defineProperty","Fragment","backgroundColor","defaultProps","AvatarGroup","item","i","title","split","join","linkUrl","ItemTag","Element","undefined","initials","content","Link","to","_interopRequireDefault","Object","defineProperty","exports","value","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/125.3cc6a1f7.chunk.js","sourcesContent":["import Avatar from \"@components/avatar\"\r\nimport AvatarGroup from \"@components/avatar-group\"\r\nimport { Calendar, MapPin, Video } from \"react-feather\"\r\nimport {\r\n  Col,\r\n  Card,\r\n  CardTitle,\r\n  CardBody,\r\n  CardText,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Spinner,\r\n  Badge\r\n} from \"reactstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport illustration from \"@src/assets/images/illustration/email.svg\"\r\nimport { Fragment, useEffect, useMemo, useContext, useState } from \"react\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport Moment from \"react-moment\"\r\nimport \"moment-timezone\"\r\nimport \"moment/locale/id\"\r\nimport { putDataWidget, getDataList } from \"@src/shared/dynamic_pages/store\"\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\"\r\nimport EventAvailableOutlinedIcon from \"@mui/icons-material/EventAvailableOutlined\"\r\nimport toast from \"react-hot-toast\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { getDataList as getDataListMyActivity } from \"@src/views/my-info/store/my_activities\"\r\nimport InsertInvitationOutlinedIcon from \"@mui/icons-material/InsertInvitationOutlined\"\r\n\r\nimport profileImg from \"@src/assets/images/portrait/small/avatar-s-7.jpg\"\r\n\r\nconst params = {\r\n  // navigation: true\r\n  pagination: {\r\n    clickable: true\r\n  },\r\n  autoplay: {\r\n    delay: 10000,\r\n    disableOnInteraction: false\r\n  }\r\n}\r\n\r\nconst WidgetLeaveNeedApproval = () => {\r\n  const { t } = useTranslation()\r\n  // const store = useSelector((state) => state[storeName])\r\n  const store = useSelector((state) => state.dynamicStore)\r\n  const dynamicTempState = useSelector((state) => state.dynamic_temp_state)\r\n  const dispatch = useDispatch()\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingPostPut, setLoadingPostPut] = useState(false)\r\n  const [loadingDelete, setLoadingDelete] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n\r\n  const storeName = \"Leave_needApproval\"\r\n  const endpointName = \"Leave/await\"\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !store.pageData[storeName] ||\r\n      (store.pageData[storeName]?.data?.length === 0 &&\r\n        !store.pageData[storeName]?.isLoading)\r\n    ) {\r\n      dispatch(\r\n        getDataList({\r\n          storeName: storeName,\r\n          endpointName: endpointName,\r\n          baseUrl: \"hr\"\r\n        })\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  const errorToast = (res) => {\r\n    let errorFieldsMsg = \"\"\r\n    if (res?.payload?.error?.errors) {\r\n      const errorFields = res?.payload?.error?.errors\r\n      for (let errorx in res?.payload?.error?.errors) {\r\n        errorFieldsMsg = `${errorFieldsMsg} - ${errorFields[errorx]}\\n`\r\n        // console.log(errorx, errorFields[errorx])\r\n      }\r\n    }\r\n    return toast.error(\r\n      `${res.payload?.error?.message} \\n \\n ${errorFieldsMsg}`,\r\n      {\r\n        style: {\r\n          padding: \"16px\",\r\n          color: colors.danger.main,\r\n          border: `1px solid ${colors.danger.main}`\r\n        },\r\n        iconTheme: {\r\n          primary: colors.danger.main\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const putDataToApi = (data) => {\r\n    setLoadingText(\"Confirming Leave Request\")\r\n    data[\"storeName\"] = storeName\r\n    data[\"endpointName\"] = `Leave/${data.id}`\r\n    data[\"baseUrl\"] = \"hr\"\r\n    delete data.id\r\n    // data[\"callback_page\"] = window.location.href\r\n    dispatch(putDataWidget(data))\r\n      .then((res) => {\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          dispatch(\r\n            getDataList({\r\n              storeName: storeName,\r\n              endpointName: endpointName,\r\n              baseUrl: \"hr\"\r\n            })\r\n          )\r\n            .then((xxx) => {\r\n              toast.success(`${t(\"Successfully Confirming Leave Request\")}}`, {\r\n                style: {\r\n                  padding: \"16px\",\r\n                  color: colors.success.main,\r\n                  border: `1px solid ${colors.success.main}`\r\n                },\r\n                iconTheme: {\r\n                  primary: colors.success.main\r\n                }\r\n              })\r\n            })\r\n            .then((x) => {\r\n              setLoadingPostPut(false)\r\n              setLoadingDelete(false)\r\n            })\r\n            .then((xx) => {\r\n              dispatch(\r\n                getDataList({\r\n                  storeName: \"hr_leave\",\r\n                  endpointName: \"Leave\",\r\n                  baseUrl: \"hr\"\r\n                })\r\n              )\r\n              setTimeout(() => {\r\n                dispatch(getDataListMyActivity({}))\r\n              }, 8000)\r\n            })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          errorToast(res)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.error(error)\r\n        setLoadingPostPut(false)\r\n        errorToast(error)\r\n      })\r\n  }\r\n\r\n  const calendarStrings = {\r\n    lastDay: \"[Yesterday]\",\r\n    sameDay: \"[Today]\",\r\n    nextDay: \"[Tomorrow]\",\r\n    lastWeek: \"[last] dddd\",\r\n    nextWeek: \"dddd\",\r\n    sameElse: \"L\"\r\n  }\r\n\r\n  const toUpperCaseFilter = (d) => {\r\n    return d.toUpperCase()\r\n  }\r\n\r\n  {\r\n    return store.pageData[storeName]?.isLoading ? (\r\n      <Col lg=\"12\" xs=\"12\">\r\n        <Card style={{ minHeight: \"200px\" }}>\r\n          <CardHeader>\r\n            <div className=\"d-flex align-items-center\">\r\n              <InsertInvitationOutlinedIcon className=\"user-timeline-title-icon me-1\" />\r\n              <CardTitle tag=\"h4\">{t(\"Leave Need Approval\")}</CardTitle>\r\n            </div>\r\n          </CardHeader>\r\n          <UILoader blocking={true} loader={<Loader />}>\r\n            <CardBody></CardBody>\r\n          </UILoader>\r\n        </Card>\r\n      </Col>\r\n    ) : store.pageData[storeName]?.data?.length > 0 ? (\r\n      <Col lg=\"12\" xs=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            <div className=\"d-flex align-items-center\">\r\n              <InsertInvitationOutlinedIcon className=\"user-timeline-title-icon me-1\" />\r\n              <CardTitle tag=\"h4\">{t(\"Leave Need Approval\")}</CardTitle>\r\n              {store.pageData[storeName]?.data?.length > 1 && (\r\n                <Badge className=\"ms-1\" tag=\"div\" color=\"danger\" pill>\r\n                  {store.pageData[storeName]?.data?.length}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </CardHeader>\r\n\r\n          <CardBody className=\"px-0 pb-0\">\r\n            <Swiper {...params}>\r\n              {store.pageData[storeName]?.data.map((row) => {\r\n                return (\r\n                  <SwiperSlide key={`swiper_${row.id}`}>\r\n                    <Card className=\"card-apply-job mb-0\">\r\n                      <CardBody>\r\n                        <div className=\"d-flex justify-content-between align-items-center mb-1\">\r\n                          <div className=\"d-flex align-items-center\">\r\n                            <Avatar\r\n                              imgClassName=\"rounded\"\r\n                              className=\"me-75\"\r\n                              img={\r\n                                row?.Employee_PhotoPath ??\r\n                                require(\"@src/assets/images/avatars/avatar-blank.png\")\r\n                                  .default\r\n                              }\r\n                              imgHeight=\"42\"\r\n                              imgWidth=\"42\"\r\n                            />\r\n                            <div className=\"my-auto\">\r\n                              <h6 className=\"mb-0\">{`${row?.Employee_Name}`}</h6>\r\n                              <small className=\"text-muted\">\r\n                                {row?.Employee_EmployeeIdNumber}\r\n                              </small>\r\n                            </div>\r\n                          </div>\r\n                          <Badge color=\"light-primary\" pill>\r\n                            {row?.LeaveName}\r\n                          </Badge>\r\n                        </div>\r\n                        <h5 className=\"apply-job-title\">\r\n                          {t(\r\n                            \"New request for leave from staff that needs to be confirmed.\"\r\n                          )}\r\n                        </h5>\r\n                        <CardText className=\"mb-2\">\r\n                          {t(\"Reason\")} : {row?.Reason}.\r\n                        </CardText>\r\n                        <div className=\"apply-job-package bg-light-primary rounded\">\r\n                          <div>\r\n                            <sup className=\"text-body\">\r\n                              <small>{t(\"period\")} </small>\r\n                            </sup>\r\n                            <h2 className=\"d-inline me-25\">\r\n                              {\r\n                                <Moment calendar={calendarStrings}>\r\n                                  {row?.StartDate}\r\n                                </Moment>\r\n                              }{\" \"}\r\n                              <sub className=\"text-body\">\r\n                                <small> {t(\"until\")}</small>\r\n                              </sub>{\" \"}\r\n                              {\r\n                                <Moment calendar={calendarStrings}>\r\n                                  {row?.EndDate}\r\n                                </Moment>\r\n                              }\r\n                            </h2>\r\n                            {/* <sub className=\"text-body\">\r\n                              <small>/ month</small>\r\n                            </sub> */}\r\n                          </div>\r\n                          {/* <Badge color=\"light-primary\" pill>\r\n                            Full Time\r\n                          </Badge> */}\r\n                        </div>\r\n                        <div className=\"text-end\">\r\n                          {!loadingPostPut &&\r\n                            (!loadingDelete ? (\r\n                              <Button.Ripple\r\n                                color=\"flat-danger me-1\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault()\r\n                                  setLoadingDelete(true)\r\n                                  putDataToApi({\r\n                                    id: row?.id,\r\n                                    Id_LeaveState: \"3\"\r\n                                  })\r\n                                }}\r\n                              >\r\n                                {t(\"Decline\")}\r\n                              </Button.Ripple>\r\n                            ) : (\r\n                              <Button.Ripple color=\"flat-danger me-1\">\r\n                                <Spinner color=\"white\" size=\"sm\" type=\"grow\" />\r\n                                <span className=\"ms-50\">{loadingText}</span>\r\n                              </Button.Ripple>\r\n                            ))}\r\n\r\n                          {!loadingDelete &&\r\n                            (!loadingPostPut ? (\r\n                              <Button.Ripple\r\n                                onClick={(e) => {\r\n                                  e.preventDefault()\r\n                                  setLoadingPostPut(true)\r\n                                  putDataToApi({\r\n                                    id: row?.id,\r\n                                    Id_LeaveState: \"2\"\r\n                                  })\r\n                                }}\r\n                                color=\"gradient-primary\"\r\n                              >\r\n                                {t(\"Confirm\")}\r\n                              </Button.Ripple>\r\n                            ) : (\r\n                              <Button.Ripple color=\"gradient-primary\">\r\n                                <Spinner color=\"white\" size=\"sm\" type=\"grow\" />\r\n                                <span className=\"ms-50\">{loadingText}</span>\r\n                              </Button.Ripple>\r\n                            ))}\r\n                        </div>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </SwiperSlide>\r\n                )\r\n              })}\r\n            </Swiper>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    ) : null\r\n  }\r\n}\r\n\r\nexport default WidgetLeaveNeedApproval\r\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Spinner } from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"./ui-loader.scss\"\r\n\r\nconst UILoader = (props) => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames(\"ui-loader\", {\r\n        [className]: className,\r\n        show: blocking\r\n      })}\r\n    >\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className=\"overlay\" /*eslint-disable */\r\n            {...(blocking && overlayColor\r\n              ? { style: { backgroundColor: overlayColor } }\r\n              : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className=\"loader\">{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: \"div\",\r\n  blocking: false,\r\n  loader: <Spinner color=\"primary\" />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledTooltip } from \"reactstrap\"\r\n\r\n// ** Custom Components Imports\r\nimport Avatar from \"@components/avatar\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst AvatarGroup = (props) => {\r\n  // ** Props\r\n  const { data, tag, className } = props\r\n\r\n  // ** Conditional Tag\r\n  const Tag = tag ? tag : \"div\"\r\n\r\n  // ** Render Data\r\n  const renderData = () => {\r\n    return data.map((item, i) => {\r\n      let id = item?.id\r\n        ? `avatar_${i}_${item.id}`\r\n        : item.title.split(\" \").join(\"-\")\r\n      const linkUrl = item?.linkUrl\r\n      delete item?.linkUrl\r\n      const ItemTag = item.tag ? item.tag : \"div\"\r\n      const Element = (\r\n        <Fragment key={i}>\r\n          {/* {id ? (\r\n            <UncontrolledTooltip placement={item.placement} target={id}>\r\n              {item.title}\r\n            </UncontrolledTooltip>\r\n          ) : null} */}\r\n          {!item.meta ? (\r\n            item?.img ? (\r\n              <Avatar\r\n                tag={ItemTag}\r\n                className={classnames(\"pull-up\", {\r\n                  [item.className]: item.className\r\n                })}\r\n                {...(id ? { id: id } : {})}\r\n                {...item}\r\n                title={undefined}\r\n                meta={undefined}\r\n              />\r\n            ) : (\r\n              <Avatar\r\n                tag={ItemTag}\r\n                initials\r\n                className={classnames(\"pull-up\", {\r\n                  [item.className]: item.className\r\n                })}\r\n                {...(id ? { id: id } : {})}\r\n                color=\"light-primary\"\r\n                content={`${item.title}`}\r\n              />\r\n            )\r\n          ) : null}\r\n          {item.meta ? (\r\n            <ItemTag className=\"d-flex align-items-center ps-1\">\r\n              {item.meta}\r\n            </ItemTag>\r\n          ) : null}\r\n        </Fragment>\r\n      )\r\n      if (linkUrl) {\r\n        return (\r\n          <Link key={`avatar_${i}`} to={linkUrl}>\r\n            {Element}\r\n          </Link>\r\n        )\r\n      } else {\r\n        return Element\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames(\"avatar-group\", {\r\n        [className]: className\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default AvatarGroup\r\n\r\n// ** PropTypes\r\nAvatarGroup.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\r\n}\r\n","export default __webpack_public_path__ + \"static/media/email.6f4a4684.svg\";","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V9h14v10zm0-12H5V5h14v2zm-2 5h-5v5h5v-5z\"\n}), 'InsertInvitationOutlined');\n\nexports.default = _default;","export default __webpack_public_path__ + \"static/media/avatar-s-7.ba3f6823.jpg\";"],"sourceRoot":""}