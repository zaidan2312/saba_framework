{"version":3,"sources":["assets/images/banner/banner-19.jpg","assets/images/banner/banner-20.jpg","views/dashboard/widgets/WidgetAnnouncement.js","@core/components/ui-loader/index.js","../node_modules/@mui/icons-material/esm/Fullscreen.js","../node_modules/@mui/icons-material/esm/FullscreenExit.js","../node_modules/@mui/icons-material/InsertInvitationOutlined.js"],"names":["params","spaceBetween","centeredSlides","autoplay","delay","disableOnInteraction","autoHeight","pagination","clickable","type","bulletClassName","navigation","WidgetAnnouncement","_ref","lg","md","t","useTranslation","store","useSelector","state","dynamicStore","dispatch","useDispatch","navigate","useNavigate","storeName","_useState","useState","_useState2","_slicedToArray","isFullscreen","setIsFullscreen","element","document","getElementById","exitFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","useEffect","_store$pageData$store","_store$pageData$store2","_store$pageData$store3","pageData","data","length","isLoading","getDataList","endpointName","baseUrl","handleKeydown","event","addEventListener","removeEventListener","_store$pageData$store4","_store$pageData$store5","_store$pageData$store6","_store$pageData$store7","imgs","img1","img2","_jsx","Col","xs","children","_jsxs","Card","style","minHeight","CardHeader","className","InsertInvitationOutlinedIcon","CardTitle","padding","fontSize","tag","UILoader","blocking","loader","Loader","CardBody","id","cursor","Button","Ripple","onClick","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","color","FullscreenExit","size","Fullscreen","Swiper","_objectSpread","map","slide","index","_ref2","_slide$img_path","SwiperSlide","backgroundImage","concat","img_path","backgroundSize","backgroundPosition","height","display","flexDirection","alignItems","borderRadius","title","textAlign","maxHeight","dangerouslySetInnerHTML","__html","description","e","props","_classnames","overlayColor","Tag","classnames","_defineProperty","Fragment","backgroundColor","defaultProps","Spinner","createSvgIcon","d","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx"],"mappings":"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","file":"static/js/131.389aa1a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner-19.8c6336b6.jpg\";","export default __webpack_public_path__ + \"static/media/banner-20.76c5efd4.jpg\";","import UILoader from \"@components/ui-loader\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\nimport { getDataList } from \"@src/shared/dynamic_pages/store\"\r\nimport \"moment-timezone\"\r\nimport \"moment/locale/id\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col } from \"reactstrap\"\r\n\r\nimport InsertInvitationOutlinedIcon from \"@mui/icons-material/InsertInvitationOutlined\"\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\"\r\n\r\nimport img2 from \"@src/assets/images/banner/banner-19.jpg\"\r\nimport img1 from \"@src/assets/images/banner/banner-20.jpg\"\r\nimport { Fullscreen, FullscreenExit } from \"@mui/icons-material\"\r\n\r\nconst params = {\r\n  spaceBetween: 30,\r\n  centeredSlides: true,\r\n  autoplay: {\r\n    delay: 7000,\r\n    disableOnInteraction: true\r\n  },\r\n  autoHeight: true,\r\n  pagination: {\r\n    clickable: true,\r\n    type: \"bullets\",\r\n    bulletClassName: \"custom-bullet\"\r\n  },\r\n  navigation: false\r\n}\r\n\r\nconst WidgetAnnouncement = ({ lg, md }) => {\r\n  const { t } = useTranslation()\r\n  // const store = useSelector((state) => state[storeName])\r\n  const store = useSelector((state) => state.dynamicStore)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const storeName = \"widget_announcement\"\r\n  const endpointName = \"api/announcement\"\r\n\r\n  const [isFullscreen, setIsFullscreen] = useState(false)\r\n  const element = document.getElementById(\"announcement-widget-div\")\r\n  // const toggleFullscreen = () => {\r\n  //   if (!isFullscreen) {\r\n  //     if (divElement.requestFullscreen) {\r\n  //       divElement.requestFullscreen()\r\n  //     } else if (divElement.mozRequestFullScreen) {\r\n  //       divElement.mozRequestFullScreen()\r\n  //     } else if (divElement.webkitRequestFullscreen) {\r\n  //       divElement.webkitRequestFullscreen()\r\n  //     } else if (divElement.msRequestFullscreen) {\r\n  //       divElement.msRequestFullscreen()\r\n  //     }\r\n  //   } else {\r\n  //     if (\r\n  //       document.fullscreenElement ||\r\n  //       document.mozFullScreenElement ||\r\n  //       document.webkitFullscreenElement ||\r\n  //       document.msFullscreenElement\r\n  //     ) {\r\n  //       if (document.exitFullscreen) {\r\n  //         document.exitFullscreen()\r\n  //       } else if (document.mozCancelFullScreen) {\r\n  //         document.mozCancelFullScreen()\r\n  //       } else if (document.webkitExitFullscreen) {\r\n  //         document.webkitExitFullscreen()\r\n  //       } else if (document.msExitFullscreen) {\r\n  //         document.msExitFullscreen()\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   setIsFullscreen(!isFullscreen)\r\n  // }\r\n\r\n  const requestFullscreen = () => {\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen()\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen()\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen()\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen()\r\n    }\r\n\r\n    setIsFullscreen(true)\r\n  }\r\n\r\n  const exitFullscreen = () => {\r\n    if (\r\n      document.fullscreenElement ||\r\n      document.mozFullScreenElement ||\r\n      document.webkitFullscreenElement ||\r\n      document.msFullscreenElement\r\n    ) {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen()\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen()\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen()\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen()\r\n      }\r\n    }\r\n\r\n    setIsFullscreen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !store.pageData[storeName] ||\r\n      (store.pageData[storeName]?.data?.length === 0 &&\r\n        !store.pageData[storeName]?.isLoading)\r\n    ) {\r\n      dispatch(\r\n        getDataList({\r\n          storeName: storeName,\r\n          endpointName: endpointName,\r\n          baseUrl: \"sso\"\r\n        })\r\n      )\r\n    }\r\n\r\n    const handleKeydown = (event) => {\r\n      if (document.fullscreenElement === null) {\r\n        exitFullscreen()\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"fullscreenchange\", handleKeydown)\r\n    return () => {\r\n      document.removeEventListener(\"fullscreenchange\", handleKeydown)\r\n    }\r\n  }, [isFullscreen])\r\n\r\n  const imgs = [img1, img2, img1, img2]\r\n  {\r\n    return store.pageData[storeName]?.isLoading ? (\r\n      <Col lg={lg ?? \"12\"} xs=\"12\" md={md ?? \"12\"}>\r\n        <Card style={{ minHeight: \"200px\" }}>\r\n          <CardHeader>\r\n            <div className=\"d-flex align-items-center\">\r\n              <InsertInvitationOutlinedIcon className=\"user-timeline-title-icon me-1\" />\r\n              <CardTitle\r\n                style={{\r\n                  padding: \"20px 20px 5px 20px\",\r\n                  fontSize: \"1.3rem\"\r\n                }}\r\n                tag=\"h4\"\r\n              >\r\n                {t(\"Announcements\")}\r\n              </CardTitle>\r\n            </div>\r\n          </CardHeader>\r\n          <UILoader blocking={true} loader={<Loader />}>\r\n            <CardBody></CardBody>\r\n          </UILoader>\r\n        </Card>\r\n      </Col>\r\n    ) : store.pageData[storeName]?.data?.length > 0 ? (\r\n      <Col lg={lg ?? \"12\"} xs=\"12\" md={md ?? \"12\"}>\r\n        <Card id=\"announcement-widget-div\" className=\"card-announcements-slide\">\r\n          <CardBody\r\n            className=\"text-center p-0\"\r\n            style={{\r\n              cursor: \"pointer\"\r\n            }}\r\n          >\r\n            <Button.Ripple\r\n              onClick={!isFullscreen ? requestFullscreen : exitFullscreen}\r\n              className=\"btn-icon btn-announcement-fs\"\r\n              color=\"flat-secondary\"\r\n            >\r\n              {!isFullscreen ? (\r\n                <Fullscreen size={16} />\r\n              ) : (\r\n                <FullscreenExit size={16} />\r\n              )}\r\n            </Button.Ripple>\r\n\r\n            <Swiper {...params}>\r\n              {store.pageData[storeName]?.data.map((slide, index) => {\r\n                return (\r\n                  <SwiperSlide key={`swiper_${slide.id}`}>\r\n                    <div\r\n                      key={index}\r\n                      style={{\r\n                        backgroundImage: `url(${\r\n                          slide.img_path ?? imgs[index] ?? img1\r\n                        })`,\r\n                        backgroundSize: \"cover\",\r\n                        backgroundPosition: \"center\",\r\n                        height: !isFullscreen ? \"300px\" : \"100vh\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        // justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        borderRadius: \"8px\"\r\n                      }}\r\n                    >\r\n                      <h3\r\n                        style={{\r\n                          color: \"white\",\r\n                          padding: \"20px 20px 5px 20px\",\r\n                          fontSize: \"1.3rem\"\r\n                        }}\r\n                      >\r\n                        {slide.title}\r\n                      </h3>\r\n                      {/* <p\r\n                        style={{\r\n                          color: \"white\",\r\n                          textAlign: \"center\",\r\n                          padding: \"20px\"\r\n                        }}\r\n                      >\r\n                        {slide.description.length > 800\r\n                          ? `${slide.description.substring(0, 800)}...`\r\n                          : slide.description}\r\n                      </p> */}\r\n                      <div\r\n                        className=\"slide-container-announcement\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          textAlign: \"center\",\r\n                          padding: \"5px 20px 0 20px\",\r\n                          maxHeight: !isFullscreen ? \"228px\" : \"100vh\"\r\n                        }}\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: slide?.description\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"slide-overlay\"></div>\r\n                    <Button.Ripple\r\n                      onClick={(e) => {\r\n                        navigate(\r\n                          `/dyn_pages/my_info/announcements/view/${slide.id}?refresh=1&isOrigin=true`\r\n                        )\r\n                      }}\r\n                      className=\"round btn-announcement-card\"\r\n                      color=\"secondary\"\r\n                    >\r\n                      {t(\"Read more\")}...\r\n                    </Button.Ripple>\r\n                  </SwiperSlide>\r\n                )\r\n              })}\r\n            </Swiper>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    ) : null\r\n  }\r\n}\r\n\r\nexport default WidgetAnnouncement\r\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Spinner } from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"./ui-loader.scss\"\r\n\r\nconst UILoader = (props) => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames(\"ui-loader\", {\r\n        [className]: className,\r\n        show: blocking\r\n      })}\r\n    >\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className=\"overlay\" /*eslint-disable */\r\n            {...(blocking && overlayColor\r\n              ? { style: { backgroundColor: overlayColor } }\r\n              : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className=\"loader\">{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: \"div\",\r\n  blocking: false,\r\n  loader: <Spinner color=\"primary\" />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}), 'Fullscreen');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"\n}), 'FullscreenExit');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V9h14v10zm0-12H5V5h14v2zm-2 5h-5v5h5v-5z\"\n}), 'InsertInvitationOutlined');\n\nexports.default = _default;"],"sourceRoot":""}