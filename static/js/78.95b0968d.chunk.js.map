{"version":3,"sources":["views/apps/permission_menu/modal/index.js"],"names":["ModalAddEdit","_ref","show","setShow","detailPage","formState","setFormState","t","useTranslation","id","useParams","colors","useContext","ThemeColors","_useState","useState","_useState2","_slicedToArray","setLoadingText","dispatch","useDispatch","allStore","useSelector","state","_useState3","_useState4","dynamicComponents","setDynamicComponents","_useState5","_useState6","formDatas","_useState7","_useState8","formDatasError","setFormDatasError","_useForm","useForm","setError","control","handleSubmit","handleReset","errors","resetSelectedData","handleChangeInputs","value","fieldName","isMulti","arguments","length","undefined","index","indexOf","splice","push","_objectSpread","_defineProperty","useEffect","componentsImport","dynamicFormRelation","dynamicForm","filter","el","type","_loop","i","_dynamicFormRelation$","_dynamicFormRelation$2","_allStore$storeName","_dynamicFormRelation$3","_dynamicFormRelation$4","path_name","replaceAll","MyComponent","lazy","concat","_jsx","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","isMultiSelection","lookupMode_onChange","lookupMode_defaultValue","isM2MDefValFromGrid","storeName","data","map","x","selectedData","lookupMode_isM2MDefValFromGrid","Modal","isOpen","toggle","className","children","_jsxs","UILoader","blocking","isLoadingAddEdit","isLoadingDetail","loader","Loader","ModalHeader","ModalBody","pageTitle","Form","onSubmit","storeData","sortedObject","key","JSON","stringify","countChanges","Object","values","every","field","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","_data$key","icon","postData","errorFields","assign","_formDatas$key","Row","item","includes","_item$fieldLabel","_formDatas$item$field","Col","md","xs","Label","for","fieldLabel","Suspense","fallback","textAlign","Button","outline","onClick"],"mappings":"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","file":"static/js/78.95b0968d.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport store, {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById,\r\n  dynamicForm\r\n} from \"../store\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\nimport { getDataList as getDataListApp } from \"../../app/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n// import List from \"../../menu\"\r\n// import {List as PermissionComponent} from \"../../permission\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const dispatch = useDispatch()\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicComponents, setDynamicComponents] = useState({})\r\n  const [formDatas, setFormDatas] = useState({})\r\n  const [formDatasError, setFormDatasError] = useState({})\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = () => {\r\n    if (countChanges(formDatas)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = () => {\r\n    if (\r\n      Object.values(formDatas).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(formDatas)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      // console.log(\"ERORR\")\r\n      // console.log(formDatas)\r\n      let errorFields = Object.assign({}, formDatasError)\r\n      for (let key in formDatas) {\r\n        // console.log(key, formDatas[key])\r\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\r\n          errorFields[key] = true\r\n        }\r\n      }\r\n      // console.log(errorFields)\r\n      setFormDatasError(errorFields)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\r\n    // console.log(value, fieldName, isMulti)\r\n    if (isMulti) {\r\n      if (formDatas[fieldName]) {\r\n        const index = formDatas[fieldName].indexOf(value)\r\n        if (index !== -1) {\r\n          formDatas[fieldName].splice(index, 1)\r\n        } else {\r\n          formDatas[fieldName].push(value)\r\n        }\r\n      } else {\r\n        formDatas[fieldName] = [value]\r\n      }\r\n    } else {\r\n      formDatas[fieldName] = value\r\n    }\r\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // DYNAMIC IMPORT COMPONENTS\r\n    let componentsImport = {}\r\n    const dynamicFormRelation = dynamicForm.filter(function (el) {\r\n      return el.type === \"dropdown\" || el.type === \"table\"\r\n    })\r\n\r\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\r\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\r\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\r\n        \"id_\",\r\n        \"\"\r\n      )\r\n\r\n      formDatas[fieldName] = null\r\n      formDatasError[fieldName] = false\r\n      const MyComponent = lazy(() => import(`../../${path_name}`))\r\n      componentsImport[`${path_name}_comp`] = (\r\n        <MyComponent\r\n          lookupMode={true}\r\n          lookupMode_fieldName={fieldName}\r\n          lookupMode_dropdown={dynamicFormRelation[i][\"type\"] === \"dropdown\"}\r\n          lookupMode_isMulti={dynamicFormRelation[i].isMultiSelection ?? false}\r\n          lookupMode_onChange={handleChangeInputs}\r\n          lookupMode_defaultValue={\r\n            dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n              ? allStore[storeName].data.map((x) => x[fieldName])\r\n              : allStore[storeName]?.selectedData\r\n              ? allStore[storeName].selectedData[fieldName]\r\n              : \"\"\r\n          }\r\n          lookupMode_isM2MDefValFromGrid={\r\n            dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\r\n          }\r\n        />\r\n      )\r\n    }\r\n\r\n    setDynamicComponents(componentsImport)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={\r\n          allStore[storeName].isLoadingAddEdit ||\r\n          allStore[storeName].isLoadingDetail\r\n        }\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              {dynamicForm.map((item, index) => {\r\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\r\n                  const path_name = item.fieldName.replaceAll(\"id_\", \"\")\r\n                  return (\r\n                    <Col key={path_name} md={12} xs={12}>\r\n                      <Label className=\"form-label\" for={item.fieldName}>\r\n                        {t(item.fieldLabel ?? \"\")}\r\n                      </Label>\r\n                      <Suspense fallback={<div>Loading...</div>}>\r\n                        <div\r\n                          className={\r\n                            !formDatasError[item.fieldName]\r\n                              ? \"dynamicForm_input\"\r\n                              : \"dynamicForm_input dynamicForm_input_invalid\"\r\n                          }\r\n                        >\r\n                          {dynamicComponents[`${path_name}_comp`]}\r\n                          {item?.isM2MDefValFromGrid &&\r\n                            formDatas[item.fieldName] && (\r\n                              <div\r\n                                style={{ textAlign: \"right\" }}\r\n                                className=\"text-primary\"\r\n                              >\r\n                                {formDatas[item.fieldName]?.length}{\" \"}\r\n                                {t(item.fieldLabel)} {t(\"Selected\")}\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </Suspense>\r\n                    </Col>\r\n                  )\r\n                }\r\n              })}\r\n\r\n              {/* <Col md={12} xs={12}>\r\n                <List lookupMode={true} lookupMode_isMulti={true} />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"id_permission\">\r\n                  {t(\"Permission\")}\r\n                </Label>\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                  {dynamicComponents[\"permission_comp\"]}\r\n                </Suspense>\r\n              </Col> */}\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n"],"sourceRoot":""}