{"version":3,"sources":["views/apps/user/columns.js"],"names":["renderClient","row","avatar","_jsx","Avatar","className","img","width","height","initials","color","avatarColor","content","name","statusObj","pending","active","inactive","Columns","useTranslation","t","sortable","minWidth","sortField","selector","cell","_jsxs","children","Link","to","concat","id","email","role_name","roleObj","subscriber","class","icon","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","size","renderRole","billing","Moment","joined_date","format","is_active","Badge","pill","UncontrolledDropdown","DropdownToggle","tag","MoreVertical","DropdownMenu","end","DropdownItem","onClick","store","dispatch","getUser","FileText","href","e","preventDefault","Archive","deleteUser","Trash2"],"mappings":"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","file":"static/js/84.04dc5c59.chunk.js","sourcesContent":["import { useTranslation } from \"react-i18next\"\r\n\r\n// ** React Imports\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Custom Components\r\nimport Avatar from \"@components/avatar\"\r\n\r\n// ** Store & Actions\r\nimport { store } from \"@store/store\"\r\nimport { getUser, deleteUser } from \"@src/views/apps/user/store\"\r\n\r\n// ** Icons Imports\r\nimport {\r\n  Slack,\r\n  User,\r\n  Settings,\r\n  Database,\r\n  Edit2,\r\n  MoreVertical,\r\n  FileText,\r\n  Trash2,\r\n  Archive\r\n} from \"react-feather\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Badge,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\"\r\n\r\nimport Moment from \"moment\"\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = (row) => {\r\n  if (row.avatar) {\r\n    return <Avatar className=\"me-1\" img={row.avatar} width=\"32\" height=\"32\" />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className=\"me-1\"\r\n        color={row.avatarColor || \"light-primary\"}\r\n        content={row.name || \"John Doe\"}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = (row) => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: \"text-primary\",\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: \"text-success\",\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: \"text-info\",\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: \"text-warning\",\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: \"text-danger\",\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role_name] ? roleObj[row.role_name].icon : Edit2\r\n\r\n  return (\r\n    <span className=\"text-truncate text-capitalize align-middle\">\r\n      <Icon\r\n        size={18}\r\n        className={`${\r\n          roleObj[row.role_name] ? roleObj[row.role_name].class : \"\"\r\n        } me-50`}\r\n      />\r\n      {row.role_name}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst renderName = (name) => {\r\n  // ** Hooks\r\n  // const { t } = useTranslation()\r\n\r\n  // const { t } = useTranslation()\r\n  // console.log(t(name))\r\n  return name\r\n}\r\n\r\nconst statusObj = {\r\n  pending: \"light-warning\",\r\n  active: \"light-success\",\r\n  inactive: \"light-secondary\"\r\n}\r\n\r\nconst Columns = () => {\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n\r\n  return [\r\n    {\r\n      name: renderName(\"User\"),\r\n      sortable: true,\r\n      minWidth: \"300px\",\r\n      sortField: \"name\",\r\n      selector: (row) => row.name,\r\n      cell: (row) => (\r\n        <div className=\"d-flex justify-content-left align-items-center\">\r\n          {renderClient(row)}\r\n          <div className=\"d-flex flex-column\">\r\n            <Link\r\n              to={`/apps/user/view/${row.id}`}\r\n              className=\"user_name text-truncate text-body\"\r\n              // onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <span className=\"fw-bolder\">{row.name}</span>\r\n            </Link>\r\n            <small className=\"text-truncate text-muted mb-0\">{row.email}</small>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      sortable: true,\r\n      minWidth: \"172px\",\r\n      sortField: \"role_name\",\r\n      selector: (row) => row.role_name,\r\n      cell: (row) => renderRole(row)\r\n    },\r\n    // {\r\n    //   name: \"Unit\",\r\n    //   minWidth: \"138px\",\r\n    //   sortable: true,\r\n    //   sortField: \"unit\",\r\n    //   selector: (row) => row.currentPlan,\r\n    //   cell: (row) => <span className=\"text-capitalize\">{row.currentPlan}</span>\r\n    // },\r\n    {\r\n      name: \"Joined Date\",\r\n      minWidth: \"230px\",\r\n      sortable: true,\r\n      sortField: \"joined_date\",\r\n      selector: (row) => row.billing,\r\n      cell: (row) => (\r\n        <span className=\"text-capitalize\">\r\n          {Moment(row.joined_date).format(\"DD MMM YYYY\")}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      minWidth: \"138px\",\r\n      sortable: true,\r\n      sortField: \"status\",\r\n      selector: (row) => row.is_active,\r\n      cell: (row) => (\r\n        <Badge\r\n          className=\"text-capitalize\"\r\n          color={statusObj[row.is_active ? \"active\" : \"inactive\"]}\r\n          pill\r\n        >\r\n          {row.is_active ? \"active\" : \"inactive\"}\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      minWidth: \"100px\",\r\n      cell: (row) => (\r\n        <div className=\"column-action\">\r\n          <UncontrolledDropdown>\r\n            <DropdownToggle tag=\"span\">\r\n              <MoreVertical size={14} className=\"cursor-pointer\" />\r\n            </DropdownToggle>\r\n            <DropdownMenu end>\r\n              <DropdownItem\r\n                tag={Link}\r\n                className=\"w-100\"\r\n                to={`/apps/user/view/${row.id}`}\r\n                onClick={() => store.dispatch(getUser(row.id))}\r\n              >\r\n                <FileText size={14} className=\"me-50\" />\r\n                <span className=\"align-middle\">Details</span>\r\n              </DropdownItem>\r\n              <DropdownItem\r\n                tag=\"a\"\r\n                href=\"/\"\r\n                className=\"w-100\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <Archive size={14} className=\"me-50\" />\r\n                <span className=\"align-middle\">Edit</span>\r\n              </DropdownItem>\r\n              <DropdownItem\r\n                tag=\"a\"\r\n                href=\"/\"\r\n                className=\"w-100\"\r\n                onClick={(e) => {\r\n                  e.preventDefault()\r\n                  store.dispatch(deleteUser(row.id))\r\n                }}\r\n              >\r\n                <Trash2 size={14} className=\"me-50\" />\r\n                <span className=\"align-middle\">Delete</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n}\r\nexport default Columns\r\n// export const columns = [\r\n//   {\r\n//     name: renderName(\"User\"),\r\n//     sortable: true,\r\n//     minWidth: \"300px\",\r\n//     sortField: \"name\",\r\n//     selector: (row) => row.name,\r\n//     cell: (row) => (\r\n//       <div className=\"d-flex justify-content-left align-items-center\">\r\n//         {renderClient(row)}\r\n//         <div className=\"d-flex flex-column\">\r\n//           <Link\r\n//             to={`/apps/user/view/${row.id}`}\r\n//             className=\"user_name text-truncate text-body\"\r\n//             // onClick={() => store.dispatch(getUser(row.id))}\r\n//           >\r\n//             <span className=\"fw-bolder\">{row.name}</span>\r\n//           </Link>\r\n//           <small className=\"text-truncate text-muted mb-0\">{row.email}</small>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   },\r\n//   {\r\n//     name: \"Role\",\r\n//     sortable: true,\r\n//     minWidth: \"172px\",\r\n//     sortField: \"role_name\",\r\n//     selector: (row) => row.role_name,\r\n//     cell: (row) => renderRole(row)\r\n//   },\r\n//   // {\r\n//   //   name: \"Unit\",\r\n//   //   minWidth: \"138px\",\r\n//   //   sortable: true,\r\n//   //   sortField: \"unit\",\r\n//   //   selector: (row) => row.currentPlan,\r\n//   //   cell: (row) => <span className=\"text-capitalize\">{row.currentPlan}</span>\r\n//   // },\r\n//   {\r\n//     name: \"Joined Date\",\r\n//     minWidth: \"230px\",\r\n//     sortable: true,\r\n//     sortField: \"joined_date\",\r\n//     selector: (row) => row.billing,\r\n//     cell: (row) => (\r\n//       <span className=\"text-capitalize\">\r\n//         {Moment(row.joined_date).format(\"DD MMM YYYY\")}\r\n//       </span>\r\n//     )\r\n//   },\r\n//   {\r\n//     name: \"Status\",\r\n//     minWidth: \"138px\",\r\n//     sortable: true,\r\n//     sortField: \"status\",\r\n//     selector: (row) => row.is_active,\r\n//     cell: (row) => (\r\n//       <Badge\r\n//         className=\"text-capitalize\"\r\n//         color={statusObj[row.is_active ? \"active\" : \"inactive\"]}\r\n//         pill\r\n//       >\r\n//         {row.is_active ? \"active\" : \"inactive\"}\r\n//       </Badge>\r\n//     )\r\n//   },\r\n//   {\r\n//     name: \"Actions\",\r\n//     minWidth: \"100px\",\r\n//     cell: (row) => (\r\n//       <div className=\"column-action\">\r\n//         <UncontrolledDropdown>\r\n//           <DropdownToggle tag=\"span\">\r\n//             <MoreVertical size={14} className=\"cursor-pointer\" />\r\n//           </DropdownToggle>\r\n//           <DropdownMenu end>\r\n//             <DropdownItem\r\n//               tag={Link}\r\n//               className=\"w-100\"\r\n//               to={`/apps/user/view/${row.id}`}\r\n//               onClick={() => store.dispatch(getUser(row.id))}\r\n//             >\r\n//               <FileText size={14} className=\"me-50\" />\r\n//               <span className=\"align-middle\">{t(\"Details\")}</span>\r\n//             </DropdownItem>\r\n//             <DropdownItem\r\n//               tag=\"a\"\r\n//               href=\"/\"\r\n//               className=\"w-100\"\r\n//               onClick={(e) => e.preventDefault()}\r\n//             >\r\n//               <Archive size={14} className=\"me-50\" />\r\n//               <span className=\"align-middle\">{t(\"Edit\")}</span>\r\n//             </DropdownItem>\r\n//             <DropdownItem\r\n//               tag=\"a\"\r\n//               href=\"/\"\r\n//               className=\"w-100\"\r\n//               onClick={(e) => {\r\n//                 e.preventDefault()\r\n//                 store.dispatch(deleteUser(row.id))\r\n//               }}\r\n//             >\r\n//               <Trash2 size={14} className=\"me-50\" />\r\n//               <span className=\"align-middle\">{t(\"Delete\")}</span>\r\n//             </DropdownItem>\r\n//           </DropdownMenu>\r\n//         </UncontrolledDropdown>\r\n//       </div>\r\n//     )\r\n//   }\r\n// ]\r\n"],"sourceRoot":""}