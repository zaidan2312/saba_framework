{"version":3,"sources":["views/apps/roles-permissions/roles/columns.js"],"names":["renderClient","row","avatar","length","_jsx","Avatar","className","img","width","height","initials","content","fullName","color","avatarColor","statusObj","pending","active","inactive","columns","name","sortable","minWidth","sortField","selector","cell","_jsxs","children","Link","to","concat","id","onClick","store","dispatch","getUser","email","role_name","roleObj","subscriber","class","icon","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","size","renderRole","currentPlan","_ref","billing","_defineProperty","status","Badge","pill","Eye"],"mappings":"qTAiBMA,EAAe,SAACC,GACpB,OAAIA,EAAIC,OAAOC,OACNC,cAACC,IAAM,CAACC,UAAU,OAAOC,IAAKN,EAAIC,OAAQM,MAAM,KAAKC,OAAO,OAGjEL,cAACC,IAAM,CACLK,UAAQ,EACRJ,UAAU,OACVK,QAASV,EAAIW,UAAY,WACzBC,MAAOZ,EAAIa,aAAe,mBA8C5BC,EAAY,CAChBC,QAAS,gBACTC,OAAQ,gBACRC,SAAU,mBAGCC,EAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVC,SAAU,QACVC,UAAW,WACXC,SAAU,SAACvB,GAAG,OAAKA,EAAIW,UACvBa,KAAM,SAACxB,GAAG,OACRyB,eAAA,OAAKpB,UAAU,iDAAgDqB,SAAA,CAC5D3B,EAAaC,GACdyB,eAAA,OAAKpB,UAAU,qBAAoBqB,SAAA,CACjCvB,cAACwB,IAAI,CACHC,GAAE,mBAAAC,OAAqB7B,EAAI8B,IAC3BzB,UAAU,oCACV0B,QAAS,kBAAMC,IAAMC,SAASC,kBAAQlC,EAAI8B,MAAKJ,SAE/CvB,cAAA,QAAME,UAAU,UAASqB,SAAE1B,EAAIW,aAEjCR,cAAA,SAAOE,UAAU,gCAA+BqB,SAAE1B,EAAImC,gBAK9D,CACEhB,KAAM,OACNC,UAAU,EACVC,SAAU,QACVC,UAAW,OACXC,SAAU,SAACvB,GAAG,OAAKA,EAAIoC,WACvBZ,KAAM,SAACxB,GAAG,OA1EK,SAACA,GAClB,IAAMqC,EAAU,CACdC,WAAY,CACVC,MAAO,eACPC,KAAMC,KAERC,WAAY,CACVH,MAAO,eACPC,KAAMG,KAERC,OAAQ,CACNL,MAAO,YACPC,KAAMK,KAERC,OAAQ,CACNP,MAAO,eACPC,KAAMO,KAERC,MAAO,CACLT,MAAO,cACPC,KAAMS,MAIJC,EAAOb,EAAQrC,EAAIoC,WAAaC,EAAQrC,EAAIoC,WAAWI,KAAOK,IAEpE,OACEpB,eAAA,QAAMpB,UAAU,6CAA4CqB,SAAA,CAC1DvB,cAAC+C,EAAI,CACHC,KAAM,GACN9C,UAAS,GAAAwB,OACPQ,EAAQrC,EAAIoC,WAAaC,EAAQrC,EAAIoC,WAAWG,MAAQ,GAAE,YAG7DvC,EAAIoC,aAwCQgB,CAAWpD,KAE5B,CACEmB,KAAM,OACNC,UAAU,EACVC,SAAU,QACVC,UAAW,cACXC,SAAU,SAACvB,GAAG,OAAKA,EAAIqD,aACvB7B,KAAM,SAACxB,GAAG,OAAKG,cAAA,QAAME,UAAU,kBAAiBqB,SAAE1B,EAAIqD,iBACvDC,EAAA,CAECnC,KAAM,UACNC,UAAU,EACVC,SAAU,QACVC,UAAW,UACXC,SAAU,SAACvB,GAAG,OAAKA,EAAIuD,UAAOC,YAAAF,EAAC,YACpB,WAASE,YAAAF,EAAC,YACX,SAACtD,GAAG,OAAKA,EAAIuD,WAAOC,YAAAF,EAAC,QACzB,SAACtD,GAAG,OAAKG,cAAA,QAAME,UAAU,kBAAiBqB,SAAE1B,EAAIuD,aAAeD,GAEvE,CACEnC,KAAM,SACNC,UAAU,EACVC,SAAU,QACVC,UAAW,SACXC,SAAU,SAACvB,GAAG,OAAKA,EAAIyD,QACvBjC,KAAM,SAACxB,GAAG,OACRG,cAACuD,IAAK,CAACrD,UAAU,kBAAkBO,MAAOE,EAAUd,EAAIyD,QAASE,MAAI,EAAAjC,SAClE1B,EAAIyD,WAIX,CACEtC,KAAM,UACNE,SAAU,QACVG,KAAM,SAACxB,GAAG,OACRG,cAACwB,IAAI,CAACC,GAAE,mBAAAC,OAAqB7B,EAAI8B,IAAKJ,SACpCvB,cAACyD,IAAG,CAACvD,UAAU","file":"static/js/80.5f5e3a6c.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Custom Components\r\nimport Avatar from \"@components/avatar\"\r\n\r\n// ** Store & Actions\r\nimport { store } from \"@store/store\"\r\nimport { getUser } from \"@src/views/apps/user/store\"\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, Eye } from \"react-feather\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from \"reactstrap\"\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = (row) => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className=\"me-1\" img={row.avatar} width=\"32\" height=\"32\" />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className=\"me-1\"\r\n        content={row.fullName || \"John Doe\"}\r\n        color={row.avatarColor || \"light-primary\"}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = (row) => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: \"text-primary\",\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: \"text-success\",\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: \"text-info\",\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: \"text-warning\",\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: \"text-danger\",\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role_name] ? roleObj[row.role_name].icon : Edit2\r\n\r\n  return (\r\n    <span className=\"text-truncate text-capitalize align-middle\">\r\n      <Icon\r\n        size={18}\r\n        className={`${\r\n          roleObj[row.role_name] ? roleObj[row.role_name].class : \"\"\r\n        } me-50`}\r\n      />\r\n      {row.role_name}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: \"light-warning\",\r\n  active: \"light-success\",\r\n  inactive: \"light-secondary\"\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: \"Name\",\r\n    sortable: true,\r\n    minWidth: \"297px\",\r\n    sortField: \"fullName\",\r\n    selector: (row) => row.fullName,\r\n    cell: (row) => (\r\n      <div className=\"d-flex justify-content-left align-items-center\">\r\n        {renderClient(row)}\r\n        <div className=\"d-flex flex-column\">\r\n          <Link\r\n            to={`/apps/user/view/${row.id}`}\r\n            className=\"user_name text-truncate text-body\"\r\n            onClick={() => store.dispatch(getUser(row.id))}\r\n          >\r\n            <span className=\"fw-bold\">{row.fullName}</span>\r\n          </Link>\r\n          <small className=\"text-truncate text-muted mb-0\">{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: \"Role\",\r\n    sortable: true,\r\n    minWidth: \"172px\",\r\n    sortField: \"role\",\r\n    selector: (row) => row.role_name,\r\n    cell: (row) => renderRole(row)\r\n  },\r\n  {\r\n    name: \"Plan\",\r\n    sortable: true,\r\n    minWidth: \"138px\",\r\n    sortField: \"currentPlan\",\r\n    selector: (row) => row.currentPlan,\r\n    cell: (row) => <span className=\"text-capitalize\">{row.currentPlan}</span>\r\n  },\r\n  {\r\n    name: \"Billing\",\r\n    sortable: true,\r\n    minWidth: \"230px\",\r\n    sortField: \"billing\",\r\n    selector: (row) => row.billing,\r\n    sortField: \"billing\",\r\n    selector: (row) => row.billing,\r\n    cell: (row) => <span className=\"text-capitalize\">{row.billing}</span>\r\n  },\r\n  {\r\n    name: \"Status\",\r\n    sortable: true,\r\n    minWidth: \"138px\",\r\n    sortField: \"status\",\r\n    selector: (row) => row.status,\r\n    cell: (row) => (\r\n      <Badge className=\"text-capitalize\" color={statusObj[row.status]} pill>\r\n        {row.status}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: \"Actions\",\r\n    minWidth: \"100px\",\r\n    cell: (row) => (\r\n      <Link to={`/apps/user/view/${row.id}`}>\r\n        <Eye className=\"font-medium-3 text-body\" />\r\n      </Link>\r\n    )\r\n  }\r\n]\r\n"],"sourceRoot":""}