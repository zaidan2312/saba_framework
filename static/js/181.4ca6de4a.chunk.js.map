{"version":3,"sources":["router/Router.js","App.js","views/apps/unit/store/my_unit.js"],"names":["Error","lazy","Maintenance","Login","NotAuthorized","PublicPage","Router","_ref","loading","_store$getState","layout","useLayout","allRoutes","getRoutes","getHomeRoute","user","getUserData","getHomeRouteForLoggedInUser","role_name","routes","useRoutes","path","index","element","_jsx","Navigate","replace","to","BlankLayout","children","meta","publicRoute","Spinner","concat","_toConsumableArray","initBlank","store","getState","my_menu","dataMyMenu","length","iconList","Object","keys","Icons","filter","key","map","icon","library","add","apply","App","dispatch","useDispatch","effectRan","useRef","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","pingServers","_pingServers","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_sessionStorage$getIt","serversList","wrap","_context2","prev","next","JSON","parse","sessionStorage","getItem","Promise","all","_callee","url","response","_context","fetch","method","sent","abrupt","ok","t0","console","error","stop","_x","useEffect","isUserLoggedIn","window","location","pathname","timer","handleVisibilityChange","datetime","Date","document","hidden","localStorage","setItem","clearInterval","lastTimeStr","timestamp","parseInt","lastTime","diffInSeconds","Math","abs","getTime","log","getMyNotifications","unread_count","then","res","payload","_res$payload$0$count_","_res$payload$","count","count_unread","countFix","title","replaceAll","setInterval","_res$payload$0$count_2","_res$payload$2","addEventListener","removeEventListener","current","getDomainInfo","_res$payload","_res$payload$app","_res$payload2","_res$payload2$unit","_res$payload2$unit$un","_res$payload$unit$uni","_res$payload3","_res$payload3$unit","_res$payload3$unit$un","logoResp","app","logo","favicon","unit","unit_app_attributes","getElementById","href","getAppMenu","_res$meta","requestStatus","getUnits","setTimeout","_res$payload$0$count_3","_res$payload$3","Suspense","fallback","initSelectData","value","label","setUnitSelectedDropdown","createAsyncThunk","data","_ref2","params","rejectWithValue","_yield$JSON$parse$mem","userMember","fetchState","_response","member_of","t1","t2","some","e","children_count","useJwt","ssoAxiosInterceptor","get","total","t3","_x2","getUnit","_ref3","id","axios","_x3","addUnit","_ref5","_callee3","_ref4","_context3","post","units","getAllUnit","_x4","_x5","deleteUnit","_ref7","_callee4","_ref6","_context4","delete","_x6","_x7","MyUnitsSlice","createSlice","name","initialState","crudTitle","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","dataDropdown","selectedUnit","selectedUnitMulti","reducers","setUnitSelected","state","action","_objectSpread","resetAll","extraReducers","builder","addCase","fulfilled","pending","_action$payload","_action$payload2","item","unshift","rejected","message"],"mappings":"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","file":"static/js/181.4ca6de4a.chunk.js","sourcesContent":["// ** Router imports\r\nimport { lazy, useEffect, useState, Suspense } from \"react\"\r\n\r\n// ** Router imports\r\nimport { useRoutes, Navigate } from \"react-router-dom\"\r\n\r\n// ** Layouts\r\nimport BlankLayout from \"@layouts/BlankLayout\"\r\n\r\n// ** Hooks Imports\r\nimport { useLayout } from \"@hooks/useLayout\"\r\n// ** Utils\r\nimport { getUserData, getHomeRouteForLoggedInUser } from \"../utility/Utils\"\r\n\r\n// ** GetRoutes\r\nimport { getRoutes } from \"./routes\"\r\n\r\n// import { useDispatch, useSelector } from \"react-redux\"\r\n// import { isObjEmpty, isUserLoggedIn } from \"@utils\"\r\n// import { getAppMenu, generateRouter } from \"@src/views/apps/menu/store/my_menu\"\r\nimport Spinner from \"../@core/components/spinner/Fallback-spinner\"\r\n// ** Components\r\nconst Error = lazy(() => import(\"../views/pages/misc/Error\"))\r\nconst Maintenance = lazy(() => import(\"../views/pages/misc/Maintenance\"))\r\nconst Login = lazy(() => import(\"../views/pages/authentication/Login\"))\r\nconst NotAuthorized = lazy(() => import(\"../views/pages/misc/NotAuthorized\"))\r\n\r\nconst PublicPage = lazy(() => import(\"@src/shared/public_pages\"))\r\n\r\nimport { store } from \"../redux/store\"\r\n\r\nconst Router = ({ loading }) => {\r\n  // console.log(loading)\r\n  // console.log(store.getState()?.my_menu)\r\n  // console.log(store.getState()?.units)\r\n  // ** Hooks\r\n  const { layout } = useLayout()\r\n  const allRoutes = getRoutes(layout)\r\n  // const [allRoutes, setAllRoutes] = useState([])\r\n\r\n  const getHomeRoute = () => {\r\n    const user = getUserData()\r\n    if (user) {\r\n      return getHomeRouteForLoggedInUser(user.role_name)\r\n    } else {\r\n      return \"/login\"\r\n    }\r\n  }\r\n\r\n  const routes = useRoutes([\r\n    {\r\n      path: \"/\",\r\n      index: true,\r\n      element: <Navigate replace to={getHomeRoute()} />\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      element: <BlankLayout />,\r\n      children: [{ path: \"/login\", element: <Login /> }]\r\n    },\r\n    {\r\n      path: \"/auth/not-auth\",\r\n      element: <BlankLayout />,\r\n      children: [{ path: \"/auth/not-auth\", element: <NotAuthorized /> }]\r\n    },\r\n    {\r\n      path: \"/error\",\r\n      element: <BlankLayout />,\r\n      children: [{ path: \"/error\", element: <Error /> }]\r\n    },\r\n    {\r\n      path: \"/public/:pageId\",\r\n      element: <PublicPage />,\r\n      meta: {\r\n        publicRoute: true,\r\n        layout: \"blank\"\r\n      }\r\n    },\r\n    {\r\n      path: \"/public/:moduleId/:pageId\",\r\n      element: <PublicPage />,\r\n      meta: {\r\n        publicRoute: true,\r\n        layout: \"blank\"\r\n      }\r\n    },\r\n    {\r\n      path: \"*\",\r\n      element: <BlankLayout />,\r\n      // children: [{ path: \"*\", element: <Error /> }]\r\n      children: [{ path: \"*\", element: <Spinner /> }]\r\n    },\r\n    ...allRoutes\r\n  ])\r\n\r\n  const initBlank = useRoutes([\r\n    {\r\n      path: \"/\",\r\n      index: true,\r\n      element: <Navigate replace to={getHomeRoute()} />\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      element: <BlankLayout />,\r\n      children: [{ path: \"/login\", element: <Login /> }]\r\n    },\r\n    {\r\n      path: \"/auth/not-auth\",\r\n      element: <BlankLayout />,\r\n      children: [{ path: \"/auth/not-auth\", element: <NotAuthorized /> }]\r\n    },\r\n    {\r\n      path: \"/error\",\r\n      element: <BlankLayout />,\r\n      children: [{ path: \"/error\", element: <Maintenance /> }]\r\n    },\r\n    {\r\n      path: \"/public/:pageId\",\r\n      element: <PublicPage />,\r\n      meta: {\r\n        publicRoute: true,\r\n        layout: \"blank\"\r\n      }\r\n    },\r\n    {\r\n      path: \"/public/:moduleId/:pageId\",\r\n      element: <PublicPage />,\r\n      meta: {\r\n        publicRoute: true,\r\n        layout: \"blank\"\r\n      }\r\n    },\r\n    // {\r\n    //   path: \"*\",\r\n    //   index: true,\r\n    //   element: <Spinner />\r\n    // }\r\n    {\r\n      path: \"*\",\r\n      element: <BlankLayout />,\r\n      children: [{ path: \"*\", element: <Error /> }]\r\n    }\r\n  ])\r\n\r\n  if (store.getState()?.my_menu.dataMyMenu.length > 0) {\r\n    return routes\r\n  } else {\r\n    return initBlank\r\n  }\r\n}\r\n\r\nexport default Router\r\n","import React, { useEffect, Suspense, useRef, useState } from \"react\"\r\nimport \"@nosferatu500/react-sortable-tree/style.css\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n// ** Router Import\r\nimport Router from \"./router/Router\"\r\n\r\n// ** Spinner (Splash Screen)\r\nimport Spinner from \"./@core/components/spinner/Fallback-spinner\"\r\n\r\nimport { store } from \"./redux/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getDomainInfo } from \"@store/domainInfo\"\r\nimport { getMyNotifications } from \"@store/notifications\"\r\nimport { isUserLoggedIn } from \"@utils\"\r\nimport { getAppMenu } from \"@src/views/apps/menu/store/my_menu\"\r\nimport { getUnits } from \"@src/views/apps/unit/store/my_unit\"\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\r\nimport * as Icons from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst iconList = Object.keys(Icons)\r\n  .filter((key) => key !== \"fas\" && key !== \"prefix\")\r\n  .map((icon) => Icons[icon])\r\n\r\nlibrary.add(...iconList)\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const effectRan = useRef(false)\r\n  const navigate = useNavigate()\r\n\r\n  function getFaviconEl() {\r\n    return document.getElementById(\"favicon\")\r\n  }\r\n\r\n  const [isTabActive, setIsTabActive] = useState(true)\r\n\r\n  async function pingServers() {\r\n    let serversList = JSON.parse(sessionStorage.getItem(\"serversList\") ?? \"[]\")\r\n    // await serversList?.forEach((url) => {\r\n    //   try {\r\n    //     const response = fetch(url, { method: \"HEAD\" })\r\n    //     // console.log(lo)\r\n    //     return response.ok\r\n    //   } catch (error) {\r\n    //     // console.error(error)\r\n    //     return false\r\n    //   }\r\n    // })\r\n    await Promise.all(\r\n      serversList?.map(async (url) => {\r\n        try {\r\n          const response = await fetch(url, { method: \"HEAD\" })\r\n          // console.log(lo)\r\n          return response.ok\r\n        } catch (error) {\r\n          console.error(error)\r\n          // return false\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isUserLoggedIn() !== null && window.location.pathname !== \"/error\") {\r\n      const timeToFetch = 15 //in seconds\r\n      let timer = null\r\n\r\n      const handleVisibilityChange = () => {\r\n        // setIsTabActive(!document.hidden)\r\n        const datetime = new Date()\r\n        if (document.hidden) {\r\n          localStorage.setItem(\"inactive\", Date.parse(datetime) / 1000)\r\n          clearInterval(timer)\r\n        } else {\r\n          const lastTimeStr = localStorage.getItem(\"inactive\")\r\n          const timestamp = parseInt(lastTimeStr, 10)\r\n          const lastTime = new Date(timestamp * 1000)\r\n          const diffInSeconds =\r\n            Math.abs(datetime.getTime() - lastTime.getTime()) / 1000\r\n          if (diffInSeconds >= timeToFetch) {\r\n            console.log(\r\n              `Fetching data after ${diffInSeconds} seconds of inactivity`\r\n            )\r\n            store\r\n              .dispatch(getMyNotifications({ unread_count: 1 }))\r\n              .then((res) => {\r\n                if (res?.payload) {\r\n                  const count = res?.payload[0]?.count_unread ?? 0\r\n                  if (count) {\r\n                    const countFix =\r\n                      count > 0 && count <= 20 ? `(${count})` : \"(20+)\"\r\n                    document.title = `${countFix} ${document.title.replaceAll(\r\n                      countFix,\r\n                      \"\"\r\n                    )}`\r\n                    pingServers()\r\n                  }\r\n                }\r\n              })\r\n          } else {\r\n            timer = setInterval(() => {\r\n              const diffInSeconds =\r\n                Math.abs(datetime.getTime() - lastTime.getTime()) / 1000\r\n              if (diffInSeconds >= timeToFetch) {\r\n                console.log(\r\n                  `Fetching data after ${diffInSeconds} seconds of inactivity`\r\n                )\r\n                store\r\n                  .dispatch(getMyNotifications({ unread_count: 1 }))\r\n                  .then((res) => {\r\n                    if (res?.payload) {\r\n                      const count = res?.payload[0]?.count_unread ?? 0\r\n                      if (count) {\r\n                        const countFix =\r\n                          count > 0 && count <= 20 ? `(${count})` : \"(20+)\"\r\n                        document.title = `${countFix} ${document.title.replaceAll(\r\n                          countFix,\r\n                          \"\"\r\n                        )}`\r\n                      }\r\n                      pingServers()\r\n                    }\r\n                  })\r\n                clearInterval(timer)\r\n              }\r\n            }, 1000)\r\n          }\r\n        }\r\n        // console.log(\r\n        //   `Tab is ${document.hidden ? \"inactive\" : \"active\"} at ${datetime}`\r\n        // )\r\n      }\r\n\r\n      document.addEventListener(\"visibilitychange\", handleVisibilityChange)\r\n\r\n      return () => {\r\n        clearInterval(timer)\r\n        document.removeEventListener(\"visibilitychange\", handleVisibilityChange)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // console.log(effectRan.current)\r\n    if (!effectRan.current) {\r\n      // console.log(\"effect ran - only the FIRST time\")\r\n      dispatch(getDomainInfo({})).then((res) => {\r\n        const logoResp = res.payload?.app?.logo\r\n        // const unitLogox = res.payload?.unit?.attributes?.logo\r\n        // if (logoResp?.appLogo) {\r\n        //   setLogo(logoResp.appLogo)\r\n        // }\r\n        // if (logoResp?.login_img) {\r\n        //   setBackground(logoResp.login_img)\r\n        //   setFavIcon(logoResp?.favicon)\r\n        // }\r\n        if (\r\n          logoResp?.favicon ||\r\n          res.payload?.unit?.unit_app_attributes?.favicon\r\n        ) {\r\n          const favicon = getFaviconEl()\r\n          favicon.href =\r\n            res.payload?.unit?.unit_app_attributes?.favicon ?? logoResp.favicon\r\n        }\r\n\r\n        // const elements = document.querySelectorAll(\"div#root\")\r\n        // const colorToReplace = \"#4186e0\"\r\n        // const newColor = \"#e041ae\"\r\n        // const hexRegex = new RegExp(colorToReplace, \"g\")\r\n        // const body = document.querySelector(\":root\")\r\n        // const bodyHtml = body.innerHTML\r\n        // const newBodyHtml = bodyHtml.replace(hexRegex, newColor)\r\n        // console.log(newBodyHtml)\r\n        // body.innerHTML = newBodyHtml\r\n        // const elements = document.querySelectorAll(\"*\")\r\n        // const colorToReplace = \"#4186e0\"\r\n        // const newColor = \"#e041ae\"\r\n\r\n        // elements.forEach((element) => {\r\n        //   const style = window.getComputedStyle(element)\r\n        //   console.log(style)\r\n        //   if (style.color === colorToReplace) {\r\n        //     element.style.color = newColor\r\n        //   }\r\n        //   if (style.backgroundColor === colorToReplace) {\r\n        //     element.style.backgroundColor = newColor\r\n        //   }\r\n        // })\r\n        // if (unitLogox) {\r\n        //   setUnitLogo(unitLogox)\r\n        // }\r\n\r\n        // const hexRegex = /#[0-9A-Fa-f]{6}|#[0-9A-Fa-f]{3}/g // regex untuk mencari warna hex\r\n        // const body = document.getElementsByTagName(\"body\")[0] // seleksi elemen body\r\n        // const bodyHtml = body.innerHTML // ambil HTML dari elemen body\r\n        // const newBodyHtml = bodyHtml.replace(hexRegex, \"#FF0000\") // ganti semua warna hex dengan warna merah\r\n        // body.innerHTML = newBodyHtml // masukkan kembali HTML yang telah diubah ke dalam elemen body\r\n\r\n        if (window.location.pathname !== \"/error\") {\r\n          if (isUserLoggedIn() !== null) {\r\n            store.dispatch(getAppMenu({})).then((res) => {\r\n              if (res?.meta?.requestStatus !== \"rejected\") {\r\n                //** Sets MEMBER-OF\r\n                // const dispatch = useDispatch()\r\n                // const storeUnit = useSelector((state) => state.units)\r\n                //   if (storeUnit.data?.length === 0 && !storeUnit.isLoading) {\r\n                store.dispatch(getUnits({}))\r\n                // }\r\n                setTimeout(() => {\r\n                  store\r\n                    .dispatch(getMyNotifications({ unread_count: 1 }))\r\n                    .then((res) => {\r\n                      if (res?.payload) {\r\n                        const count = res?.payload[0]?.count_unread ?? 0\r\n                        if (count) {\r\n                          const countFix =\r\n                            count > 0 && count <= 20 ? `(${count})` : \"(20+)\"\r\n                          document.title = `${countFix} ${document.title}`\r\n                        }\r\n                      }\r\n                    })\r\n                }, 2000)\r\n              } else {\r\n                localStorage.setItem(\"lastUrl\", window.location.href)\r\n                navigate(\"/error\")\r\n              }\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    return () => {\r\n      effectRan.current = true\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Suspense fallback={<Spinner />}>\r\n      <Router />\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport { useTranslation } from \"react-i18next\"\r\n// ** Axios Imports\r\n// import axios from \"axios\"\r\n// import useJwt.ssoAxiosInterceptor from \"../../../../shared/SsoAxiosInterceptorsss\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nimport { isUserLoggedIn } from \"@utils\"\r\nimport { bool } from \"prop-types\"\r\n\r\nconst initSelectData = {\r\n  value: \"\",\r\n  label: \"Select Unit\"\r\n}\r\n\r\nexport const setUnitSelectedDropdown = createAsyncThunk(\r\n  \"Units/setUnitSelectedDropdown\",\r\n  (data) => {\r\n    // console.log(data)\r\n    return data\r\n  }\r\n)\r\n\r\nexport const getUnits = createAsyncThunk(\r\n  \"Units/getUnits\",\r\n  async (params, { rejectWithValue }) => {\r\n    params[\"flat_mode\"] = true\r\n    // console.log(\"GET INIT MEMBER-OF START...\")\r\n    if (isUserLoggedIn() !== null) {\r\n      const userMember =\r\n        (await JSON.parse(localStorage.getItem(\"userData\")).member_of) ?? []\r\n\r\n      if (userMember.length > 0) {\r\n        // userMember.unshift(initSelectData)\r\n        let fetchState = false\r\n        if (userMember.some((e) => e.children_count > 0)) {\r\n          fetchState = true\r\n        }\r\n\r\n        if (fetchState) {\r\n          const response = await useJwt.ssoAxiosInterceptor.get(\"/api/unit\", {\r\n            params\r\n          })\r\n          // response.data.data.unshift(initSelectData)\r\n          // console.log(\"GET INIT MEMBER-OF SUCCESS\")\r\n          return {\r\n            params,\r\n            data: response.data.data,\r\n            total: response.data.total\r\n          }\r\n        } else {\r\n          // console.log(\"GET INIT MEMBER-OF SUCCESS\")\r\n          return { data: userMember }\r\n        }\r\n      } else {\r\n        try {\r\n          const response = await useJwt.ssoAxiosInterceptor.get(\"/api/unit\", {\r\n            params\r\n          })\r\n          // response.data.data.unshift(initSelectData)\r\n          // console.log(\"GET INIT MEMBER-OF SUCCESS\")\r\n          return {\r\n            params,\r\n            data: response.data.data,\r\n            total: response.data.total\r\n          }\r\n        } catch (error) {\r\n          // console.error(\"GET INIT MEMBER-OF FAILED!!!\")\r\n          return rejectWithValue(error.response.data)\r\n        }\r\n      }\r\n    }\r\n  }\r\n)\r\n\r\nexport const getUnit = createAsyncThunk(\"Units/getUnit\", async (id) => {\r\n  const response = await axios.get(`/api/unit/${id}`)\r\n  // console.log(response)\r\n  return response.data.data\r\n})\r\n\r\nexport const addUnit = createAsyncThunk(\r\n  \"Units/addUnit\",\r\n  async (unit, { dispatch, getState }) => {\r\n    await axios.post(\"/api/unit\", unit)\r\n    await dispatch(getUnits(getState().units.params))\r\n    await dispatch(getAllUnit())\r\n    return unit\r\n  }\r\n)\r\n\r\nexport const deleteUnit = createAsyncThunk(\r\n  \"Units/deleteUnit\",\r\n  async (id, { dispatch, getState }) => {\r\n    await axios.delete(\"/apps/unit\", { id })\r\n    await dispatch(getUnits(getState().units.params))\r\n    await dispatch(getAllUnit())\r\n    return id\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const MyUnitsSlice = createSlice({\r\n  name: \"Units\",\r\n  initialState: {\r\n    crudTitle: \"Unit\",\r\n\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    //SHARED\r\n    dataDropdown: [],\r\n    selectedUnit: {},\r\n    selectedUnitMulti: []\r\n  },\r\n  reducers: {\r\n    setUnitSelected: (state, action) => {\r\n      // console.log(action)\r\n      console.log(\"setUnitSelected\")\r\n      return { ...state, selectedUnit: action.payload }\r\n    },\r\n    resetAll: (state) => {\r\n      // state.errorSummary = null\r\n      // state.dataSummary = []\r\n      // state.error = null\r\n      state.data = []\r\n      state.dataDropdown = []\r\n      state.total = 1\r\n      state.selectedUnit = null\r\n      state.selectedUnitMulti = null\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(setUnitSelectedDropdown.fulfilled, (state, action) => {\r\n        // state.selectedUnit = action.payload\r\n        console.log(\"setUnitSelectedDropdown\")\r\n        return { ...state, selectedUnit: action.payload }\r\n        // console.log(state.selectedUnit)\r\n        // state.selectedUnit = { ...state.selectedUnit, ...action.payload }\r\n      })\r\n      .addCase(getUnits.pending, (state) => {\r\n        // console.log(\"pending\")\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getUnits.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n\r\n        if (action.payload?.data) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: item.name\r\n          }))\r\n          // console.log(state.dataDropdown)\r\n          state.dataDropdown.unshift(initSelectData)\r\n          if (action.payload?.total) {\r\n            state.total = action.payload.total\r\n          }\r\n          state.selectedUnit = state.dataDropdown[0]\r\n        }\r\n      })\r\n      .addCase(getUnits.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.message\r\n      })\r\n\r\n      .addCase(getUnit.fulfilled, (state, action) => {\r\n        state.selectedUnit = action.payload\r\n      })\r\n  }\r\n})\r\n\r\n// export const { setUnitSelected, resetAll } = UnitsSlice.actions\r\n\r\nexport default MyUnitsSlice.reducer\r\n"],"sourceRoot":""}