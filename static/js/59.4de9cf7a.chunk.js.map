{"version":3,"sources":["views/apps/permission/index.js","views/apps/permission/DropDown.js","@core/components/widgets/stats/StatsHorizontal.js"],"names":["List","_ref","_store$dataSummary2","_store$dataSummary3","_ref$lookupMode","lookupMode","_ref$lookupMode_field","lookupMode_fieldName","_ref$lookupMode_dropd","lookupMode_dropdown","lookupMode_defaultValue","lookupMode_onChange","_ref$lookupMode_isMul","lookupMode_isMulti","_ref$errorState","errorState","t","useTranslation","dispatch","useDispatch","store","useSelector","state","storeName","useEffect","_store$dataSummary","getApiSummaryData","dataSummary","length","isLoadingSummary","getAlwaysGrid","getSummaryData","colors","_jsx","DropDown","_jsxs","Fragment","children","Row","map","item","index","_item$count_format","Col","StatsHorizontal","color","statTitle","concat","title","icon","Icon","baseClassName","fontSize","renderStats","Skeleton","sx","bgcolor","animation","height","width","className","count_format","count","Card","Table","data","isLoading","getDataList","Select","theme","selectThemeColors","defaultValue","dataDropdown","filter","el","value","isMulti","onChange","e","options","classNamePrefix","cardColor","stats","countTextColor","_ref$countTextStyle","countTextStyle","_ref$titleStyle","titleStyle","statsMargin","_ref$solidColor","solidColor","_ref$cardStyle","cardStyle","_ref$titleOnTop","titleOnTop","cardColorFix","_objectSpread","style","inverse","CardBody","classnames","_defineProperty"],"mappings":"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","file":"static/js/59.4de9cf7a.chunk.js","sourcesContent":["import { Fragment, useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Table from \"./Table\"\r\nimport DropDown from \"./DropDown\"\r\nimport { Row, Col, Card } from \"reactstrap\"\r\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\"\r\nimport { User, UserPlus, UserCheck, UserX } from \"react-feather\"\r\nimport Icon from \"@mui/material/Icon\"\r\nimport AddCardOutlinedIcon from \"@mui/icons-material/AddCardOutlined\"\r\nimport \"./style.scss\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport classnames from \"classnames\"\r\nimport Select from \"react-select\"\r\nimport {\r\n  storeName,\r\n  getAlwaysGrid,\r\n  getApiSummaryData,\r\n  getSummaryData\r\n} from \"./store\"\r\nimport { Skeleton } from \"@mui/material\"\r\n\r\nconst List = ({\r\n  lookupMode = false,\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_dropdown = false,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti = false,\r\n  errorState = false\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      getApiSummaryData &&\r\n      (store.dataSummary?.length === 0 ||\r\n        (!store.isLoadingSummary && getAlwaysGrid))\r\n    ) {\r\n      dispatch(getSummaryData({}))\r\n    }\r\n  }, [dispatch, store.dataSummary?.length])\r\n\r\n  const colors = [\r\n    \"primary\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"secondary\"\r\n  ]\r\n\r\n  return !lookupMode_dropdown ? (\r\n    <Fragment>\r\n      <h3>{t(\"Permissions List\")}</h3>\r\n      <p>\r\n        {t(\r\n          \"Each category (Basic, Professional, and Business) includes the four predefined roles shown below.\"\r\n        )}\r\n      </p>\r\n      {!lookupMode && getApiSummaryData && (\r\n        <Row>\r\n          {store.dataSummary?.map((item, index) => {\r\n            return (\r\n              <Col>\r\n                <StatsHorizontal\r\n                  color={colors[index]}\r\n                  statTitle={`${t(item.title)}`}\r\n                  icon={\r\n                    item.icon ? (\r\n                      <Icon\r\n                        baseClassName=\"material-icons-outlined\"\r\n                        fontSize=\"20\"\r\n                      >\r\n                        {item.icon}\r\n                      </Icon>\r\n                    ) : (\r\n                      <Icon\r\n                        baseClassName=\"material-icons-outlined\"\r\n                        fontSize=\"20\"\r\n                      >\r\n                        lightbulb\r\n                      </Icon>\r\n                    )\r\n                  }\r\n                  renderStats={\r\n                    store.isLoadingSummary ? (\r\n                      <Skeleton\r\n                        sx={{ bgcolor: \"#eef2f8\" }}\r\n                        animation=\"wave\"\r\n                        height={25}\r\n                        width={40}\r\n                        className=\"fw-bolder mb-75\"\r\n                      />\r\n                    ) : (\r\n                      <h3 className=\"fw-bolder mb-75\">\r\n                        {item.count_format ?? item.count}\r\n                      </h3>\r\n                    )\r\n                  }\r\n                />\r\n              </Col>\r\n            )\r\n          })}\r\n        </Row>\r\n      )}\r\n\r\n      <Card>\r\n        <div className=\"card-datatable app-user-list table-responsive\">\r\n          <Table\r\n            lookupMode={lookupMode}\r\n            lookupMode_fieldName={lookupMode_fieldName}\r\n            lookupMode_defaultValue={lookupMode_defaultValue}\r\n            lookupMode_onChange={lookupMode_onChange}\r\n            lookupMode_isMulti={lookupMode_isMulti}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  ) : (\r\n    <DropDown\r\n      lookupMode_fieldName={lookupMode_fieldName}\r\n      lookupMode_onChange={lookupMode_onChange}\r\n      lookupMode_defaultValue={lookupMode_defaultValue}\r\n      lookupMode_isMulti={lookupMode_isMulti}\r\n      errorState={errorState}\r\n    />\r\n  )\r\n}\r\n\r\nexport default List\r\n","import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport \"./style.scss\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport classnames from \"classnames\"\r\nimport Select from \"react-select\"\r\n\r\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\r\n\r\nconst List = ({\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_isMulti = false,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue,\r\n  errorState\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const onChangeInput = (e) => {\r\n    return lookupMode_onChange(e.value, lookupMode_fieldName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      dispatch(getDataList({}))\r\n    }\r\n  }, [dispatch, store.data.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Select\r\n        theme={selectThemeColors}\r\n        defaultValue={\r\n          !lookupMode_isMulti\r\n            ? store.dataDropdown.filter(\r\n                (el) => el.value === lookupMode_defaultValue\r\n              )\r\n            : lookupMode_defaultValue\r\n        }\r\n        isMulti={lookupMode_isMulti}\r\n        // onChange={lookupMode_onChange}\r\n        onChange={onChangeInput}\r\n        options={store.dataDropdown}\r\n        className=\"react-select\"\r\n        classNamePrefix=\"select\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","// ** Third Party Components\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from \"reactstrap\"\r\nimport { Fragment } from \"react\"\r\n\r\nconst StatsHorizontal = ({\r\n  icon,\r\n  color,\r\n  cardColor,\r\n  stats,\r\n  renderStats,\r\n  statTitle,\r\n  className,\r\n  countTextColor,\r\n  countTextStyle = {},\r\n  titleStyle = {},\r\n  statsMargin,\r\n  solidColor = false,\r\n  cardStyle = {},\r\n  titleOnTop = false\r\n}) => {\r\n  const cardColorFix = !solidColor ? `bg-light-${cardColor}` : `bg-${cardColor}`\r\n  return (\r\n    <Card\r\n      style={{ ...cardStyle }}\r\n      {...(cardColor ? { className: cardColorFix, inverse: true } : {})}\r\n    >\r\n      <CardBody className={className}>\r\n        {!titleOnTop ? (\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <Fragment>\r\n                <div>\r\n                  {renderStats ? (\r\n                    renderStats\r\n                  ) : (\r\n                    <h3\r\n                      className={classnames(\"fw-bolder\", {\r\n                        \"mb-0\": !statsMargin,\r\n                        [statsMargin]: statsMargin\r\n                      })}\r\n                      style={{\r\n                        color: countTextColor ?? \"#5e5873\",\r\n                        ...countTextStyle\r\n                      }}\r\n                    >\r\n                      {stats}\r\n                    </h3>\r\n                  )}\r\n\r\n                  <p style={{ ...titleStyle }} className=\"card-text\">\r\n                    {statTitle}\r\n                  </p>\r\n                </div>\r\n                <div\r\n                  className={`avatar avatar-stats p-50 m-0 ${\r\n                    color ? `bg-light-${color}` : \"bg-light-primary\"\r\n                  }`}\r\n                >\r\n                  <div className=\"avatar-content\">{icon}</div>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Fragment>\r\n            <div>\r\n              <p style={{ ...titleStyle }} className=\"card-text\">\r\n                {statTitle}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              {renderStats ? (\r\n                renderStats\r\n              ) : (\r\n                <Fragment>\r\n                  <div>\r\n                    {renderStats ? (\r\n                      renderStats\r\n                    ) : (\r\n                      <h3\r\n                        className={classnames(\"fw-bolder\", {\r\n                          \"mb-0\": !statsMargin,\r\n                          [statsMargin]: statsMargin\r\n                        })}\r\n                        style={{\r\n                          color: countTextColor ?? \"#5e5873\",\r\n                          ...countTextStyle\r\n                        }}\r\n                      >\r\n                        {stats}\r\n                      </h3>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    className={`avatar avatar-stats p-50 m-0 ${\r\n                      color ? `bg-light-${color}` : \"bg-light-primary\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"avatar-content\">{icon}</div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element,\r\n  color: PropTypes.string,\r\n  cardColor: PropTypes.string,\r\n  statTitle: PropTypes.string,\r\n  statsMargin: PropTypes.oneOf([\r\n    \"mb-0\",\r\n    \"mb-25\",\r\n    \"mb-50\",\r\n    \"mb-75\",\r\n    \"mb-1\",\r\n    \"mb-2\",\r\n    \"mb-3\",\r\n    \"mb-4\",\r\n    \"mb-5\"\r\n  ])\r\n}\r\n"],"sourceRoot":""}