{"version":3,"sources":["views/dashboard/widgets/WidgetTrainingTask.js","@core/components/ui-loader/index.js","@core/components/avatar-group/index.js","assets/images/illustration/email.svg","../node_modules/@mui/icons-material/EventAvailableOutlined.js"],"names":["params","pagination","clickable","autoplay","delay","disableOnInteraction","WidgetTrainingTask","hideCardTitle","id_user","t","useTranslation","store","useSelector","state","dynamicStore","dispatch","dynamic_temp_state","useDispatch","storeName","useEffect","pageData","data","length","isLoading","getDataList","endpointName","baseUrl","type","Id_AttendingState","calendarStrings","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","toUpperCaseFilter","d","toUpperCase","renderAvatarGroup","avatarData","map","item","i","name","FirstName","LastName","title","replaceAll","placement","img","PhotoPath","require","default","imgHeight","imgWidth","remainCount","push","meta","lg","xs","style","minHeight","className","tag","blocking","loader","isManager","row","src","TrainingData","Image","illustration","height","filter","format","StartDate","Name","Description","color","icon","size","calendar","IsOnline","LinkRef","Address","Employee","Id_Training","UILoader","props","children","overlayColor","Tag","classnames","backgroundColor","defaultProps","AvatarGroup","id","split","join","linkUrl","ItemTag","Element","undefined","initials","content","to","_interopRequireDefault","Object","defineProperty","exports","value","_createSvgIcon","_jsxRuntime","_default","jsx"],"mappings":"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","file":"static/js/145.45c31a60.chunk.js","sourcesContent":["import Avatar from \"@components/avatar\"\nimport AvatarGroup from \"@components/avatar-group\"\nimport UILoader from \"@components/ui-loader\"\nimport illustration from \"@src/assets/images/illustration/email.svg\"\nimport { Loader } from \"@src/shared/CommonComponents\"\nimport { getDataList } from \"@src/shared/dynamic_pages/store\"\nimport \"moment-timezone\"\nimport \"moment/locale/id\"\nimport { useEffect } from \"react\"\nimport { Calendar, MapPin, Video } from \"react-feather\"\nimport { useTranslation } from \"react-i18next\"\nimport Moment from \"react-moment\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardText,\n  CardTitle,\n  Col\n} from \"reactstrap\"\n\nimport EventAvailableOutlinedIcon from \"@mui/icons-material/EventAvailableOutlined\"\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\"\nconst params = {\n  // navigation: true\n  pagination: {\n    clickable: true\n  },\n  autoplay: {\n    delay: 7500,\n    disableOnInteraction: false\n  }\n}\n\nconst WidgetTrainingTask = ({ hideCardTitle = false, id_user = null }) => {\n  const { t } = useTranslation()\n  // const store = useSelector((state) => state[storeName])\n  const store = useSelector((state) => state.dynamicStore)\n  const dynamicTempState = useSelector((state) => state.dynamic_temp_state)\n  const dispatch = useDispatch()\n\n  const storeName = \"TrainingEmployee_task\"\n  const endpointName = \"TrainingEmployee/assignment\"\n\n  useEffect(() => {\n    if (\n      !store.pageData[storeName] ||\n      (store.pageData[storeName]?.data?.length === 0 &&\n        !store.pageData[storeName]?.isLoading)\n    ) {\n      dispatch(\n        getDataList({\n          storeName: storeName,\n          endpointName: endpointName,\n          baseUrl: \"hr\",\n          type: \"to_me\",\n          Id_AttendingState: 1\n        })\n      )\n    }\n  }, [])\n\n  const calendarStrings = {\n    lastDay: \"[Yesterday]\",\n    sameDay: \"[Today]\",\n    nextDay: \"[Tomorrow]\",\n    lastWeek: \"[last] dddd\",\n    nextWeek: \"dddd\",\n    sameElse: \"L\"\n  }\n\n  const toUpperCaseFilter = (d) => {\n    return d.toUpperCase()\n  }\n\n  const renderAvatarGroup = (data) => {\n    if (data) {\n      const minCount = 10\n      const avatarData = data.map((item, i) => {\n        let name = `${item?.FirstName} ${item?.LastName}`\n        if (i <= minCount) {\n          return {\n            title: `${name.replaceAll(\".\", \"\")}`,\n            placement: \"bottom\",\n            img:\n              item?.PhotoPath ??\n              require(\"@src/assets/images/avatars/avatar-blank.png\").default,\n            imgHeight: 33,\n            imgWidth: 33\n          }\n        }\n      })\n      const remainCount = (data.length ?? 0) - minCount\n      if (remainCount > 0 && avatarData) {\n        avatarData.push({\n          meta: `+${remainCount}`\n        })\n      } else {\n        avatarData.push({\n          meta: `${avatarData.length} ${t(\"Employee ready to attend\")}`\n        })\n      }\n      return <AvatarGroup data={avatarData} />\n    } else {\n      return null\n    }\n  }\n\n  {\n    return store.pageData[storeName]?.isLoading ? (\n      <Col lg=\"12\" xs=\"12\">\n        <Card style={{ minHeight: \"200px\" }}>\n          <CardHeader>\n            <div className=\"d-flex align-items-center\">\n              <EventAvailableOutlinedIcon className=\"user-timeline-title-icon me-1\" />\n              <CardTitle tag=\"h4\">{t(\"Training Task\")}</CardTitle>\n            </div>\n          </CardHeader>\n          <UILoader blocking={true} loader={<Loader />}>\n            <CardBody></CardBody>\n          </UILoader>\n        </Card>\n      </Col>\n    ) : store.pageData[storeName]?.data?.length > 0 ? (\n      <Col lg=\"12\" xs=\"12\">\n        <Card>\n          <CardHeader>\n            <div className=\"d-flex align-items-center\">\n              <EventAvailableOutlinedIcon className=\"user-timeline-title-icon me-1\" />\n              {!store.pageData[storeName]?.data[0]?.isManager ? (\n                <CardTitle tag=\"h4\">{t(\"My Training Task\")}</CardTitle>\n              ) : (\n                <CardTitle tag=\"h4\">{t(\"Me & Staff Training Task\")}</CardTitle>\n              )}\n            </div>\n          </CardHeader>\n          <CardBody className=\"px-0 pb-0 \">\n            <Swiper {...params}>\n              {store.pageData[storeName]?.data.map((row) => {\n                return (\n                  <SwiperSlide key={`swiper_${row.Id_Training}`}>\n                    <Card className=\"card-developer-meetup  cursor-pointer\">\n                      <div className=\"meetup-img-wrapper rounded-top text-center\">\n                        <img\n                          src={\n                            row?.TrainingData?.Image\n                              ? row.TrainingData.Image\n                              : illustration\n                          }\n                          height=\"170\"\n                        />\n                      </div>\n                      <CardBody>\n                        <div className=\"meetup-header d-flex align-items-center\">\n                          <div className=\"meetup-day\">\n                            <h6 className=\"mb-0\">\n                              <Moment filter={toUpperCaseFilter} format=\"ddd\">\n                                {row?.TrainingData?.StartDate}\n                              </Moment>\n                            </h6>\n                            <h3 className=\"mb-0\">\n                              <Moment format=\"DD\">\n                                {row?.TrainingData?.StartDate}\n                              </Moment>\n                            </h3>\n                          </div>\n                          <div className=\"my-auto text-truncate\">\n                            <CardTitle tag=\"h4\" className=\"mb-25\">\n                              {row?.TrainingData?.Name}\n                            </CardTitle>\n                            <CardText className=\"mb-0\">\n                              {row?.TrainingData?.Description}\n                            </CardText>\n                          </div>\n                        </div>\n                        <div className=\"d-flex\">\n                          <Avatar\n                            color=\"light-primary\"\n                            className=\"rounded me-1\"\n                            icon={<Calendar size={18} />}\n                          />\n                          <div>\n                            {/* <h6 className=\"mb-0\">Sat, May 25, 2020</h6>\n                                <small>10:AM to 6:PM</small> */}\n                            <h6 className=\"mb-0\">\n                              {\n                                <Moment calendar={calendarStrings}>\n                                  {row?.TrainingData?.StartDate}\n                                </Moment>\n                              }\n                            </h6>\n                            <small>\n                              {\n                                <Moment format=\"[Start at] LT\">\n                                  {row?.TrainingData?.StartDate}\n                                </Moment>\n                              }\n                            </small>\n                          </div>\n                        </div>\n                        {!row?.TrainingData?.IsOnline ? (\n                          <div className=\"d-flex mt-2\">\n                            <Avatar\n                              color=\"light-primary\"\n                              className=\"rounded me-1\"\n                              icon={<MapPin size={18} />}\n                            />\n                            <div>\n                              {/* <h6 className=\"mb-0\">Central Park</h6> */}\n                              <small>{row?.TrainingData?.Address}</small>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"d-flex mt-2\">\n                            <Avatar\n                              color=\"light-primary\"\n                              className=\"rounded me-1\"\n                              icon={<Video size={18} />}\n                            />\n                            <div>\n                              <h6 className=\"mb-0\">{t(\"Online Training\")}</h6>\n                              <small>\n                                {row?.TrainingData?.LinkRef\n                                  ? row?.TrainingData?.LinkRef\n                                  : \"The link will be sent before the event starts\"}\n                              </small>\n                            </div>\n                          </div>\n                        )}\n                        {renderAvatarGroup(row?.Employee)}\n                      </CardBody>\n                    </Card>\n                  </SwiperSlide>\n                )\n              })}\n            </Swiper>\n          </CardBody>\n        </Card>\n      </Col>\n    ) : null\n  }\n}\n\nexport default WidgetTrainingTask\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Spinner } from \"reactstrap\"\n\n// ** Styles\nimport \"./ui-loader.scss\"\n\nconst UILoader = (props) => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag\n      className={classnames(\"ui-loader\", {\n        [className]: className,\n        show: blocking\n      })}\n    >\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className=\"overlay\" /*eslint-disable */\n            {...(blocking && overlayColor\n              ? { style: { backgroundColor: overlayColor } }\n              : {})}\n            /*eslint-enable */\n          ></div>\n          <div className=\"loader\">{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: \"div\",\n  blocking: false,\n  loader: <Spinner color=\"primary\" />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { UncontrolledTooltip } from \"reactstrap\"\n\n// ** Custom Components Imports\nimport Avatar from \"@components/avatar\"\nimport { Link } from \"react-router-dom\"\n\nconst AvatarGroup = (props) => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Conditional Tag\n  const Tag = tag ? tag : \"div\"\n\n  // ** Render Data\n  const renderData = () => {\n    return data.map((item, i) => {\n      let id = item?.id\n        ? `avatar_${i}_${item.id}`\n        : item.title.split(\" \").join(\"-\")\n      const linkUrl = item?.linkUrl\n      delete item?.linkUrl\n      const ItemTag = item.tag ? item.tag : \"div\"\n      const Element = (\n        <Fragment key={i}>\n          {/* {id ? (\n            <UncontrolledTooltip placement={item.placement} target={id}>\n              {item.title}\n            </UncontrolledTooltip>\n          ) : null} */}\n          {!item.meta ? (\n            item?.img ? (\n              <Avatar\n                tag={ItemTag}\n                className={classnames(\"pull-up\", {\n                  [item.className]: item.className\n                })}\n                {...(id ? { id: id } : {})}\n                {...item}\n                title={undefined}\n                meta={undefined}\n              />\n            ) : (\n              <Avatar\n                tag={ItemTag}\n                initials\n                className={classnames(\"pull-up\", {\n                  [item.className]: item.className\n                })}\n                {...(id ? { id: id } : {})}\n                color=\"light-primary\"\n                content={`${item.title}`}\n              />\n            )\n          ) : null}\n          {item.meta ? (\n            <ItemTag className=\"d-flex align-items-center ps-1\">\n              {item.meta}\n            </ItemTag>\n          ) : null}\n        </Fragment>\n      )\n      if (linkUrl) {\n        return (\n          <Link key={`avatar_${i}`} to={linkUrl}>\n            {Element}\n          </Link>\n        )\n      } else {\n        return Element\n      }\n    })\n  }\n\n  return (\n    <Tag\n      className={classnames(\"avatar-group\", {\n        [className]: className\n      })}\n    >\n      {renderData()}\n    </Tag>\n  )\n}\n\nexport default AvatarGroup\n\n// ** PropTypes\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n}\n","export default __webpack_public_path__ + \"static/media/email.6f4a4684.svg\";","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V9h14v10zM5 7V5h14v2H5zm5.56 10.46 5.93-5.93-1.06-1.06-4.87 4.87-2.11-2.11-1.06 1.06z\"\n}), 'EventAvailableOutlined');\nexports.default = _default;"],"sourceRoot":""}