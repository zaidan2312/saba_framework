{"version":3,"sources":["views/apps/role/RoleCards.js","@core/components/ui-loader/index.js","@core/components/avatar-group/index.js","assets/images/illustration/faq-illustrations.svg"],"names":["RoleCards","t","useTranslation","useState","showModal","setShowModal","modalType","setModalType","dispatch","useDispatch","store","useSelector","state","storeName","storePermission","apps_permission","permissionDropdown","setPermissionDropdown","permissionDropdownOld","setPermissionDropdownOld","description","setDescription","formState","setFormState","setLoading","setLoadingText","colors","useContext","ThemeColors","useForm","reset","control","setError","setValue","handleSubmit","errors","handleChangeChk","chkValue","index","field","permissionDropdownCopy","Object","assign","target","checked","handleAdd","a","data","length","isLoading","getDataListPermission","then","res","responseData","payload","arr4","arr3","dataDropdown","postDataToApi","values","every","pageTitle","onlyInA","right","compareFunction","b","id_permission","post","put","delete","get","filter","leftValue","some","rightValue","postData","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","error","message","danger","key","type","updateDataToApi","permissionState","JSON","stringify","selectedData","title","countChanges","id","putData","icon","useEffect","grid_mode","blocking","isLoadingSummary","loader","dataSummary","map","item","xl","md","className","totalUsers","users","x","size","img","require","default","height","name","to","onClick","e","rowData","preventDefault","console","log","detailFromGrid","setDataById","getDataListRolePermission","filter_id_role","i","location","host","sm","src","illustration","alt","width","isOpen","onClosed","toggle","loading","tag","onSubmit","xs","for","defaultValue","render","placeholder","invalid","responsive","role","label","placement","onChange","event","outline","roleName","UILoader","props","children","overlayColor","Tag","classnames","backgroundColor","defaultProps","AvatarGroup","split","join","linkUrl","ItemTag","Element","undefined","initials","content"],"mappings":"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","file":"static/js/146.0b23e914.chunk.js","sourcesContent":["import { Fragment, useState, useEffect, useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Label,\r\n  Input,\r\n  Table,\r\n  Modal,\r\n  Button,\r\n  CardBody,\r\n  ModalBody,\r\n  ModalHeader,\r\n  FormFeedback,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  detailFromGrid,\r\n  setDataById,\r\n  postData,\r\n  putData\r\n} from \"./store\"\r\nimport { getDataList as getDataListPermission } from \"../../apps/permission/store\"\r\nimport { getDataList as getDataListRolePermission } from \"../../apps/role_permission/store\"\r\nimport { Copy, Info } from \"react-feather\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport AvatarGroup from \"@components/avatar-group\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport illustration from \"@src/assets/images/illustration/faq-illustrations.svg\"\r\nimport toast from \"react-hot-toast\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\nimport UILoader from \"@components/ui-loader\"\r\n\r\nconst RoleCards = () => {\r\n  // ** States\r\n  const { t } = useTranslation()\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [modalType, setModalType] = useState(`${t(\"Add New\")}`)\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const storePermission = useSelector((state) => state.apps_permission)\r\n  const [permissionDropdown, setPermissionDropdown] = useState([])\r\n  const [permissionDropdownOld, setPermissionDropdownOld] = useState([])\r\n  const [description, setDescription] = useState(\"\")\r\n  const [formState, setFormState] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const handleEdit = (rowData) => {\r\n    // e.preventDefault()\r\n    setDescription(rowData.title)\r\n    console.log(rowData)\r\n    setFormState(\"edit\")\r\n    setModalType(`${t(\"Edit\")}`)\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then((x) => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n      dispatch(\r\n        getDataListRolePermission({\r\n          filter_id_role: rowData.id\r\n        })\r\n      ).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          // console.log(storePermission.dataDropdown)\r\n          // console.log(res.payload.data)\r\n          // const fillPermission = [\r\n          //   ...res.payload.data,\r\n          //   ...storePermission.dataDropdown\r\n          // ]\r\n          let responseData = [...res.payload.data]\r\n          let arr3 = storePermission.dataDropdown.map((item, i) =>\r\n            Object.assign({}, item, responseData[i])\r\n          )\r\n          let arr4 = storePermission.dataDropdown.map((item, i) =>\r\n            Object.assign({}, item, responseData[i])\r\n          )\r\n          // console.log(arr3)\r\n\r\n          setPermissionDropdown(arr3)\r\n          setPermissionDropdownOld(arr4)\r\n        }\r\n      })\r\n    } else {\r\n      setLoading(true)\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      dispatch(setDataById(rowData)).then((x) => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleChangeChk = (chkValue, index, field) => {\r\n    // console.log(chkValue.target.checked)\r\n    // console.log(field)\r\n    let permissionDropdownCopy = Object.assign([], permissionDropdown)\r\n    // console.log(permissionDropdownCopy)\r\n    permissionDropdownCopy[index][field] = chkValue.target.checked\r\n    setPermissionDropdown(permissionDropdownCopy)\r\n  }\r\n\r\n  const handleAdd = async () => {\r\n    setFormState(\"add\")\r\n    setModalType(`${t(\"Add New\")}`)\r\n    if (storePermission.data.length === 0 && !storePermission.isLoading) {\r\n      setLoading(true)\r\n      await dispatch(getDataListPermission({})).then((res) => {\r\n        let responseData = [...res.payload.data]\r\n        let arr3 = responseData\r\n        let arr4 = responseData\r\n        setPermissionDropdown(arr3)\r\n        setPermissionDropdownOld(arr4)\r\n\r\n        setShowModal(true)\r\n        setLoading(false)\r\n      })\r\n    } else {\r\n      let arr3 = [...storePermission.dataDropdown]\r\n      let arr4 = [...storePermission.dataDropdown]\r\n      setPermissionDropdown(arr3)\r\n      setPermissionDropdownOld(arr4)\r\n\r\n      setShowModal(true)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.description.length) {\r\n      // setShowModal(false)\r\n      formState === \"edit\" ? updateDataToApi(data) : postDataToApi(data)\r\n    } else {\r\n      setError(\"description\", {\r\n        type: \"manual\"\r\n      })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      const isSameData = (a, b) =>\r\n        a.id_permission === b.id_permission &&\r\n        a.post === b.post &&\r\n        a.put === b.put &&\r\n        a.delete === b.delete &&\r\n        a.get === b.get\r\n\r\n      const onlyInLeft = (left, right, compareFunction) =>\r\n        left.filter(\r\n          (leftValue) =>\r\n            !right.some((rightValue) => compareFunction(leftValue, rightValue))\r\n        )\r\n      const onlyInA = onlyInLeft(\r\n        permissionDropdown,\r\n        permissionDropdownOld,\r\n        isSameData\r\n      )\r\n      if (onlyInA.length > 0) {\r\n        data[\"role_permission\"] = onlyInA\r\n      }\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShowModal(false)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      // console.log(JSON.stringify(permissionDropdownOld))\r\n      // console.log(JSON.stringify(permissionDropdown))\r\n      const permissionState =\r\n        JSON.stringify(permissionDropdownOld) !==\r\n        JSON.stringify(permissionDropdown)\r\n      return store.selectedData.title !== data.description || permissionState\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n      const isSameData = (a, b) =>\r\n        a.id === b.id &&\r\n        a.id_permission === b.id_permission &&\r\n        a.post === b.post &&\r\n        a.put === b.put &&\r\n        a.delete === b.delete &&\r\n        a.get === b.get\r\n\r\n      const onlyInLeft = (left, right, compareFunction) =>\r\n        left.filter(\r\n          (leftValue) =>\r\n            !right.some((rightValue) => compareFunction(leftValue, rightValue))\r\n        )\r\n      const onlyInA = onlyInLeft(\r\n        permissionDropdown,\r\n        permissionDropdownOld,\r\n        isSameData\r\n      )\r\n      if (onlyInA.length > 0) {\r\n        data[\"role_permission\"] = onlyInA\r\n      }\r\n      // console.log(data)\r\n      dispatch(putData(data)).then((res) => {\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShowModal(false)\r\n          toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const onReset = () => {\r\n    setShowModal(false)\r\n    reset({ roleName: \"\" })\r\n  }\r\n\r\n  const handleModalClosed = () => {\r\n    setModalType(`${t(\"Add New\")}`)\r\n    setValue(\"roleName\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      storePermission.dataDropdown.length === 0 &&\r\n      !storePermission.isLoading\r\n    ) {\r\n      dispatch(getDataListPermission({ grid_mode: true }))\r\n    }\r\n  }, [dispatch, storePermission.dataDropdown.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={store.isLoadingSummary} loader={<Loader />}>\r\n        <Row>\r\n          {store.dataSummary.map((item, index) => {\r\n            return (\r\n              <Col key={index} xl={4} md={6}>\r\n                <Card>\r\n                  <CardBody>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <span>{`Total ${item.totalUsers} users`}</span>\r\n                      {item?.users?.length > 0 ? (\r\n                        <AvatarGroup\r\n                          data={item.users.map((x) => ({\r\n                            size: x.size,\r\n                            title: x.title,\r\n                            id: x.id,\r\n                            img:\r\n                              x?.img !== null\r\n                                ? x.img\r\n                                : require(`@src/assets/images/avatars/avatar-blank.png`)\r\n                                    .default\r\n                          }))}\r\n                        />\r\n                      ) : (\r\n                        <div style={{ height: \"30px\" }} className=\"\"></div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between align-items-end mt-1 pt-25\">\r\n                      <div className=\"role-heading  text-truncate\">\r\n                        <h4 className=\"fw-bolder mb-0\">{item.title ?? \"-\"}</h4>\r\n                        <div>\r\n                          <small className=\"fw-bolder\">\r\n                            {item.name ?? \"-\"}\r\n                          </small>\r\n                        </div>\r\n                        <Link\r\n                          to=\"/\"\r\n                          className=\"role-edit-modal\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleEdit(item)\r\n                          }}\r\n                        >\r\n                          <small className=\"fw-bolder\">\r\n                            {t(\"Edit\")} {t(\"Role\")}\r\n                          </small>\r\n                        </Link>\r\n                      </div>\r\n                      <Link\r\n                        to=\"\"\r\n                        className=\"text-body\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                      >\r\n                        {/* <Copy className=\"font-medium-5\" /> */}\r\n                      </Link>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            )\r\n          })}\r\n          {location.host === \"admin.insaba.co.id\" && (\r\n            <Col xl={4} md={6}>\r\n              <Card>\r\n                <Row className=\"mb-2\">\r\n                  <Col sm={5}>\r\n                    <div className=\"d-flex align-items-end justify-content-center h-100\">\r\n                      <img\r\n                        className=\"img-fluid mt-2\"\r\n                        src={illustration}\r\n                        alt=\"Image\"\r\n                        width={85}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  (\r\n                  <Col sm={7}>\r\n                    <CardBody className=\"text-sm-end text-center ps-sm-0\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className=\"text-nowrap mb-1\"\r\n                        onClick={() => {\r\n                          handleAdd()\r\n                        }}\r\n                      >\r\n                        {t(\"Add New Role\")}{\" \"}\r\n                      </Button>\r\n                      <p className=\"mb-0\">\r\n                        {t(\"Add a new role, if it does not exist\")}\r\n                      </p>\r\n                    </CardBody>\r\n                  </Col>\r\n                  )\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n\r\n        {showModal && (\r\n          <Modal\r\n            isOpen={showModal}\r\n            onClosed={handleModalClosed}\r\n            toggle={() => setShowModal(!showModal)}\r\n            className=\"modal-dialog-centered modal-xl\"\r\n          >\r\n            {/* <UILoader\r\n              blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n              loader={<Loader />}\r\n            > */}\r\n            <ModalHeader\r\n              className=\"bg-transparent\"\r\n              toggle={() => setShowModal(!showModal)}\r\n            ></ModalHeader>\r\n            {!store.loading && (\r\n              <ModalBody className=\"px-5 pb-5\">\r\n                <div className=\"text-center mb-4\">\r\n                  <h1>\r\n                    {modalType} {t(\"Role\")}\r\n                  </h1>\r\n                  <p>\r\n                    {formState === \"edit\"\r\n                      ? `${t(\"Set role name and permissions\")}`\r\n                      : t(\"Create new role\")}\r\n                  </p>\r\n                </div>\r\n                <Row tag=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                  <Col xs={12}>\r\n                    <Label className=\"form-label\" for=\"description\">\r\n                      {t(\"Role Name\")}\r\n                    </Label>\r\n                    <Controller\r\n                      name=\"description\"\r\n                      control={control}\r\n                      defaultValue={description}\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          {...field}\r\n                          id=\"description\"\r\n                          placeholder={t(\"Enter role name\")}\r\n                          invalid={errors.description && true}\r\n                        />\r\n                      )}\r\n                    />\r\n                    {errors.description && (\r\n                      <FormFeedback>\r\n                        {t(\"Please enter a valid role name\")}\r\n                      </FormFeedback>\r\n                    )}\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <h4 className=\"mt-2 pt-50\">{t(\"Role Permissions\")}</h4>\r\n                    <Table className=\"table-flush-spacing\" responsive>\r\n                      <tbody>\r\n                        {/* <tr>\r\n                      <td className=\"text-nowrap fw-bolder\">\r\n                        <span className=\"me-50\">\r\n                          {\" \"}\r\n                          {t(\"Administrator Access\")}\r\n                        </span>\r\n                        <Info size={14} id=\"info-tooltip\" />\r\n                        <UncontrolledTooltip\r\n                          placement=\"top\"\r\n                          target=\"info-tooltip\"\r\n                        >\r\n                          {t(\"Allows a full access to the system\")}\r\n                        </UncontrolledTooltip>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"form-check\">\r\n                          <Input type=\"checkbox\" id=\"select-all\" />\r\n                          <Label className=\"form-check-label\" for=\"select-all\">\r\n                            {t(\"Select All\")}\r\n                          </Label>\r\n                        </div>\r\n                      </td>\r\n                    </tr> */}\r\n                        {permissionDropdown.map((role, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td className=\"text-nowrap fw-bolder\">\r\n                                <span className=\"me-50\"> {role.label}</span>\r\n                                <Info size={14} id={`info_${role.id}`} />\r\n                                <UncontrolledTooltip\r\n                                  placement=\"top\"\r\n                                  target={`info_${role.id}`}\r\n                                >\r\n                                  {t(role.description)}\r\n                                </UncontrolledTooltip>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"d-flex\">\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.get}\r\n                                      type=\"checkbox\"\r\n                                      id={`read-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"get\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`read-${role.id}`}\r\n                                    >\r\n                                      {t(\"Read\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.post}\r\n                                      type=\"checkbox\"\r\n                                      id={`write-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"post\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`write-${role.id}`}\r\n                                    >\r\n                                      {t(\"Create\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.put}\r\n                                      type=\"checkbox\"\r\n                                      id={`create-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"put\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`create-${role.id}`}\r\n                                    >\r\n                                      {t(\"Update\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check\">\r\n                                    <Input\r\n                                      checked={role.delete}\r\n                                      type=\"checkbox\"\r\n                                      id={`delete-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"delete\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`delete-${role.id}`}\r\n                                    >\r\n                                      {t(\"Delete\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        })}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Col>\r\n                  <Col className=\"text-center mt-2\" xs={12}>\r\n                    <Button type=\"submit\" color=\"primary\" className=\"me-1\">\r\n                      {t(\"Submit\")}\r\n                    </Button>\r\n                    <Button type=\"reset\" outline onClick={onReset}>\r\n                      {t(\"Cancel\")}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n            )}\r\n            {/* </UILoader> */}\r\n          </Modal>\r\n        )}\r\n      </UILoader>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RoleCards\r\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Spinner } from \"reactstrap\"\n\n// ** Styles\nimport \"./ui-loader.scss\"\n\nconst UILoader = (props) => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag\n      className={classnames(\"ui-loader\", {\n        [className]: className,\n        show: blocking\n      })}\n    >\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className=\"overlay\" /*eslint-disable */\n            {...(blocking && overlayColor\n              ? { style: { backgroundColor: overlayColor } }\n              : {})}\n            /*eslint-enable */\n          ></div>\n          <div className=\"loader\">{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: \"div\",\n  blocking: false,\n  loader: <Spinner color=\"primary\" />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { UncontrolledTooltip } from \"reactstrap\"\n\n// ** Custom Components Imports\nimport Avatar from \"@components/avatar\"\nimport { Link } from \"react-router-dom\"\n\nconst AvatarGroup = (props) => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Conditional Tag\n  const Tag = tag ? tag : \"div\"\n\n  // ** Render Data\n  const renderData = () => {\n    return data.map((item, i) => {\n      let id = item?.id\n        ? `avatar_${i}_${item.id}`\n        : item.title.split(\" \").join(\"-\")\n      const linkUrl = item?.linkUrl\n      delete item?.linkUrl\n      const ItemTag = item.tag ? item.tag : \"div\"\n      const Element = (\n        <Fragment key={i}>\n          {/* {id ? (\n            <UncontrolledTooltip placement={item.placement} target={id}>\n              {item.title}\n            </UncontrolledTooltip>\n          ) : null} */}\n          {!item.meta ? (\n            item?.img ? (\n              <Avatar\n                tag={ItemTag}\n                className={classnames(\"pull-up\", {\n                  [item.className]: item.className\n                })}\n                {...(id ? { id: id } : {})}\n                {...item}\n                title={undefined}\n                meta={undefined}\n              />\n            ) : (\n              <Avatar\n                tag={ItemTag}\n                initials\n                className={classnames(\"pull-up\", {\n                  [item.className]: item.className\n                })}\n                {...(id ? { id: id } : {})}\n                color=\"light-primary\"\n                content={`${item.title}`}\n              />\n            )\n          ) : null}\n          {item.meta ? (\n            <ItemTag className=\"d-flex align-items-center ps-1\">\n              {item.meta}\n            </ItemTag>\n          ) : null}\n        </Fragment>\n      )\n      if (linkUrl) {\n        return (\n          <Link key={`avatar_${i}`} to={linkUrl}>\n            {Element}\n          </Link>\n        )\n      } else {\n        return Element\n      }\n    })\n  }\n\n  return (\n    <Tag\n      className={classnames(\"avatar-group\", {\n        [className]: className\n      })}\n    >\n      {renderData()}\n    </Tag>\n  )\n}\n\nexport default AvatarGroup\n\n// ** PropTypes\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n}\n","export default __webpack_public_path__ + \"static/media/faq-illustrations.f8c4ea78.svg\";"],"sourceRoot":""}