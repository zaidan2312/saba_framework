{"version":3,"sources":["views/apps/role/index.js","views/apps/role/RoleCards.js","views/apps/role/DropDown.js","@core/components/avatar-group/index.js","assets/images/illustration/faq-illustrations.svg"],"names":["List","_ref","lookupMode","_store$dataSummary2","_ref$lookupMode_field","lookupMode_fieldName","_ref$lookupMode_dropd","lookupMode_dropdown","lookupMode_defaultValue","lookupMode_onChange","_ref$lookupMode_isMul","lookupMode_isMulti","_ref$errorState","errorState","t","useTranslation","dispatch","useDispatch","store","useSelector","state","storeName","useEffect","_store$dataSummary","getApiSummaryData","dataSummary","length","isLoadingSummary","getSummaryData","_jsx","DropDown","_jsxs","Fragment","children","className","RoleCards","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","_useState3","concat","_useState4","modalType","setModalType","storePermission","apps_permission","_useState5","_useState6","permissionDropdown","setPermissionDropdown","_useState7","_useState8","permissionDropdownOld","setPermissionDropdownOld","_useState9","_useState10","description","setDescription","_useState11","_useState12","formState","setFormState","_useState13","_useState14","setLoading","_useState15","_useState16","setLoadingText","colors","useContext","ThemeColors","_useForm","useForm","reset","control","setError","setValue","handleSubmit","errors","handleChangeChk","chkValue","index","field","permissionDropdownCopy","Object","assign","target","checked","handleAdd","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arr3","arr4","wrap","_context","prev","next","data","isLoading","getDataListPermission","then","res","responseData","_toConsumableArray","payload","dataDropdown","stop","apply","arguments","postDataToApi","values","every","pageTitle","onlyInA","right","compareFunction","a","b","id_permission","post","put","delete","get","filter","leftValue","some","rightValue","postData","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","error","message","danger","key","_data$key","type","updateDataToApi","permissionState","JSON","stringify","selectedData","title","countChanges","id","putData","icon","grid_mode","UILoader","blocking","loader","Loader","Row","map","item","_item$users","_item$title","_item$name","Col","xl","md","Card","CardBody","totalUsers","users","AvatarGroup","x","size","img","require","default","height","name","Link","to","onClick","e","rowData","preventDefault","console","log","detailFromGrid","setDataById","getDataListRolePermission","filter_id_role","i","location","host","sm","src","illustration","alt","width","Button","Modal","isOpen","onClosed","toggle","ModalHeader","loading","ModalBody","tag","onSubmit","xs","Label","for","Controller","defaultValue","render","_ref2","Input","_objectSpread","placeholder","invalid","FormFeedback","Table","responsive","role","label","Info","UncontrolledTooltip","placement","onChange","event","outline","roleName","getAlwaysGrid","getDataList","Select","theme","selectThemeColors","el","value","isMulti","options","classNamePrefix","props","Tag","classnames","_defineProperty","split","join","linkUrl","ItemTag","Element","Avatar","undefined","initials","content"],"mappings":"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","file":"static/js/51.f2a434c1.chunk.js","sourcesContent":["import { Fragment, useEffect } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport DropDown from \"./DropDown\"\r\nimport RoleCards from \"./RoleCards\"\r\nimport { getApiSummaryData, getSummaryData, storeName } from \"./store\"\r\nimport \"./style.scss\"\r\n\r\nconst List = ({\r\n  lookupMode = false,\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_dropdown = false,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti = false,\r\n  errorState = false\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      getApiSummaryData &&\r\n      store.dataSummary?.length === 0 &&\r\n      !store.isLoadingSummary\r\n    ) {\r\n      dispatch(getSummaryData({}))\r\n    }\r\n  }, [dispatch, store.dataSummary?.length > 0])\r\n\r\n  const colors = [\r\n    \"primary\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"secondary\"\r\n  ]\r\n\r\n  return !lookupMode_dropdown ? (\r\n    <Fragment>\r\n      <h3>{t(\"Roles List\")}</h3>\r\n      <p className=\"mb-2\">\r\n        {t(\r\n          \"A role provides access to predefined menus and features depending on the assigned role to an administrator that can have access to what he needs.\"\r\n        )}\r\n      </p>\r\n      <RoleCards />\r\n      {/* <h3 className=\"mt-50\">{t(\"Total users with their roles\")}</h3>\r\n      <p className=\"mb-2\">\r\n        {t(\r\n          \"Find all of your company’s administrator accounts and their associate roles.\"\r\n        )}\r\n      </p>\r\n      <div className=\"app-user-list\">\r\n        <Table />\r\n      </div> */}\r\n    </Fragment>\r\n  ) : (\r\n    // <div className=\"app-user-list\">\r\n    //   {getApiSummaryData && (\r\n    //     <Row>\r\n    //       {store.dataSummary?.map((item, index) => {\r\n    //         return (\r\n    //           <Col>\r\n    //             <StatsHorizontal\r\n    //               color={colors[index]}\r\n    //               statTitle={`${t(item.title)}`}\r\n    //               icon={\r\n    //                 item.icon ? (\r\n    //                   <Icon\r\n    //                     baseClassName=\"material-icons-outlined\"\r\n    //                     fontSize=\"20\"\r\n    //                   >\r\n    //                     {item.icon}\r\n    //                   </Icon>\r\n    //                 ) : (\r\n    //                   <Icon\r\n    //                     baseClassName=\"material-icons-outlined\"\r\n    //                     fontSize=\"20\"\r\n    //                   >\r\n    //                     lightbulb\r\n    //                   </Icon>\r\n    //                 )\r\n    //               }\r\n    //               renderStats={\r\n    //                 store.isLoadingSummary ? (\r\n    //                   <Skeleton\r\n    //                     sx={{ bgcolor: \"#eef2f8\" }}\r\n    //                     animation=\"wave\"\r\n    //                     height={25}\r\n    //                     width={40}\r\n    //                     className=\"fw-bolder mb-75\"\r\n    //                   />\r\n    //                 ) : (\r\n    //                   <h3 className=\"fw-bolder mb-75\">\r\n    //                     {item.count_format ?? item.count}\r\n    //                   </h3>\r\n    //                 )\r\n    //               }\r\n    //             />\r\n    //           </Col>\r\n    //         )\r\n    //       })}\r\n    //     </Row>\r\n    //   )}\r\n    //   <Table />\r\n    // </div>\r\n    <DropDown\r\n      lookupMode_fieldName={lookupMode_fieldName}\r\n      lookupMode_onChange={lookupMode_onChange}\r\n      lookupMode_defaultValue={lookupMode_defaultValue}\r\n      lookupMode_isMulti={lookupMode_isMulti}\r\n      errorState={errorState}\r\n    />\r\n  )\r\n}\r\n\r\nexport default List\r\n","import { Fragment, useState, useEffect, useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Label,\r\n  Input,\r\n  Table,\r\n  Modal,\r\n  Button,\r\n  CardBody,\r\n  ModalBody,\r\n  ModalHeader,\r\n  FormFeedback,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  detailFromGrid,\r\n  setDataById,\r\n  postData,\r\n  putData\r\n} from \"./store\"\r\nimport { getDataList as getDataListPermission } from \"../../apps/permission/store\"\r\nimport { getDataList as getDataListRolePermission } from \"../../apps/role_permission/store\"\r\nimport { Copy, Info } from \"react-feather\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport AvatarGroup from \"@components/avatar-group\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport illustration from \"@src/assets/images/illustration/faq-illustrations.svg\"\r\nimport toast from \"react-hot-toast\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\nimport UILoader from \"@components/ui-loader\"\r\n\r\nconst RoleCards = () => {\r\n  // ** States\r\n  const { t } = useTranslation()\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [modalType, setModalType] = useState(`${t(\"Add New\")}`)\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const storePermission = useSelector((state) => state.apps_permission)\r\n  const [permissionDropdown, setPermissionDropdown] = useState([])\r\n  const [permissionDropdownOld, setPermissionDropdownOld] = useState([])\r\n  const [description, setDescription] = useState(\"\")\r\n  const [formState, setFormState] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const handleEdit = (rowData) => {\r\n    // e.preventDefault()\r\n    setDescription(rowData.title)\r\n    console.log(rowData)\r\n    setFormState(\"edit\")\r\n    setModalType(`${t(\"Edit\")}`)\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then((x) => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n      dispatch(\r\n        getDataListRolePermission({\r\n          filter_id_role: rowData.id\r\n        })\r\n      ).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          // console.log(storePermission.dataDropdown)\r\n          // console.log(res.payload.data)\r\n          // const fillPermission = [\r\n          //   ...res.payload.data,\r\n          //   ...storePermission.dataDropdown\r\n          // ]\r\n          let responseData = [...res.payload.data]\r\n          let arr3 = storePermission.dataDropdown.map((item, i) =>\r\n            Object.assign({}, item, responseData[i])\r\n          )\r\n          let arr4 = storePermission.dataDropdown.map((item, i) =>\r\n            Object.assign({}, item, responseData[i])\r\n          )\r\n          // console.log(arr3)\r\n\r\n          setPermissionDropdown(arr3)\r\n          setPermissionDropdownOld(arr4)\r\n        }\r\n      })\r\n    } else {\r\n      setLoading(true)\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      dispatch(setDataById(rowData)).then((x) => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleChangeChk = (chkValue, index, field) => {\r\n    // console.log(chkValue.target.checked)\r\n    // console.log(field)\r\n    let permissionDropdownCopy = Object.assign([], permissionDropdown)\r\n    // console.log(permissionDropdownCopy)\r\n    permissionDropdownCopy[index][field] = chkValue.target.checked\r\n    setPermissionDropdown(permissionDropdownCopy)\r\n  }\r\n\r\n  const handleAdd = async () => {\r\n    setFormState(\"add\")\r\n    setModalType(`${t(\"Add New\")}`)\r\n    if (storePermission.data.length === 0 && !storePermission.isLoading) {\r\n      setLoading(true)\r\n      await dispatch(getDataListPermission({})).then((res) => {\r\n        let responseData = [...res.payload.data]\r\n        let arr3 = responseData\r\n        let arr4 = responseData\r\n        setPermissionDropdown(arr3)\r\n        setPermissionDropdownOld(arr4)\r\n\r\n        setShowModal(true)\r\n        setLoading(false)\r\n      })\r\n    } else {\r\n      let arr3 = [...storePermission.dataDropdown]\r\n      let arr4 = [...storePermission.dataDropdown]\r\n      setPermissionDropdown(arr3)\r\n      setPermissionDropdownOld(arr4)\r\n\r\n      setShowModal(true)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.description.length) {\r\n      // setShowModal(false)\r\n      formState === \"edit\" ? updateDataToApi(data) : postDataToApi(data)\r\n    } else {\r\n      setError(\"description\", {\r\n        type: \"manual\"\r\n      })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      const isSameData = (a, b) =>\r\n        a.id_permission === b.id_permission &&\r\n        a.post === b.post &&\r\n        a.put === b.put &&\r\n        a.delete === b.delete &&\r\n        a.get === b.get\r\n\r\n      const onlyInLeft = (left, right, compareFunction) =>\r\n        left.filter(\r\n          (leftValue) =>\r\n            !right.some((rightValue) => compareFunction(leftValue, rightValue))\r\n        )\r\n      const onlyInA = onlyInLeft(\r\n        permissionDropdown,\r\n        permissionDropdownOld,\r\n        isSameData\r\n      )\r\n      if (onlyInA.length > 0) {\r\n        data[\"role_permission\"] = onlyInA\r\n      }\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShowModal(false)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      // console.log(JSON.stringify(permissionDropdownOld))\r\n      // console.log(JSON.stringify(permissionDropdown))\r\n      const permissionState =\r\n        JSON.stringify(permissionDropdownOld) !==\r\n        JSON.stringify(permissionDropdown)\r\n      return store.selectedData.title !== data.description || permissionState\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n      const isSameData = (a, b) =>\r\n        a.id === b.id &&\r\n        a.id_permission === b.id_permission &&\r\n        a.post === b.post &&\r\n        a.put === b.put &&\r\n        a.delete === b.delete &&\r\n        a.get === b.get\r\n\r\n      const onlyInLeft = (left, right, compareFunction) =>\r\n        left.filter(\r\n          (leftValue) =>\r\n            !right.some((rightValue) => compareFunction(leftValue, rightValue))\r\n        )\r\n      const onlyInA = onlyInLeft(\r\n        permissionDropdown,\r\n        permissionDropdownOld,\r\n        isSameData\r\n      )\r\n      if (onlyInA.length > 0) {\r\n        data[\"role_permission\"] = onlyInA\r\n      }\r\n      // console.log(data)\r\n      dispatch(putData(data)).then((res) => {\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShowModal(false)\r\n          toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const onReset = () => {\r\n    setShowModal(false)\r\n    reset({ roleName: \"\" })\r\n  }\r\n\r\n  const handleModalClosed = () => {\r\n    setModalType(`${t(\"Add New\")}`)\r\n    setValue(\"roleName\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      storePermission.dataDropdown.length === 0 &&\r\n      !storePermission.isLoading\r\n    ) {\r\n      dispatch(getDataListPermission({ grid_mode: true }))\r\n    }\r\n  }, [dispatch, storePermission.dataDropdown.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={store.isLoadingSummary} loader={<Loader />}>\r\n        <Row>\r\n          {store.dataSummary.map((item, index) => {\r\n            return (\r\n              <Col key={index} xl={4} md={6}>\r\n                <Card>\r\n                  <CardBody>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <span>{`Total ${item.totalUsers} users`}</span>\r\n                      {item?.users?.length > 0 ? (\r\n                        <AvatarGroup\r\n                          data={item.users.map((x) => ({\r\n                            size: x.size,\r\n                            title: x.title,\r\n                            id: x.id,\r\n                            img:\r\n                              x?.img !== null\r\n                                ? x.img\r\n                                : require(`@src/assets/images/avatars/avatar-blank.png`)\r\n                                    .default\r\n                          }))}\r\n                        />\r\n                      ) : (\r\n                        <div style={{ height: \"30px\" }} className=\"\"></div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between align-items-end mt-1 pt-25\">\r\n                      <div className=\"role-heading  text-truncate\">\r\n                        <h4 className=\"fw-bolder mb-0\">{item.title ?? \"-\"}</h4>\r\n                        <div>\r\n                          <small className=\"fw-bolder\">\r\n                            {item.name ?? \"-\"}\r\n                          </small>\r\n                        </div>\r\n                        <Link\r\n                          to=\"/\"\r\n                          className=\"role-edit-modal\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleEdit(item)\r\n                          }}\r\n                        >\r\n                          <small className=\"fw-bolder\">\r\n                            {t(\"Edit\")} {t(\"Role\")}\r\n                          </small>\r\n                        </Link>\r\n                      </div>\r\n                      <Link\r\n                        to=\"\"\r\n                        className=\"text-body\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                      >\r\n                        {/* <Copy className=\"font-medium-5\" /> */}\r\n                      </Link>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            )\r\n          })}\r\n          {location.host === \"admin.insaba.co.id\" && (\r\n            <Col xl={4} md={6}>\r\n              <Card>\r\n                <Row className=\"mb-2\">\r\n                  <Col sm={5}>\r\n                    <div className=\"d-flex align-items-end justify-content-center h-100\">\r\n                      <img\r\n                        className=\"img-fluid mt-2\"\r\n                        src={illustration}\r\n                        alt=\"Image\"\r\n                        width={85}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  (\r\n                  <Col sm={7}>\r\n                    <CardBody className=\"text-sm-end text-center ps-sm-0\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className=\"text-nowrap mb-1\"\r\n                        onClick={() => {\r\n                          handleAdd()\r\n                        }}\r\n                      >\r\n                        {t(\"Add New Role\")}{\" \"}\r\n                      </Button>\r\n                      <p className=\"mb-0\">\r\n                        {t(\"Add a new role, if it does not exist\")}\r\n                      </p>\r\n                    </CardBody>\r\n                  </Col>\r\n                  )\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n\r\n        {showModal && (\r\n          <Modal\r\n            isOpen={showModal}\r\n            onClosed={handleModalClosed}\r\n            toggle={() => setShowModal(!showModal)}\r\n            className=\"modal-dialog-centered modal-xl\"\r\n          >\r\n            {/* <UILoader\r\n              blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n              loader={<Loader />}\r\n            > */}\r\n            <ModalHeader\r\n              className=\"bg-transparent\"\r\n              toggle={() => setShowModal(!showModal)}\r\n            ></ModalHeader>\r\n            {!store.loading && (\r\n              <ModalBody className=\"px-5 pb-5\">\r\n                <div className=\"text-center mb-4\">\r\n                  <h1>\r\n                    {modalType} {t(\"Role\")}\r\n                  </h1>\r\n                  <p>\r\n                    {formState === \"edit\"\r\n                      ? `${t(\"Set role name and permissions\")}`\r\n                      : t(\"Create new role\")}\r\n                  </p>\r\n                </div>\r\n                <Row tag=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                  <Col xs={12}>\r\n                    <Label className=\"form-label\" for=\"description\">\r\n                      {t(\"Role Name\")}\r\n                    </Label>\r\n                    <Controller\r\n                      name=\"description\"\r\n                      control={control}\r\n                      defaultValue={description}\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          {...field}\r\n                          id=\"description\"\r\n                          placeholder={t(\"Enter role name\")}\r\n                          invalid={errors.description && true}\r\n                        />\r\n                      )}\r\n                    />\r\n                    {errors.description && (\r\n                      <FormFeedback>\r\n                        {t(\"Please enter a valid role name\")}\r\n                      </FormFeedback>\r\n                    )}\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <h4 className=\"mt-2 pt-50\">{t(\"Role Permissions\")}</h4>\r\n                    <Table className=\"table-flush-spacing\" responsive>\r\n                      <tbody>\r\n                        {/* <tr>\r\n                      <td className=\"text-nowrap fw-bolder\">\r\n                        <span className=\"me-50\">\r\n                          {\" \"}\r\n                          {t(\"Administrator Access\")}\r\n                        </span>\r\n                        <Info size={14} id=\"info-tooltip\" />\r\n                        <UncontrolledTooltip\r\n                          placement=\"top\"\r\n                          target=\"info-tooltip\"\r\n                        >\r\n                          {t(\"Allows a full access to the system\")}\r\n                        </UncontrolledTooltip>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"form-check\">\r\n                          <Input type=\"checkbox\" id=\"select-all\" />\r\n                          <Label className=\"form-check-label\" for=\"select-all\">\r\n                            {t(\"Select All\")}\r\n                          </Label>\r\n                        </div>\r\n                      </td>\r\n                    </tr> */}\r\n                        {permissionDropdown.map((role, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td className=\"text-nowrap fw-bolder\">\r\n                                <span className=\"me-50\"> {role.label}</span>\r\n                                <Info size={14} id={`info_${role.id}`} />\r\n                                <UncontrolledTooltip\r\n                                  placement=\"top\"\r\n                                  target={`info_${role.id}`}\r\n                                >\r\n                                  {t(role.description)}\r\n                                </UncontrolledTooltip>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"d-flex\">\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.get}\r\n                                      type=\"checkbox\"\r\n                                      id={`read-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"get\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`read-${role.id}`}\r\n                                    >\r\n                                      {t(\"Read\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.post}\r\n                                      type=\"checkbox\"\r\n                                      id={`write-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"post\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`write-${role.id}`}\r\n                                    >\r\n                                      {t(\"Create\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.put}\r\n                                      type=\"checkbox\"\r\n                                      id={`create-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"put\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`create-${role.id}`}\r\n                                    >\r\n                                      {t(\"Update\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check\">\r\n                                    <Input\r\n                                      checked={role.delete}\r\n                                      type=\"checkbox\"\r\n                                      id={`delete-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"delete\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`delete-${role.id}`}\r\n                                    >\r\n                                      {t(\"Delete\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        })}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Col>\r\n                  <Col className=\"text-center mt-2\" xs={12}>\r\n                    <Button type=\"submit\" color=\"primary\" className=\"me-1\">\r\n                      {t(\"Submit\")}\r\n                    </Button>\r\n                    <Button type=\"reset\" outline onClick={onReset}>\r\n                      {t(\"Cancel\")}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n            )}\r\n            {/* </UILoader> */}\r\n          </Modal>\r\n        )}\r\n      </UILoader>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RoleCards\r\n","import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport \"./style.scss\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport classnames from \"classnames\"\r\nimport Select from \"react-select\"\r\n\r\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\r\n\r\nconst List = ({\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_isMulti = false,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue,\r\n  errorState\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const onChangeInput = (e) => {\r\n    return lookupMode_onChange(e.value, lookupMode_fieldName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      dispatch(getDataList({}))\r\n    }\r\n  }, [dispatch, store.data.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Select\r\n        theme={selectThemeColors}\r\n        defaultValue={\r\n          !lookupMode_isMulti\r\n            ? store.dataDropdown.filter(\r\n                (el) => el.value === lookupMode_defaultValue\r\n              )\r\n            : lookupMode_defaultValue\r\n        }\r\n        isMulti={lookupMode_isMulti}\r\n        // onChange={lookupMode_onChange}\r\n        onChange={onChangeInput}\r\n        options={store.dataDropdown}\r\n        className=\"react-select\"\r\n        classNamePrefix=\"select\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledTooltip } from \"reactstrap\"\r\n\r\n// ** Custom Components Imports\r\nimport Avatar from \"@components/avatar\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst AvatarGroup = (props) => {\r\n  // ** Props\r\n  const { data, tag, className } = props\r\n\r\n  // ** Conditional Tag\r\n  const Tag = tag ? tag : \"div\"\r\n\r\n  // ** Render Data\r\n  const renderData = () => {\r\n    return data.map((item, i) => {\r\n      let id = item?.id\r\n        ? `avatar_${i}_${item.id}`\r\n        : item.title.split(\" \").join(\"-\")\r\n      const linkUrl = item?.linkUrl\r\n      delete item?.linkUrl\r\n      const ItemTag = item.tag ? item.tag : \"div\"\r\n      const Element = (\r\n        <Fragment key={i}>\r\n          {/* {id ? (\r\n            <UncontrolledTooltip placement={item.placement} target={id}>\r\n              {item.title}\r\n            </UncontrolledTooltip>\r\n          ) : null} */}\r\n          {!item.meta ? (\r\n            item?.img ? (\r\n              <Avatar\r\n                tag={ItemTag}\r\n                className={classnames(\"pull-up\", {\r\n                  [item.className]: item.className\r\n                })}\r\n                {...(id ? { id: id } : {})}\r\n                {...item}\r\n                title={undefined}\r\n                meta={undefined}\r\n              />\r\n            ) : (\r\n              <Avatar\r\n                tag={ItemTag}\r\n                initials\r\n                className={classnames(\"pull-up\", {\r\n                  [item.className]: item.className\r\n                })}\r\n                {...(id ? { id: id } : {})}\r\n                color=\"light-primary\"\r\n                content={`${item.title}`}\r\n              />\r\n            )\r\n          ) : null}\r\n          {item.meta ? (\r\n            <ItemTag className=\"d-flex align-items-center ps-1\">\r\n              {item.meta}\r\n            </ItemTag>\r\n          ) : null}\r\n        </Fragment>\r\n      )\r\n      if (linkUrl) {\r\n        return (\r\n          <Link key={`avatar_${i}`} to={linkUrl}>\r\n            {Element}\r\n          </Link>\r\n        )\r\n      } else {\r\n        return Element\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames(\"avatar-group\", {\r\n        [className]: className\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default AvatarGroup\r\n\r\n// ** PropTypes\r\nAvatarGroup.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\r\n}\r\n","export default __webpack_public_path__ + \"static/media/faq-illustrations.f8c4ea78.svg\";"],"sourceRoot":""}