{"version":3,"sources":["views/apps/permission/Form.js"],"names":["FormAddEdit","formState","updateDataToApi","postDataToApi","handleReset","t","useTranslation","store","useParams","id","useDispatch","useSelector","state","storeName","useContext","ThemeColors","colors","useState","useForm","control","handleSubmit","setError","errors","onSubmit","className","md","xs","for","defaultValue","selectedData","title","name","render","field","invalid","description","subject","type","color","outline","onClick"],"mappings":"mSAsJeA,UAhHK,SAAC,GAKd,IAAD,YAJJC,EAII,EAJJA,UACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAEQC,EAAMC,cAAND,EAGFE,GAFSC,cAAPC,GACSC,cACHC,aAAY,SAACC,GAAD,OAAWA,EAAMC,iBAE3C,GADmBC,qBAAWC,KAAtBC,OAC8BC,mBAAS,gBAA/C,mBACA,GADA,UAMIC,YAAQ,KAJVC,EADF,EACEA,QAEAC,GAHF,EAEEC,SAFF,EAGED,cACaE,EAJf,EAIErB,UAAaqB,OAGf,OACE,cAAC,IAAD,CACEC,SAEMH,EADU,SAAdnB,EACiBC,EACAC,GAJrB,SAOE,eAAC,IAAD,CAAKqB,UAAU,aAAf,UACE,eAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,UACE,eAAC,IAAD,CAAOF,UAAU,aAAaG,IAAI,QAAlC,UACGtB,EAAE,SACH,sBAAMmB,UAAU,cAAhB,kBAEF,cAAC,IAAD,CACEI,aAAY,oBAAErB,EAAMsB,oBAAR,aAAE,EAAoBC,aAAtB,QAA+B,GAC3CX,QAASA,EACTV,GAAG,QACHsB,KAAK,QACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEET,UACEF,EAAOQ,MAAQ,0BAA4B,eAE7CrB,GAAG,QACHyB,QAASZ,EAAOQ,QAAS,WAMjC,eAAC,IAAD,CAAKL,GAAI,GAAIC,GAAI,GAAjB,UACE,eAAC,IAAD,CAAOF,UAAU,aAAaG,IAAI,cAAlC,UACGtB,EAAE,eACH,sBAAMmB,UAAU,cAAhB,kBAEF,cAAC,IAAD,CACEI,aAAY,oBAAErB,EAAMsB,oBAAR,aAAE,EAAoBM,mBAAtB,QAAqC,GACjDhB,QAASA,EACTV,GAAG,cACHsB,KAAK,cACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEET,UACEF,EAAOa,YACH,0BACA,eAEN1B,GAAG,cACHyB,QAASZ,EAAOa,cAAe,WAMvC,eAAC,IAAD,CAAKV,GAAI,GAAIC,GAAI,GAAjB,UACE,eAAC,IAAD,CAAOF,UAAU,aAAaG,IAAI,UAAlC,UACGtB,EAAE,WACH,sBAAMmB,UAAU,cAAhB,kBAEF,cAAC,IAAD,CACEI,aAAY,oBAAErB,EAAMsB,oBAAR,aAAE,EAAoBO,eAAtB,QAAiC,GAC7CjB,QAASA,EACTV,GAAG,UACHsB,KAAK,UACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEET,UACEF,EAAOc,QAAU,0BAA4B,eAE/C3B,GAAG,UACHyB,QAASZ,EAAOc,UAAW,WAMnC,eAAC,IAAD,CAAKV,GAAI,GAAIF,UAAU,yBAAvB,UACE,cAAC,IAAD,CAAQa,KAAK,SAASb,UAAU,OAAOc,MAAM,UAA7C,SACGjC,EAAE,YAEL,cAAC,IAAD,CAAQgC,KAAK,QAAQC,MAAM,YAAYC,SAAO,EAACC,QAASpC,EAAxD,SACGC,EAAE","file":"static/js/179.aa636aef.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\nimport { Fragment, useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById\n} from \"./store\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst FormAddEdit = ({\n  formState,\n  updateDataToApi,\n  postDataToApi,\n  handleReset\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  return (\n    <Form\n      onSubmit={\n        formState === \"edit\"\n          ? handleSubmit(updateDataToApi)\n          : handleSubmit(postDataToApi)\n      }\n    >\n      <Row className=\"gy-1 pt-75\">\n        <Col md={12} xs={12}>\n          <Label className=\"form-label\" for=\"title\">\n            {t(\"Title\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue={store.selectedData?.title ?? \"\"}\n            control={control}\n            id=\"title\"\n            name=\"title\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                className={\n                  errors.title ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"title\"\n                invalid={errors.title && true}\n              />\n            )}\n          />\n        </Col>\n\n        <Col md={12} xs={12}>\n          <Label className=\"form-label\" for=\"description\">\n            {t(\"Description\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue={store.selectedData?.description ?? \"\"}\n            control={control}\n            id=\"description\"\n            name=\"description\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                className={\n                  errors.description\n                    ? \"form-control is-invalid\"\n                    : \"form-control\"\n                }\n                id=\"description\"\n                invalid={errors.description && true}\n              />\n            )}\n          />\n        </Col>\n\n        <Col md={12} xs={12}>\n          <Label className=\"form-label\" for=\"subject\">\n            {t(\"Subject\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue={store.selectedData?.subject ?? \"\"}\n            control={control}\n            id=\"subject\"\n            name=\"subject\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                className={\n                  errors.subject ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"subject\"\n                invalid={errors.subject && true}\n              />\n            )}\n          />\n        </Col>\n\n        <Col xs={12} className=\"text-center mt-2 pt-50\">\n          <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n            {t(\"Submit\")}\n          </Button>\n          <Button type=\"reset\" color=\"secondary\" outline onClick={handleReset}>\n            {t(\"Cancel\")}\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nexport default FormAddEdit\n"],"sourceRoot":""}