{"version":3,"sources":["views/apps/user/columns.js"],"names":["renderClient","row","avatar","className","img","width","height","initials","color","avatarColor","content","name","statusObj","pending","active","inactive","Columns","useTranslation","t","sortable","minWidth","sortField","selector","cell","to","id","email","role_name","roleObj","subscriber","class","icon","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","size","renderRole","billing","Moment","joined_date","format","is_active","pill","tag","end","Link","onClick","store","dispatch","getUser","href","e","preventDefault","deleteUser"],"mappings":"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","file":"static/js/83.adec8dbb.chunk.js","sourcesContent":["import { useTranslation } from \"react-i18next\"\n\n// ** React Imports\nimport { Link } from \"react-router-dom\"\n\n// ** Custom Components\nimport Avatar from \"@components/avatar\"\n\n// ** Store & Actions\nimport { store } from \"@store/store\"\nimport { getUser, deleteUser } from \"@src/views/apps/user/store\"\n\n// ** Icons Imports\nimport {\n  Slack,\n  User,\n  Settings,\n  Database,\n  Edit2,\n  MoreVertical,\n  FileText,\n  Trash2,\n  Archive\n} from \"react-feather\"\n\n// ** Reactstrap Imports\nimport {\n  Badge,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\"\n\nimport Moment from \"moment\"\n\n// ** Renders Client Columns\nconst renderClient = (row) => {\n  if (row.avatar) {\n    return <Avatar className=\"me-1\" img={row.avatar} width=\"32\" height=\"32\" />\n  } else {\n    return (\n      <Avatar\n        initials\n        className=\"me-1\"\n        color={row.avatarColor || \"light-primary\"}\n        content={row.name || \"John Doe\"}\n      />\n    )\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = (row) => {\n  const roleObj = {\n    subscriber: {\n      class: \"text-primary\",\n      icon: User\n    },\n    maintainer: {\n      class: \"text-success\",\n      icon: Database\n    },\n    editor: {\n      class: \"text-info\",\n      icon: Edit2\n    },\n    author: {\n      class: \"text-warning\",\n      icon: Settings\n    },\n    admin: {\n      class: \"text-danger\",\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role_name] ? roleObj[row.role_name].icon : Edit2\n\n  return (\n    <span className=\"text-truncate text-capitalize align-middle\">\n      <Icon\n        size={18}\n        className={`${\n          roleObj[row.role_name] ? roleObj[row.role_name].class : \"\"\n        } me-50`}\n      />\n      {row.role_name}\n    </span>\n  )\n}\n\nconst renderName = (name) => {\n  // ** Hooks\n  // const { t } = useTranslation()\n\n  // const { t } = useTranslation()\n  // console.log(t(name))\n  return name\n}\n\nconst statusObj = {\n  pending: \"light-warning\",\n  active: \"light-success\",\n  inactive: \"light-secondary\"\n}\n\nconst Columns = () => {\n  // ** Hooks\n  const { t } = useTranslation()\n\n  return [\n    {\n      name: renderName(\"User\"),\n      sortable: true,\n      minWidth: \"300px\",\n      sortField: \"name\",\n      selector: (row) => row.name,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center\">\n          {renderClient(row)}\n          <div className=\"d-flex flex-column\">\n            <Link\n              to={`/apps/user/view/${row.id}`}\n              className=\"user_name text-truncate text-body\"\n              // onClick={() => store.dispatch(getUser(row.id))}\n            >\n              <span className=\"fw-bolder\">{row.name}</span>\n            </Link>\n            <small className=\"text-truncate text-muted mb-0\">{row.email}</small>\n          </div>\n        </div>\n      )\n    },\n    {\n      name: \"Role\",\n      sortable: true,\n      minWidth: \"172px\",\n      sortField: \"role_name\",\n      selector: (row) => row.role_name,\n      cell: (row) => renderRole(row)\n    },\n    // {\n    //   name: \"Unit\",\n    //   minWidth: \"138px\",\n    //   sortable: true,\n    //   sortField: \"unit\",\n    //   selector: (row) => row.currentPlan,\n    //   cell: (row) => <span className=\"text-capitalize\">{row.currentPlan}</span>\n    // },\n    {\n      name: \"Joined Date\",\n      minWidth: \"230px\",\n      sortable: true,\n      sortField: \"joined_date\",\n      selector: (row) => row.billing,\n      cell: (row) => (\n        <span className=\"text-capitalize\">\n          {Moment(row.joined_date).format(\"DD MMM YYYY\")}\n        </span>\n      )\n    },\n    {\n      name: \"Status\",\n      minWidth: \"138px\",\n      sortable: true,\n      sortField: \"status\",\n      selector: (row) => row.is_active,\n      cell: (row) => (\n        <Badge\n          className=\"text-capitalize\"\n          color={statusObj[row.is_active ? \"active\" : \"inactive\"]}\n          pill\n        >\n          {row.is_active ? \"active\" : \"inactive\"}\n        </Badge>\n      )\n    },\n    {\n      name: \"Actions\",\n      minWidth: \"100px\",\n      cell: (row) => (\n        <div className=\"column-action\">\n          <UncontrolledDropdown>\n            <DropdownToggle tag=\"span\">\n              <MoreVertical size={14} className=\"cursor-pointer\" />\n            </DropdownToggle>\n            <DropdownMenu end>\n              <DropdownItem\n                tag={Link}\n                className=\"w-100\"\n                to={`/apps/user/view/${row.id}`}\n                onClick={() => store.dispatch(getUser(row.id))}\n              >\n                <FileText size={14} className=\"me-50\" />\n                <span className=\"align-middle\">Details</span>\n              </DropdownItem>\n              <DropdownItem\n                tag=\"a\"\n                href=\"/\"\n                className=\"w-100\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <Archive size={14} className=\"me-50\" />\n                <span className=\"align-middle\">Edit</span>\n              </DropdownItem>\n              <DropdownItem\n                tag=\"a\"\n                href=\"/\"\n                className=\"w-100\"\n                onClick={(e) => {\n                  e.preventDefault()\n                  store.dispatch(deleteUser(row.id))\n                }}\n              >\n                <Trash2 size={14} className=\"me-50\" />\n                <span className=\"align-middle\">Delete</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </div>\n      )\n    }\n  ]\n}\nexport default Columns\n// export const columns = [\n//   {\n//     name: renderName(\"User\"),\n//     sortable: true,\n//     minWidth: \"300px\",\n//     sortField: \"name\",\n//     selector: (row) => row.name,\n//     cell: (row) => (\n//       <div className=\"d-flex justify-content-left align-items-center\">\n//         {renderClient(row)}\n//         <div className=\"d-flex flex-column\">\n//           <Link\n//             to={`/apps/user/view/${row.id}`}\n//             className=\"user_name text-truncate text-body\"\n//             // onClick={() => store.dispatch(getUser(row.id))}\n//           >\n//             <span className=\"fw-bolder\">{row.name}</span>\n//           </Link>\n//           <small className=\"text-truncate text-muted mb-0\">{row.email}</small>\n//         </div>\n//       </div>\n//     )\n//   },\n//   {\n//     name: \"Role\",\n//     sortable: true,\n//     minWidth: \"172px\",\n//     sortField: \"role_name\",\n//     selector: (row) => row.role_name,\n//     cell: (row) => renderRole(row)\n//   },\n//   // {\n//   //   name: \"Unit\",\n//   //   minWidth: \"138px\",\n//   //   sortable: true,\n//   //   sortField: \"unit\",\n//   //   selector: (row) => row.currentPlan,\n//   //   cell: (row) => <span className=\"text-capitalize\">{row.currentPlan}</span>\n//   // },\n//   {\n//     name: \"Joined Date\",\n//     minWidth: \"230px\",\n//     sortable: true,\n//     sortField: \"joined_date\",\n//     selector: (row) => row.billing,\n//     cell: (row) => (\n//       <span className=\"text-capitalize\">\n//         {Moment(row.joined_date).format(\"DD MMM YYYY\")}\n//       </span>\n//     )\n//   },\n//   {\n//     name: \"Status\",\n//     minWidth: \"138px\",\n//     sortable: true,\n//     sortField: \"status\",\n//     selector: (row) => row.is_active,\n//     cell: (row) => (\n//       <Badge\n//         className=\"text-capitalize\"\n//         color={statusObj[row.is_active ? \"active\" : \"inactive\"]}\n//         pill\n//       >\n//         {row.is_active ? \"active\" : \"inactive\"}\n//       </Badge>\n//     )\n//   },\n//   {\n//     name: \"Actions\",\n//     minWidth: \"100px\",\n//     cell: (row) => (\n//       <div className=\"column-action\">\n//         <UncontrolledDropdown>\n//           <DropdownToggle tag=\"span\">\n//             <MoreVertical size={14} className=\"cursor-pointer\" />\n//           </DropdownToggle>\n//           <DropdownMenu end>\n//             <DropdownItem\n//               tag={Link}\n//               className=\"w-100\"\n//               to={`/apps/user/view/${row.id}`}\n//               onClick={() => store.dispatch(getUser(row.id))}\n//             >\n//               <FileText size={14} className=\"me-50\" />\n//               <span className=\"align-middle\">{t(\"Details\")}</span>\n//             </DropdownItem>\n//             <DropdownItem\n//               tag=\"a\"\n//               href=\"/\"\n//               className=\"w-100\"\n//               onClick={(e) => e.preventDefault()}\n//             >\n//               <Archive size={14} className=\"me-50\" />\n//               <span className=\"align-middle\">{t(\"Edit\")}</span>\n//             </DropdownItem>\n//             <DropdownItem\n//               tag=\"a\"\n//               href=\"/\"\n//               className=\"w-100\"\n//               onClick={(e) => {\n//                 e.preventDefault()\n//                 store.dispatch(deleteUser(row.id))\n//               }}\n//             >\n//               <Trash2 size={14} className=\"me-50\" />\n//               <span className=\"align-middle\">{t(\"Delete\")}</span>\n//             </DropdownItem>\n//           </DropdownMenu>\n//         </UncontrolledDropdown>\n//       </div>\n//     )\n//   }\n// ]\n"],"sourceRoot":""}