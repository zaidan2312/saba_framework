{"version":3,"sources":["../node_modules/@mui/icons-material/AssignmentIndOutlined.js","views/dashboard/widgets/WidgetTrainingAssignedForMe.js","@core/components/ui-loader/index.js","assets/images/illustration/email.svg","../node_modules/@mui/icons-material/CastForEducationOutlined.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","axiosHR","useJwt","ssoAxiosInterceptor","hrAxiosInterceptor","params","pagination","clickable","autoplay","delay","disableOnInteraction","slideToClickedSlide","WidgetTrainingAssignedForMe","t","useTranslation","store","useSelector","state","dynamicStore","dynamicTempState","dynamic_temp_state","dispatch","useDispatch","navigate","useNavigate","storeName","endpointName","colors","useContext","ThemeColors","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","loadingPostPut","setLoadingPostPut","_useState5","_useState6","loadingText","setLoadingText","_useState7","_useState8","loadingGetManager","setLoadingGetManager","_useState9","_useState10","managerData","setManagerData","_useState11","_useState12","managerDataSelected","setManagerDataSelected","_useState13","_useState14","isOpen","setIsOpen","toggle","errorToast","res","_res$payload","_res$payload$error","_res$payload4","_res$payload4$error","errorFieldsMsg","payload","error","errors","_res$payload2","_res$payload2$error","errorFields","errorx","_res$payload3","_res$payload3$error","concat","toast","message","style","padding","color","danger","main","border","iconTheme","primary","getManager","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","storeInputName","wrap","_context","prev","next","data","get","then","_res$data","setDataCache","_defineProperty","stop","apply","arguments","useEffect","_store$pageData$store","_store$pageData$store2","_store$pageData$store3","pageData","length","isLoading","getDataList","baseUrl","type","Id_AttendingState","_store$pageData$store4","_store$pageData$store5","_store$pageData$store6","_store$pageData$store7","_store$pageData$store8","_store$pageData$store9","_store$pageData$store10","_store$pageData$store11","_store$pageData$store12","_store$pageData$store13","renderAvatarImgIcon","Option","components","SingleValue","props","_jsxs","_objectSpread","children","_jsx","src","img","height","width","borderRadius","marginRight","label","position","calendarStrings","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","colorsBadge","toUpperCaseFilter","toUpperCase","Col","lg","xs","Card","minHeight","CardHeader","className","CastForEducationOutlinedIcon","CardTitle","tag","UILoader","blocking","loader","Loader","CardBody","isManager","Badge","pill","Swiper","map","row","_row$TrainingData","_row$TrainingData2","_row$TrainingData3","_row$TrainingData4","_row$TrainingData5","_row$TrainingData6","_row$TrainingData7","_row$TrainingData8","_row$TrainingData9","_row$TrainingData10","_row$TrainingData11","_row$TrainingData12","SwiperSlide","TrainingData","Image","illustration","Moment","filter","format","StartDate","Name","CardText","Description","Avatar","icon","Calendar","size","calendar","IsOnline","Video","LinkRef","MapPin","Address","FunctionalPosition","Crosshair","rowx","i","_colorsBadge$i","name","sm","Button","Ripple","onClick","e","Id_Training","AssignmentIndOutlinedIcon","Modal","ModalHeader","ModalBody","Alert","md","Select","placeholder","theme","selectThemeColors","classNamePrefix","onChange","options","item","Employee_Name","Id_Employee","Employee_PhotoPath","PositionName","isClearable","ModalFooter","Spinner","disabled","preventDefault","id","manager_id","window","location","href","postDataWidget","meta","requestStatus","xxx","success","xx","setTimeout","getDataListMyActivity","catch","outline","_classnames","overlayColor","Tag","classnames","Fragment","backgroundColor","defaultProps"],"mappings":"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","file":"static/js/132.20b23301.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1s-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7-.25c.22 0 .41.1.55.25.12.13.2.31.2.5 0 .41-.34.75-.75.75s-.75-.34-.75-.75c0-.19.08-.37.2-.5.14-.15.33-.25.55-.25zM19 19H5V5h14v14zM12 6c-1.65 0-3 1.35-3 3s1.35 3 3 3 3-1.35 3-3-1.35-3-3-3zm0 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-6 6.47V18h12v-1.53c0-2.5-3.97-3.58-6-3.58s-6 1.07-6 3.58zM8.31 16c.69-.56 2.38-1.12 3.69-1.12s3.01.56 3.69 1.12H8.31z\"\n}), 'AssignmentIndOutlined');\n\nexports.default = _default;","import Avatar from \"@components/avatar\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport illustration from \"@src/assets/images/illustration/email.svg\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\nimport { getDataList, postDataWidget } from \"@src/shared/dynamic_pages/store\"\r\nimport \"moment-timezone\"\r\nimport \"moment/locale/id\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { Calendar, Crosshair, MapPin, Video } from \"react-feather\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Moment from \"react-moment\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport {\r\n  Alert,\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardText,\r\n  CardTitle,\r\n  Col,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner\r\n} from \"reactstrap\"\r\n\r\nimport AssignmentIndOutlinedIcon from \"@mui/icons-material/AssignmentIndOutlined\"\r\nimport CastForEducationOutlinedIcon from \"@mui/icons-material/CastForEducationOutlined\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { getDataList as getDataListMyActivity } from \"@src/views/my-info/store/my_activities\"\r\nimport { setDataCache } from \"@store/dynamicTempState\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport toast from \"react-hot-toast\"\r\nimport Select, { components } from \"react-select\"\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\"\r\n\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\n\r\nconst axiosSso = useJwt.ssoAxiosInterceptor\r\nconst axiosHR = useJwt.hrAxiosInterceptor\r\n\r\nconst params = {\r\n  // navigation: true\r\n  pagination: {\r\n    clickable: true\r\n  },\r\n  autoplay: {\r\n    delay: 5500,\r\n    disableOnInteraction: false\r\n  },\r\n  slideToClickedSlide: true\r\n}\r\n\r\nconst WidgetTrainingAssignedForMe = () => {\r\n  const { t } = useTranslation()\r\n  // const store = useSelector((state) => state[storeName])\r\n  const store = useSelector((state) => state.dynamicStore)\r\n  const dynamicTempState = useSelector((state) => state.dynamic_temp_state)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const storeName = \"TrainingEmployee_assignForMe\"\r\n  const endpointName = \"TrainingEmployee/assignment\"\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loading, setLoading] = useState(true)\r\n  const [loadingPostPut, setLoadingPostPut] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n\r\n  const [loadingGetManager, setLoadingGetManager] = useState(false)\r\n  const [managerData, setManagerData] = useState([])\r\n  const [managerDataSelected, setManagerDataSelected] = useState(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  const errorToast = (res) => {\r\n    let errorFieldsMsg = \"\"\r\n    if (res?.payload?.error?.errors) {\r\n      const errorFields = res?.payload?.error?.errors\r\n      for (let errorx in res?.payload?.error?.errors) {\r\n        errorFieldsMsg = `${errorFieldsMsg} - ${errorFields[errorx]}\\n`\r\n        // console.log(errorx, errorFields[errorx])\r\n      }\r\n    }\r\n    return toast.error(\r\n      `${res.payload?.error?.message} \\n \\n ${errorFieldsMsg}`,\r\n      {\r\n        style: {\r\n          padding: \"16px\",\r\n          color: colors.danger.main,\r\n          border: `1px solid ${colors.danger.main}`\r\n        },\r\n        iconTheme: {\r\n          primary: colors.danger.main\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    setLoadingPostPut(true)\r\n    setLoadingText(\"Sending Training Request to Manager\")\r\n    data[\"storeName\"] = storeName\r\n    data[\"endpointName\"] = endpointName\r\n    data[\"baseUrl\"] = \"hr\"\r\n    data[\"callback_page\"] = window.location.href\r\n    dispatch(postDataWidget(data))\r\n      .then((res) => {\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          dispatch(\r\n            getDataList({\r\n              storeName: storeName,\r\n              endpointName: endpointName,\r\n              baseUrl: \"hr\",\r\n              type: \"for_me\",\r\n              Id_AttendingState: 0\r\n            })\r\n          )\r\n            .then((xxx) => {\r\n              setLoadingPostPut(false)\r\n              toggle()\r\n              toast.success(\r\n                `${t(\"Successfully Sending Training Request to Manager\")}}`,\r\n                {\r\n                  style: {\r\n                    padding: \"16px\",\r\n                    color: colors.success.main,\r\n                    border: `1px solid ${colors.success.main}`\r\n                  },\r\n                  iconTheme: {\r\n                    primary: colors.success.main\r\n                  }\r\n                }\r\n              )\r\n            })\r\n            .then((xx) => {\r\n              dispatch(\r\n                getDataList({\r\n                  storeName: \"TrainingEmployee_assignToMe\",\r\n                  endpointName: \"TrainingEmployee/assignment\",\r\n                  baseUrl: \"hr\",\r\n                  type: \"to_me\",\r\n                  Id_AttendingState: 1\r\n                })\r\n              )\r\n              setTimeout(() => {\r\n                dispatch(getDataListMyActivity({}))\r\n              }, 8000)\r\n            })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoadingPostPut(false)\r\n          errorToast(res)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.error(error)\r\n        setLoadingPostPut(false)\r\n        errorToast(error)\r\n      })\r\n  }\r\n\r\n  const getManager = async () => {\r\n    toggle()\r\n\r\n    const storeInputName = \"Id_Manager\"\r\n    if (!dynamicTempState.data[storeInputName] && !loadingGetManager) {\r\n      setLoadingGetManager(true)\r\n      const finUrl = \"DepartmentManager\"\r\n      await axiosHR.get(finUrl).then((res) => {\r\n        // console.log(res)\r\n        const data = res?.data?.data\r\n        setManagerData(data)\r\n        setLoadingGetManager(false)\r\n        dispatch(setDataCache({ [storeInputName]: data }))\r\n      })\r\n    } else {\r\n      setLoadingGetManager(true)\r\n      setManagerData(dynamicTempState.data[storeInputName])\r\n      setLoadingGetManager(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !store.pageData[storeName] ||\r\n      (store.pageData[storeName]?.data?.length === 0 &&\r\n        !store.pageData[storeName]?.isLoading)\r\n    ) {\r\n      dispatch(\r\n        getDataList({\r\n          storeName: storeName,\r\n          endpointName: endpointName,\r\n          baseUrl: \"hr\",\r\n          type: \"for_me\",\r\n          Id_AttendingState: 0\r\n        })\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  const renderAvatarImgIcon = (data) => {\r\n    let componentsInput = {}\r\n    const { Option, SingleValue } = components\r\n    const IconOption = (props) => (\r\n      <Option {...props}>\r\n        <img\r\n          src={props.data.img}\r\n          style={{\r\n            height: \"30px\",\r\n            width: \"30px\",\r\n            borderRadius: \"10%\",\r\n            marginRight: \"10px\"\r\n          }}\r\n        />\r\n        {props.data.label} <small>({props.data.position})</small>\r\n      </Option>\r\n    )\r\n\r\n    const IconSingleValue = (props) => (\r\n      <SingleValue {...props}>\r\n        <img\r\n          src={props.data.img}\r\n          style={{\r\n            height: \"30px\",\r\n            width: \"30px\",\r\n            borderRadius: \"10%\",\r\n            marginRight: \"10px\"\r\n          }}\r\n        />\r\n        {props.data.label} <small>({props.data.position})</small>\r\n      </SingleValue>\r\n    )\r\n\r\n    componentsInput = {\r\n      components: {\r\n        SingleValue: IconSingleValue,\r\n        Option: IconOption\r\n      }\r\n    }\r\n\r\n    return componentsInput\r\n  }\r\n\r\n  const calendarStrings = {\r\n    lastDay: \"[Yesterday]\",\r\n    sameDay: \"[Today]\",\r\n    nextDay: \"[Tomorrow]\",\r\n    lastWeek: \"[last] dddd\",\r\n    nextWeek: \"dddd\",\r\n    sameElse: \"L\"\r\n  }\r\n\r\n  const colorsBadge = [\r\n    \"primary\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"warning\",\r\n    \"info\",\r\n    \"secondary\"\r\n  ]\r\n\r\n  const toUpperCaseFilter = (d) => {\r\n    return d.toUpperCase()\r\n  }\r\n\r\n  {\r\n    return store.pageData[storeName]?.isLoading ? (\r\n      <Col lg=\"12\" xs=\"12\">\r\n        <Card style={{ minHeight: \"200px\" }}>\r\n          <CardHeader>\r\n            <div className=\"d-flex align-items-center\">\r\n              <CastForEducationOutlinedIcon className=\"user-timeline-title-icon me-1\" />\r\n              <CardTitle tag=\"h4\">{t(\"Recommended Training\")}</CardTitle>\r\n            </div>\r\n          </CardHeader>\r\n          <UILoader blocking={true} loader={<Loader />}>\r\n            <CardBody></CardBody>\r\n          </UILoader>\r\n        </Card>\r\n      </Col>\r\n    ) : store.pageData[storeName]?.data?.length > 0 ? (\r\n      <Col lg=\"12\" xs=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            <div className=\"d-flex align-items-center\">\r\n              <CastForEducationOutlinedIcon className=\"user-timeline-title-icon me-1\" />\r\n              <CardTitle tag=\"h4\">\r\n                {!store.pageData[storeName]?.data[0]?.isManager\r\n                  ? t(\"Recommended Training For You\")\r\n                  : t(\"Recommended Training For Your Staff\")}\r\n              </CardTitle>\r\n              {store.pageData[storeName]?.data?.length > 1 && (\r\n                <Badge className=\"ms-1\" tag=\"div\" color=\"info\" pill>\r\n                  {store.pageData[storeName]?.data?.length}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody className=\"px-0 pb-0\">\r\n            <Swiper {...params}>\r\n              {store.pageData[storeName]?.data.map((row) => {\r\n                return (\r\n                  <SwiperSlide key={`swiper_${row.id}`}>\r\n                    <Card className=\"card-developer-meetup cursor-pointer\">\r\n                      <div className=\"meetup-img-wrapper rounded-top text-center\">\r\n                        <img\r\n                          src={\r\n                            row?.TrainingData?.Image\r\n                              ? row.TrainingData.Image\r\n                              : illustration\r\n                          }\r\n                          height=\"170\"\r\n                        />\r\n                      </div>\r\n                      <CardBody>\r\n                        <div className=\"meetup-header d-flex align-items-center\">\r\n                          <div className=\"meetup-day\">\r\n                            <h6 className=\"mb-0\">\r\n                              <Moment filter={toUpperCaseFilter} format=\"ddd\">\r\n                                {row?.TrainingData?.StartDate}\r\n                              </Moment>\r\n                            </h6>\r\n                            <h3 className=\"mb-0\">\r\n                              <Moment format=\"DD\">\r\n                                {row?.TrainingData?.StartDate}\r\n                              </Moment>\r\n                            </h3>\r\n                          </div>\r\n                          <div className=\"my-auto text-truncate\">\r\n                            <CardTitle tag=\"h4\" className=\"mb-25\">\r\n                              {row?.TrainingData?.Name}\r\n                            </CardTitle>\r\n                            <CardText className=\"mb-0\">\r\n                              {row?.TrainingData?.Description}\r\n                            </CardText>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"d-flex\">\r\n                          <Avatar\r\n                            color=\"light-primary\"\r\n                            className=\"rounded me-1\"\r\n                            icon={<Calendar size={18} />}\r\n                          />\r\n                          <div>\r\n                            {/* <h6 className=\"mb-0\">Sat, May 25, 2020</h6>\r\n                    <small>10:AM to 6:PM</small> */}\r\n                            <h6 className=\"mb-0\">\r\n                              {\r\n                                <Moment calendar={calendarStrings}>\r\n                                  {row?.TrainingData?.StartDate}\r\n                                </Moment>\r\n                              }\r\n                            </h6>\r\n                            <small>\r\n                              {\r\n                                <Moment format=\"[Start at] LT\">\r\n                                  {row?.TrainingData?.StartDate}\r\n                                </Moment>\r\n                              }\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                        {!row?.TrainingData?.IsOnline ? (\r\n                          <div className=\"d-flex mt-2\">\r\n                            <Avatar\r\n                              color=\"light-primary\"\r\n                              className=\"rounded me-1\"\r\n                              icon={<MapPin size={18} />}\r\n                            />\r\n                            <div className=\"align-items-center align-middle my-auto\">\r\n                              {/* <h6 className=\"mb-0\">Central Park</h6> */}\r\n                              <small>{row?.TrainingData?.Address}</small>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"d-flex mt-2\">\r\n                            <Avatar\r\n                              color=\"light-primary\"\r\n                              className=\"rounded me-1\"\r\n                              icon={<Video size={18} />}\r\n                            />\r\n                            <div className=\"align-items-center align-middle my-auto\">\r\n                              <h6 className=\"mb-0\">{t(\"Online Training\")}</h6>\r\n                              {row?.TrainingData?.LinkRef && (\r\n                                <small>\r\n                                  {row?.TrainingData?.LinkRef\r\n                                    ? row?.TrainingData?.LinkRef\r\n                                    : \"The link will be sent before the event starts\"}\r\n                                </small>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        {row?.FunctionalPosition && (\r\n                          <div className=\"d-flex mt-2\">\r\n                            <Avatar\r\n                              color=\"light-primary\"\r\n                              className=\"rounded me-1\"\r\n                              icon={<Crosshair size={18} />}\r\n                            />\r\n                            <div className=\"align-items-center align-middle my-auto\">\r\n                              {row.FunctionalPosition.map((rowx, i) => {\r\n                                return (\r\n                                  <Badge\r\n                                    key={`badge_${i}`}\r\n                                    color={`light-${\r\n                                      colorsBadge[i] ?? \"primary\"\r\n                                    }`}\r\n                                  >\r\n                                    {rowx?.name}\r\n                                  </Badge>\r\n                                )\r\n                              })}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        {/* <AvatarGroup data={data} /> */}\r\n                        {!row?.isManager ? (\r\n                          <Col className=\"d-grid mt-2\" sm=\"12\">\r\n                            <Button.Ripple\r\n                              onClick={getManager}\r\n                              color=\"gradient-primary\"\r\n                            >\r\n                              {t(\"Follow\")}\r\n                            </Button.Ripple>\r\n                            {/* <Collapse isOpen={isOpen}>\r\n                              <Alert color=\"primary\">\r\n                                <div className=\"alert-body\">\r\n                                  <Info size={15} />\r\n                                  <span className=\"ms-1\">\r\n                                    Chupa chups topping bonbon. Jelly-o toffee I\r\n                                    love. Sweet I love wafer I love wafer.\r\n                                  </span>\r\n                                </div>\r\n                              </Alert>\r\n\r\n                              <Col className=\"mt-1\" md=\"12\" sm=\"12\">\r\n                                <Label className=\"form-label\">\r\n                                  {t(\"Please Select Your Manager\")}\r\n                                </Label>\r\n                                <Select\r\n                                  theme={selectThemeColors}\r\n                                  className=\"react-select\"\r\n                                  classNamePrefix=\"select\"\r\n                                  defaultValue={colourOptions[0]}\r\n                                  options={colourOptions}\r\n                                  isClearable={false}\r\n                                />\r\n                              </Col>\r\n                            </Collapse> */}\r\n                            <Modal\r\n                              isOpen={isOpen}\r\n                              toggle={toggle}\r\n                              className={\"modal-dialog-centered\"}\r\n                            >\r\n                              <ModalHeader toggle={toggle}>\r\n                                {t(\"Manager Approval Required\")}\r\n                              </ModalHeader>\r\n                              <ModalBody>\r\n                                <Alert color=\"primary\">\r\n                                  <div className=\"alert-body\">\r\n                                    {t(\r\n                                      \"Please select your manager to approve your participation in this training\"\r\n                                    )}\r\n                                  </div>\r\n                                </Alert>\r\n\r\n                                <Col className=\"mt-1\" md=\"12\" sm=\"12\">\r\n                                  <Select\r\n                                    {...renderAvatarImgIcon(managerData)}\r\n                                    // isDisabled={loadingGetManager}\r\n                                    placeholder={t(\"Choose Manager\")}\r\n                                    isLoading={loadingGetManager}\r\n                                    theme={selectThemeColors}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                    onChange={setManagerDataSelected}\r\n                                    options={managerData.map((item) => {\r\n                                      return {\r\n                                        label: item.Employee_Name,\r\n                                        value: item.Id_Employee,\r\n                                        img: item?.Employee_PhotoPath,\r\n                                        position: item?.PositionName\r\n                                      }\r\n                                    })}\r\n                                    isClearable={false}\r\n                                  />\r\n                                </Col>\r\n                              </ModalBody>\r\n                              <ModalFooter>\r\n                                {!loadingPostPut ? (\r\n                                  <Button\r\n                                    disabled={!managerDataSelected}\r\n                                    color=\"primary\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault()\r\n                                      postDataToApi({\r\n                                        id: row?.Id_Training,\r\n                                        manager_id: managerDataSelected.value\r\n                                      })\r\n                                    }}\r\n                                    outline\r\n                                  >\r\n                                    {t(\"Apply to Manager\")}\r\n                                  </Button>\r\n                                ) : (\r\n                                  <Button.Ripple color=\"primary\">\r\n                                    <Spinner\r\n                                      color=\"white\"\r\n                                      size=\"sm\"\r\n                                      type=\"grow\"\r\n                                    />\r\n                                    <span className=\"ms-50\">{loadingText}</span>\r\n                                  </Button.Ripple>\r\n                                )}\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                          </Col>\r\n                        ) : (\r\n                          <Col className=\"d-grid mt-2\" sm=\"12\">\r\n                            <Button.Ripple\r\n                              onClick={(e) => {\r\n                                navigate(\r\n                                  `/dyn_pages/hr/training/edit/${row.Id_Training}/training_employee`\r\n                                )\r\n                              }}\r\n                              color=\"gradient-primary\"\r\n                            >\r\n                              <AssignmentIndOutlinedIcon size={14} />\r\n                              <span className=\"align-middle ms-25\">\r\n                                {t(\"Assign to Staff\")}\r\n                              </span>\r\n                            </Button.Ripple>\r\n                          </Col>\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </SwiperSlide>\r\n                )\r\n              })}\r\n            </Swiper>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    ) : null\r\n  }\r\n}\r\n\r\nexport default WidgetTrainingAssignedForMe\r\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Spinner } from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"./ui-loader.scss\"\r\n\r\nconst UILoader = (props) => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames(\"ui-loader\", {\r\n        [className]: className,\r\n        show: blocking\r\n      })}\r\n    >\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className=\"overlay\" /*eslint-disable */\r\n            {...(blocking && overlayColor\r\n              ? { style: { backgroundColor: overlayColor } }\r\n              : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className=\"loader\">{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: \"div\",\r\n  blocking: false,\r\n  loader: <Spinner color=\"primary\" />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","export default __webpack_public_path__ + \"static/media/email.6f4a4684.svg\";","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 3H3c-1.1 0-2 .9-2 2v3h2V5h18v14h-7v2h7c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM1 18v3h3c0-1.66-1.34-3-3-3zm0-4v2c2.76 0 5 2.24 5 5h2c0-3.87-3.13-7-7-7zm0-4v2c4.97 0 9 4.03 9 9h2c0-6.08-4.93-11-11-11zm10 1.09v2L14.5 15l3.5-1.91v-2L14.5 13 11 11.09zM14.5 6 9 9l5.5 3L20 9l-5.5-3z\"\n}), 'CastForEducationOutlined');\n\nexports.default = _default;"],"sourceRoot":""}