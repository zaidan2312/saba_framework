{"version":3,"sources":["views/apps/permission_endpoint/index.js","views/apps/permission_endpoint/DropDown.js","@core/components/breadcrumbs/index.js","@core/components/widgets/stats/StatsHorizontal.js"],"names":["List","filtersCustomAdd","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","lookupMode_isM2MDefValFromGrid","lookupMode_defaultFilter","t","useTranslation","dispatch","useDispatch","store","useSelector","state","storeName","useState","useEffect","getApiSummaryData","dataSummary","length","isLoadingSummary","getAlwaysGrid","getSummaryData","colors","className","title","pageTitle","data","map","item","index","color","statTitle","icon","baseClassName","fontSize","renderStats","sx","bgcolor","animation","height","width","count_format","count","isLoading","getDataList","theme","selectThemeColors","defaultValue","dataDropdown","filter","el","value","isMulti","onChange","e","options","classnames","selectedData","id","classNamePrefix","BreadCrumbs","props","mb","subtitle","tag","to","Wrapper","link","Link","Fragment","isLastItem","active","StatsHorizontal","cardColor","stats","countTextColor","countTextStyle","titleStyle","statsMargin","solidColor","cardStyle","titleOnTop","cardColorFix","style","inverse"],"mappings":"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","file":"static/js/53.c7591334.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport Table from \"./Table\"\nimport DropDown from \"./DropDown\"\nimport { Row, Col } from \"reactstrap\"\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\"\nimport { User, UserPlus, UserCheck, UserX } from \"react-feather\"\nimport Icon from \"@mui/material/Icon\"\nimport AddCardOutlinedIcon from \"@mui/icons-material/AddCardOutlined\"\nimport \"./style.scss\"\nimport Breadcrumbs from \"@components/breadcrumbs\"\n\nimport {\n  storeName,\n  getAlwaysGrid,\n  getApiSummaryData,\n  getSummaryData,\n  pageTitle,\n  isTreeLayout\n} from \"./store\"\nimport { Skeleton } from \"@mui/material\"\n\nconst List = ({\n  filtersCustomAdd = {},\n  lookupMode = false,\n  lookupMode_fieldName = \"\",\n  lookupMode_dropdown = false,\n  lookupMode_isMulti = false,\n  lookupMode_onChange,\n  lookupMode_defaultValue,\n  lookupMode_isM2MDefValFromGrid,\n  lookupMode_defaultFilter\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  const handleFilter = (event) => {\n    // console.log(\"handleFilter\")\n    setSearchTerm(event)\n    // debounceFn(event)\n  }\n\n  useEffect(() => {\n    if (\n      getApiSummaryData &&\n      (store.dataSummary?.length === 0 ||\n        (!store.isLoadingSummary && getAlwaysGrid))\n    ) {\n      dispatch(getSummaryData({}))\n    }\n  }, [dispatch, store.dataSummary?.length])\n\n  const colors = [\n    \"primary\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"info\",\n    \"secondary\"\n  ]\n\n  return !lookupMode_dropdown ? (\n    <Fragment>\n      <div className=\"content-header row\">\n        {!lookupMode && (\n          <Breadcrumbs\n            title={t(pageTitle)}\n            data={[{ title: t(\"App Setting\") }, { title: t(pageTitle) }]}\n          />\n        )}\n        {/* <div className=\"content-header-right text-md-end col-md col-12 mb-2 \">\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n        </div> */}\n      </div>\n      <div className=\"app-user-list\">\n        {getApiSummaryData && !lookupMode && (\n          <Row>\n            {store.dataSummary?.map((item, index) => {\n              return (\n                <Col>\n                  <StatsHorizontal\n                    color={colors[index]}\n                    statTitle={`${t(item.title)}`}\n                    icon={\n                      item.icon ? (\n                        <Icon\n                          baseClassName=\"material-icons-outlined\"\n                          fontSize=\"20\"\n                        >\n                          {item.icon}\n                        </Icon>\n                      ) : (\n                        <Icon\n                          baseClassName=\"material-icons-outlined\"\n                          fontSize=\"20\"\n                        >\n                          lightbulb\n                        </Icon>\n                      )\n                    }\n                    renderStats={\n                      store.isLoadingSummary ? (\n                        <Skeleton\n                          sx={{ bgcolor: \"#eef2f8\" }}\n                          animation=\"wave\"\n                          height={25}\n                          width={40}\n                          className=\"fw-bolder mb-75\"\n                        />\n                      ) : (\n                        <h3 className=\"fw-bolder mb-75\">\n                          {item.count_format ?? item.count}\n                        </h3>\n                      )\n                    }\n                  />\n                </Col>\n              )\n            })}\n          </Row>\n        )}\n        <Table\n          filtersCustomAdd={filtersCustomAdd}\n          lookupMode={lookupMode}\n          lookupMode_fieldName={lookupMode_fieldName}\n          lookupMode_defaultValue={lookupMode_defaultValue}\n          lookupMode_onChange={lookupMode_onChange}\n          lookupMode_isMulti={lookupMode_isMulti}\n          lookupMode_isM2MDefValFromGrid={lookupMode_isM2MDefValFromGrid}\n          lookupMode_defaultFilter={lookupMode_defaultFilter}\n        />\n      </div>\n    </Fragment>\n  ) : (\n    <DropDown\n      lookupMode_fieldName={lookupMode_fieldName}\n      lookupMode_onChange={lookupMode_onChange}\n      lookupMode_defaultValue={lookupMode_defaultValue}\n      lookupMode_isMulti={lookupMode_isMulti}\n      lookupMode_isM2MDefValFromGrid={lookupMode_isM2MDefValFromGrid}\n    />\n  )\n}\n\nexport default List\n","import { Fragment, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport \"./style.scss\"\nimport { selectThemeColors } from \"@utils\"\nimport classnames from \"classnames\"\nimport Select from \"react-select\"\n\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\n\nconst List = ({\n  lookupMode_fieldName = \"\",\n  lookupMode_isMulti = false,\n  lookupMode_onChange,\n  lookupMode_defaultValue\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const onChangeInput = (e) => {\n    return lookupMode_onChange(e, lookupMode_fieldName)\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      dispatch(getDataList({}))\n    }\n  }, [dispatch, store.data.length])\n\n  return (\n    <Fragment>\n      <Select\n        theme={selectThemeColors}\n        defaultValue={\n          !lookupMode_isMulti\n            ? store.dataDropdown.filter(\n                (el) => el.value === lookupMode_defaultValue\n              )\n            : lookupMode_defaultValue\n        }\n        isMulti={lookupMode_isMulti}\n        // onChange={lookupMode_onChange}\n        onChange={onChangeInput}\n        options={store.dataDropdown}\n        className={classnames(\"react-select\", {\n          \"is-invalid\": store.selectedData?.id === null\n        })}\n        classNamePrefix=\"select\"\n      />\n    </Fragment>\n  )\n}\n\nexport default List\n","// ** React Imports\nimport { Fragment } from \"react\"\nimport { Link } from \"react-router-dom\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from \"react-feather\"\nimport { useTranslation } from \"react-i18next\"\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from \"reactstrap\"\n\nconst BreadCrumbs = (props) => {\n  const { t } = useTranslation()\n  // ** Props\n  const { data, title, mb, subtitle } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={`content-header-left col-md-9 col-8 ${\n        mb || mb === 0 ? `mb-${mb}` : \"mb-2\"\n      }`}\n    >\n      <div className=\"row breadcrumbs-top\">\n        <div className=\"col-12\">\n          {title ? (\n            <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n          ) : (\n            \"\"\n          )}\n          <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n            <Breadcrumb>\n              <BreadcrumbItem tag=\"li\">\n                <Link to=\"/\">{t(\"Home\")}</Link>\n              </BreadcrumbItem>\n              {renderBreadCrumbs()}\n            </Breadcrumb>\n          </div>\n        </div>\n        <div className=\"col-12\">{subtitle ?? \"\"}</div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** Third Party Components\nimport PropTypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from \"reactstrap\"\nimport { Fragment } from \"react\"\n\nconst StatsHorizontal = ({\n  icon,\n  color,\n  cardColor,\n  stats,\n  renderStats,\n  statTitle,\n  className,\n  countTextColor,\n  countTextStyle = {},\n  titleStyle = {},\n  statsMargin,\n  solidColor = false,\n  cardStyle = {},\n  titleOnTop = false\n}) => {\n  const cardColorFix = !solidColor ? `bg-light-${cardColor}` : `bg-${cardColor}`\n  return (\n    <Card\n      style={{ ...cardStyle }}\n      {...(cardColor ? { className: cardColorFix, inverse: true } : {})}\n    >\n      <CardBody className={className}>\n        {!titleOnTop ? (\n          <div className=\"d-flex justify-content-between align-items-center\">\n            {renderStats ? (\n              renderStats\n            ) : (\n              <Fragment>\n                <div>\n                  {renderStats ? (\n                    renderStats\n                  ) : (\n                    <h3\n                      className={classnames(\"fw-bolder\", {\n                        \"mb-0\": !statsMargin,\n                        [statsMargin]: statsMargin\n                      })}\n                      style={{\n                        color: countTextColor ?? \"#5e5873\",\n                        ...countTextStyle\n                      }}\n                    >\n                      {stats}\n                    </h3>\n                  )}\n\n                  <p style={{ ...titleStyle }} className=\"card-text\">\n                    {statTitle}\n                  </p>\n                </div>\n                <div\n                  className={`avatar avatar-stats p-50 m-0 ${\n                    color ? `bg-light-${color}` : \"bg-light-primary\"\n                  }`}\n                >\n                  <div className=\"avatar-content\">{icon}</div>\n                </div>\n              </Fragment>\n            )}\n          </div>\n        ) : (\n          <Fragment>\n            <div>\n              <p style={{ ...titleStyle }} className=\"card-text\">\n                {statTitle}\n              </p>\n            </div>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              {renderStats ? (\n                renderStats\n              ) : (\n                <Fragment>\n                  <div>\n                    {renderStats ? (\n                      renderStats\n                    ) : (\n                      <h3\n                        className={classnames(\"fw-bolder\", {\n                          \"mb-0\": !statsMargin,\n                          [statsMargin]: statsMargin\n                        })}\n                        style={{\n                          color: countTextColor ?? \"#5e5873\",\n                          ...countTextStyle\n                        }}\n                      >\n                        {stats}\n                      </h3>\n                    )}\n                  </div>\n                  <div\n                    className={`avatar avatar-stats p-50 m-0 ${\n                      color ? `bg-light-${color}` : \"bg-light-primary\"\n                    }`}\n                  >\n                    <div className=\"avatar-content\">{icon}</div>\n                  </div>\n                </Fragment>\n              )}\n            </div>\n          </Fragment>\n        )}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  color: PropTypes.string,\n  cardColor: PropTypes.string,\n  statTitle: PropTypes.string,\n  statsMargin: PropTypes.oneOf([\n    \"mb-0\",\n    \"mb-25\",\n    \"mb-50\",\n    \"mb-75\",\n    \"mb-1\",\n    \"mb-2\",\n    \"mb-3\",\n    \"mb-4\",\n    \"mb-5\"\n  ])\n}\n"],"sourceRoot":""}