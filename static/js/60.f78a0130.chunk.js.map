{"version":3,"sources":["views/apps/user/index.js","@core/components/widgets/stats/StatsHorizontal.js"],"names":["UsersList","t","useTranslation","dispatch","useDispatch","store","useSelector","state","users","useEffect","dataSummary","length","isLoadingSummary","getSummaryData","_jsxs","className","children","Row","_jsx","Col","lg","sm","StatsHorizontal","color","statTitle","icon","User","size","renderStats","Skeleton","sx","bgcolor","animation","height","width","total_data","UserCheck","total_active","UserX","total_suspended","UserPlus","total_inactive","Table","_ref","cardColor","stats","countTextColor","_ref$countTextStyle","countTextStyle","_ref$titleStyle","titleStyle","statsMargin","_ref$solidColor","solidColor","_ref$cardStyle","cardStyle","_ref$titleOnTop","titleOnTop","cardColorFix","concat","Card","_objectSpread","style","inverse","CardBody","Fragment","classnames","_defineProperty"],"mappings":"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","file":"static/js/60.f78a0130.chunk.js","sourcesContent":["import { Fragment, useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Table from \"./Table\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\"\r\nimport { User, UserPlus, UserCheck, UserX } from \"react-feather\"\r\nimport \"@styles/react/apps/app-users.scss\"\r\nimport { getSummaryData } from \"@src/views/apps/user/store\"\r\n\r\nconst UsersList = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.users)\r\n\r\n  useEffect(() => {\r\n    if (store.dataSummary.length === 0 && !store.isLoadingSummary) {\r\n      dispatch(getSummaryData({}))\r\n    }\r\n  }, [dispatch, store.dataSummary.length])\r\n\r\n  return (\r\n    <div className=\"app-user-list\">\r\n      <Row>\r\n        <Col lg=\"3\" sm=\"6\">\r\n          <StatsHorizontal\r\n            color=\"primary\"\r\n            statTitle={t(\"Total Users\")}\r\n            icon={<User size={20} />}\r\n            renderStats={\r\n              store.isLoadingSummary ? (\r\n                <Skeleton\r\n                  sx={{ bgcolor: \"#eef2f8\" }}\r\n                  animation=\"wave\"\r\n                  height={25}\r\n                  width={40}\r\n                  className=\"fw-bolder mb-75\"\r\n                />\r\n              ) : (\r\n                <h3 className=\"fw-bolder mb-75\">\r\n                  {store.dataSummary.total_data}\r\n                </h3>\r\n              )\r\n            }\r\n          />\r\n        </Col>\r\n        <Col lg=\"3\" sm=\"6\">\r\n          <StatsHorizontal\r\n            color=\"success\"\r\n            statTitle={t(\"Active Users\")}\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={\r\n              store.isLoadingSummary ? (\r\n                <Skeleton\r\n                  sx={{ bgcolor: \"#eef2f8\" }}\r\n                  animation=\"wave\"\r\n                  height={25}\r\n                  width={40}\r\n                  className=\"fw-bolder mb-75\"\r\n                />\r\n              ) : (\r\n                <h3 className=\"fw-bolder mb-75\">\r\n                  {store.dataSummary.total_active}\r\n                </h3>\r\n              )\r\n            }\r\n          />\r\n        </Col>\r\n        <Col lg=\"3\" sm=\"6\">\r\n          <StatsHorizontal\r\n            color=\"warning\"\r\n            statTitle={t(\"Pending Users\")}\r\n            icon={<UserX size={20} />}\r\n            renderStats={\r\n              store.isLoadingSummary ? (\r\n                <Skeleton\r\n                  sx={{ bgcolor: \"#eef2f8\" }}\r\n                  animation=\"wave\"\r\n                  height={25}\r\n                  width={40}\r\n                  className=\"fw-bolder mb-75\"\r\n                />\r\n              ) : (\r\n                <h3 className=\"fw-bolder mb-75\">\r\n                  {store.dataSummary.total_suspended}\r\n                </h3>\r\n              )\r\n            }\r\n          />\r\n        </Col>\r\n        <Col lg=\"3\" sm=\"6\">\r\n          <StatsHorizontal\r\n            color=\"danger\"\r\n            statTitle={t(\"Suspended Users\")}\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={\r\n              store.isLoadingSummary ? (\r\n                <Skeleton\r\n                  sx={{ bgcolor: \"#eef2f8\" }}\r\n                  animation=\"wave\"\r\n                  height={25}\r\n                  width={40}\r\n                  className=\"fw-bolder mb-75\"\r\n                />\r\n              ) : (\r\n                <h3 className=\"fw-bolder mb-75\">\r\n                  {store.dataSummary.total_inactive}\r\n                </h3>\r\n              )\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** Third Party Components\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from \"reactstrap\"\r\nimport { Fragment } from \"react\"\r\n\r\nconst StatsHorizontal = ({\r\n  icon,\r\n  color,\r\n  cardColor,\r\n  stats,\r\n  renderStats,\r\n  statTitle,\r\n  className,\r\n  countTextColor,\r\n  countTextStyle = {},\r\n  titleStyle = {},\r\n  statsMargin,\r\n  solidColor = false,\r\n  cardStyle = {},\r\n  titleOnTop = false\r\n}) => {\r\n  const cardColorFix = !solidColor ? `bg-light-${cardColor}` : `bg-${cardColor}`\r\n  return (\r\n    <Card\r\n      style={{ ...cardStyle }}\r\n      {...(cardColor ? { className: cardColorFix, inverse: true } : {})}\r\n    >\r\n      <CardBody className={className}>\r\n        {!titleOnTop ? (\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <Fragment>\r\n                <div>\r\n                  {renderStats ? (\r\n                    renderStats\r\n                  ) : (\r\n                    <h3\r\n                      className={classnames(\"fw-bolder\", {\r\n                        \"mb-0\": !statsMargin,\r\n                        [statsMargin]: statsMargin\r\n                      })}\r\n                      style={{\r\n                        color: countTextColor ?? \"#5e5873\",\r\n                        ...countTextStyle\r\n                      }}\r\n                    >\r\n                      {stats}\r\n                    </h3>\r\n                  )}\r\n\r\n                  <p style={{ ...titleStyle }} className=\"card-text\">\r\n                    {statTitle}\r\n                  </p>\r\n                </div>\r\n                <div\r\n                  className={`avatar avatar-stats p-50 m-0 ${\r\n                    color ? `bg-light-${color}` : \"bg-light-primary\"\r\n                  }`}\r\n                >\r\n                  <div className=\"avatar-content\">{icon}</div>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Fragment>\r\n            <div>\r\n              <p style={{ ...titleStyle }} className=\"card-text\">\r\n                {statTitle}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              {renderStats ? (\r\n                renderStats\r\n              ) : (\r\n                <Fragment>\r\n                  <div>\r\n                    {renderStats ? (\r\n                      renderStats\r\n                    ) : (\r\n                      <h3\r\n                        className={classnames(\"fw-bolder\", {\r\n                          \"mb-0\": !statsMargin,\r\n                          [statsMargin]: statsMargin\r\n                        })}\r\n                        style={{\r\n                          color: countTextColor ?? \"#5e5873\",\r\n                          ...countTextStyle\r\n                        }}\r\n                      >\r\n                        {stats}\r\n                      </h3>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    className={`avatar avatar-stats p-50 m-0 ${\r\n                      color ? `bg-light-${color}` : \"bg-light-primary\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"avatar-content\">{icon}</div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element,\r\n  color: PropTypes.string,\r\n  cardColor: PropTypes.string,\r\n  statTitle: PropTypes.string,\r\n  statsMargin: PropTypes.oneOf([\r\n    \"mb-0\",\r\n    \"mb-25\",\r\n    \"mb-50\",\r\n    \"mb-75\",\r\n    \"mb-1\",\r\n    \"mb-2\",\r\n    \"mb-3\",\r\n    \"mb-4\",\r\n    \"mb-5\"\r\n  ])\r\n}\r\n"],"sourceRoot":""}