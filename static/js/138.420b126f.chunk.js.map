{"version":3,"sources":["views/apps/endpoint/modal/index.js","views/apps/endpoint/Table.js","../../src/mounts.js","../../src/index.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js"],"names":["ModalAddEdit","show","setShow","detailPage","formState","setFormState","currentData","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","allStore","dynamicComponents","setDynamicComponents","formDatas","formDatasError","setFormDatasError","useForm","setError","control","handleSubmit","Loader","errors","className","handleReset","resetSelectedData","handleChangeInputs","value","fieldName","isMulti","index","indexOf","splice","push","useEffect","componentsImport","dynamicFormRelation","dynamicForm","i","fieldLabel","path_name","replaceAll","MyComponent","lazy","for","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","isMultiSelection","lookupMode_onChange","lookupMode_defaultValue","isM2MDefValFromGrid","data","map","x","selectedData","lookupMode_isM2MDefValFromGrid","defaultValue","onChange","e","target","length","isOpen","toggle","blocking","isLoadingAddEdit","isLoadingDetail","loader","pageTitle","title","onSubmit","storeData","sortedObject","key","JSON","stringify","countChanges","Object","values","every","field","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","type","icon","postData","errorFields","assign","item","includes","md","xs","fallback","textAlign","outline","onClick","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","handleFiltersChange","filtersCustomAdd","searchString","ability","AbilityContext","dynamicFilterComponents","setDynamicFilterComponents","dynamicFilterDatas","invoices","getUserData","dynamicColumnsFilter","xl","htmlFor","width","can","sessionStorage","getItem","List","storeApp","apps_app","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","selectedRows","setSelectedRows","filtersCustom","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","showModal","setShowModal","handleEdit","rowData","detailFromGrid","setDataById","isLoading","getDataListApp","handleCloseModal","revivalBack","neutralizeBack","handleDelete","a","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","countSelectedCopy","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","s","columns","dynamicColumns","column","name","columnName","sortField","center","sortable","minWidth","selector","row","cell","dataFormat","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","app_logo","img","height","imgHeight","imgWidth","initials","content","app_name","disabledAction","tableColumns","useMemo","sx","bgcolor","dark","light","animation","removeDefaultValue","dataTree","parse","getAlwaysGrid","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","keys","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget","par_name","mounts","getter","swal","noop","extractReactParams","reactParams","otherParams","mountKeys","mount","React","render","domElement","ReactDOM","unrender","_main","this","__mountedDomElements","__params","superDidOpen","superDidDestroy","didOpen","popup","didDestroy","update","argsToParams","args","params","forEach","ParentSwal","arrayLikeToArray","module","exports","arr","isArray","__esModule","iter","Symbol","iterator","from","TypeError","strings","raw","slice","freeze","defineProperties","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"mappings":"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","file":"static/js/138.420b126f.chunk.js","sourcesContent":["/* eslint-disable brace-style */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useContext,\n  useEffect,\n  useState,\n  lazy,\n  Suspense\n} from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors, sortedObject } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById,\n  dynamicForm\n} from \"../store\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState,\n  currentData = null\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const allStore = useSelector((state) => state)\n  const [dynamicComponents, setDynamicComponents] = useState({})\n  const [formDatas, setFormDatas] = useState({})\n  const [formDatasError, setFormDatasError] = useState({})\n\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\n      </Fragment>\n    )\n  }\n\n  const countChanges = (data) => {\n    if (formState === \"edit\") {\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n\n  const updateDataToApi = () => {\n    if (countChanges(formDatas)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = () => {\n    if (\n      Object.values(formDatas).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      dispatch(postData(formDatas)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setShow(!show)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n          if (detailPage) {\n            dispatch(getDataById(id))\n          }\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      // console.log(\"ERORR\")\n      // console.log(formDatas)\n      let errorFields = Object.assign({}, formDatasError)\n      for (let key in formDatas) {\n        // console.log(key, formDatas[key])\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\n          errorFields[key] = true\n        }\n      }\n      // console.log(errorFields)\n      setFormDatasError(errorFields)\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\n    // console.log(value, fieldName, isMulti)\n    if (isMulti) {\n      if (formDatas[fieldName]) {\n        const index = formDatas[fieldName].indexOf(value)\n        if (index !== -1) {\n          formDatas[fieldName].splice(index, 1)\n        } else {\n          formDatas[fieldName].push(value)\n        }\n      } else {\n        formDatas[fieldName] = [value]\n      }\n    } else {\n      formDatas[fieldName] = value\n    }\n    // formDatasError[fieldName] = false\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\n  }\n\n  useEffect(() => {\n    // DYNAMIC IMPORT COMPONENTS\n    let componentsImport = {}\n    // const dynamicFormRelation = dynamicForm.filter(function (el) {\n    //   return el.type === \"dropdown\" || el.type === \"table\"\n    // })\n\n    const dynamicFormRelation = dynamicForm\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\n      const fieldLabel = dynamicFormRelation[i][\"fieldLabel\"]\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\n        \"id_\",\n        \"\"\n      )\n\n      formDatas[fieldName] = null\n      formDatasError[fieldName] = false\n\n      ////////////INPUT - DROPDOWN\n      if (\n        dynamicFormRelation[i][\"type\"] === \"dropdown\" ||\n        dynamicFormRelation[i][\"type\"] === \"table\"\n      ) {\n        const MyComponent = lazy(() => import(`../../${path_name}`))\n        componentsImport[`${path_name}_comp`] = (\n          <Fragment>\n            <Label className=\"form-label\" for={fieldName}>\n              {t(fieldLabel ?? \"\")}\n            </Label>\n            <MyComponent\n              key={`dynInput_${fieldName}`}\n              lookupMode={true}\n              lookupMode_fieldName={fieldName}\n              lookupMode_dropdown={\n                dynamicFormRelation[i][\"type\"] === \"dropdown\"\n              }\n              lookupMode_isMulti={\n                dynamicFormRelation[i].isMultiSelection ?? false\n              }\n              lookupMode_onChange={handleChangeInputs}\n              lookupMode_defaultValue={\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\n                  ? allStore[storeName].data.map((x) => x[fieldName])\n                  : allStore[storeName]?.selectedData\n                  ? allStore[storeName].selectedData[fieldName]\n                  : \"\"\n              }\n              lookupMode_isM2MDefValFromGrid={\n                dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\n              }\n            />\n          </Fragment>\n        )\n      }\n\n      ////////////INPUT - TEXT\n      else {\n        componentsImport[`${path_name}_comp`] = (\n          <Fragment>\n            <Label className=\"form-label\" for={fieldName}>\n              {t(fieldLabel ?? \"\")}\n            </Label>\n            <Input\n              key={`dynInput_${fieldName}`}\n              defaultValue={\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\n                  ? allStore[storeName].data.map((x) => x[fieldName])\n                  : allStore[storeName]?.selectedData\n                  ? allStore[storeName].selectedData[fieldName]\n                  : \"\"\n              }\n              onChange={(e) =>\n                handleChangeInputs(\n                  e.target.value,\n                  fieldName,\n                  dynamicFormRelation[i].isMultiSelection ?? false\n                )\n              }\n              // className={\n              //   !formDatasError[fieldName]\n              //     ? \"form-control is-invalid\"\n              //     : \"form-control\"\n              // }\n              id={`dynInput_${fieldName}`}\n            />\n          </Fragment>\n        )\n      }\n    }\n\n    setDynamicComponents(componentsImport)\n  }, [])\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\n            </h2>\n            <p className=\"mb-1\">\n              {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\n            </p>\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              {dynamicForm.map((item, index) => {\n                const path_name = item.fieldName.replaceAll(\"id_\", \"\")\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\n                  if (item.type === \"table\") {\n                    return (\n                      <Col key={path_name} md={12} xs={12}>\n                        <Suspense fallback={<div>Loading...</div>}>\n                          <div\n                            className={\n                              !formDatasError[item.fieldName]\n                                ? \"dynamicForm_input\"\n                                : \"dynamicForm_input dynamicForm_input_invalid\"\n                            }\n                          >\n                            {dynamicComponents[`${path_name}_comp`]}\n                            {item?.isM2MDefValFromGrid &&\n                              formDatas[item.fieldName] && (\n                                <div\n                                  style={{ textAlign: \"right\" }}\n                                  className=\"text-primary\"\n                                >\n                                  {formDatas[item.fieldName]?.length}{\" \"}\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\n                                </div>\n                              )}\n                          </div>\n                        </Suspense>\n                      </Col>\n                    )\n                  } else {\n                    return (\n                      <Col key={path_name} md={12} xs={12}>\n                        <Suspense fallback={<div>Loading...</div>}>\n                          <div\n                            className={\n                              !formDatasError[item.fieldName]\n                                ? \"\"\n                                : \"dynamicForm_input_invalid\"\n                            }\n                          >\n                            {dynamicComponents[`${path_name}_comp`]}\n                            {item?.isM2MDefValFromGrid &&\n                              formDatas[item.fieldName] && (\n                                <div\n                                  style={{ textAlign: \"right\" }}\n                                  className=\"text-primary\"\n                                >\n                                  {formDatas[item.fieldName]?.length}{\" \"}\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\n                                </div>\n                              )}\n                          </div>\n                        </Suspense>\n                      </Col>\n                    )\n                  }\n                } else {\n                  return (\n                    <Col key={path_name} md={12} xs={12}>\n                      <div\n                        className={\n                          !formDatasError[item.fieldName]\n                            ? \"\"\n                            : \"dynamicForm_input_invalid\"\n                        }\n                      >\n                        {dynamicComponents[`${path_name}_comp`]}\n                      </div>\n                    </Col>\n                  )\n                }\n              })}\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n  forwardRef,\n  lazy,\n  Suspense\n} from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData,\n  disabledAction,\n  dynamicColumnsFilter,\n  setDataList\n} from \"./store\"\n\nimport { getDataList as getDataListApp } from \"../app/store\"\nimport { getInvoice } from \"../../invoices/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport debounce from \"lodash.debounce\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid\n} from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Button,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  CardText\n} from \"reactstrap\"\n\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { Skeleton } from \"@mui/material\"\nimport Moment from \"moment\"\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\n\nimport { getDataList as getDataListPermission } from \"../permission/store\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\nimport Avatar from \"@components/avatar\"\n\nconst MySwal = withReactContent(Swal)\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className=\"form-check\">\n    <Input type=\"checkbox\" ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({\n  store,\n  toggleSidebar,\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm,\n  selectedRow,\n  handleDeleteSelected,\n  handleFiltersChange,\n  filtersCustomAdd,\n  searchString,\n  lookupMode,\n  lookupMode_fieldName,\n  lookupMode_defaultValue,\n  lookupMode_onChange,\n  lookupMode_isMulti,\n  lookupMode_isM2MDefValFromGrid\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  const dispatch = useDispatch()\n  const allStore = useSelector((state) => state)\n  const [dynamicFilterComponents, setDynamicFilterComponents] = useState({})\n  const [dynamicFilterDatas, setDynamicFilterDatas] = useState({})\n  const storeInvoice = useSelector((state) => state.invoices)\n  const userData = getUserData()\n\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\n    fieldName = `filter_${fieldName}`\n    if (isMulti) {\n      if (dynamicFilterDatas[fieldName]) {\n        const index = dynamicFilterDatas[fieldName].indexOf(value)\n        if (index !== -1) {\n          dynamicFilterDatas[fieldName].splice(index, 1)\n        } else {\n          dynamicFilterDatas[fieldName].push(value)\n        }\n      } else {\n        dynamicFilterDatas[fieldName] = [value]\n      }\n    } else {\n      dynamicFilterDatas[fieldName] = value\n    }\n    return handleFiltersChange(dynamicFilterDatas[fieldName], fieldName)\n  }\n\n  useEffect(() => {\n    // DYNAMIC IMPORT COMPONENTS\n    let componentsImport = {}\n    for (let i = 0; i < dynamicColumnsFilter.length; i++) {\n      const fieldName = dynamicColumnsFilter[i][\"fieldName\"]\n      const path_name = dynamicColumnsFilter[i][\"fieldName\"].replaceAll(\n        \"id_\",\n        \"\"\n      )\n\n      dynamicFilterDatas[`filter_${fieldName}`] = null\n      const MyComponent = lazy(() => import(`../${path_name}`))\n      componentsImport[`${path_name}_comp`] = (\n        <MyComponent\n          lookupMode={true}\n          lookupMode_fieldName={fieldName}\n          lookupMode_dropdown={true}\n          lookupMode_isMulti={dynamicColumnsFilter[i].isMultiSelection ?? false}\n          lookupMode_onChange={handleChangeInputs}\n          lookupMode_defaultValue={\n            dynamicColumnsFilter[i]?.isM2MDefValFromGrid\n              ? allStore[storeName].data.map((x) => x[fieldName])\n              : allStore[storeName]?.selectedData\n              ? allStore[storeName].selectedData[fieldName]\n              : \"\"\n          }\n          lookupMode_isM2MDefValFromGrid={\n            dynamicColumnsFilter[i]?.isM2MDefValFromGrid ?? false\n          }\n        />\n      )\n    }\n\n    setDynamicFilterComponents(componentsImport)\n  }, [dispatch, dynamicFilterDatas])\n\n  return (\n    <div\n      className={`invoice-list-table-header w-100 ms-50 mb-75 ${\n        !lookupMode ? \"mt-2 me-1\" : \"\"\n      }`}\n    >\n      <Row>\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\n          {!lookupMode && (\n            <div className=\"d-flex align-items-center w-100\">\n              <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\n              <Input\n                className=\"mx-50\"\n                type=\"select\"\n                id=\"rows-per-page\"\n                value={rowsPerPage}\n                onChange={handlePerPage}\n                style={{ width: \"5rem\" }}\n              >\n                <option value=\"10\">10</option>\n                <option value=\"25\">25</option>\n                <option value=\"50\">50</option>\n              </Input>\n              <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\n            </div>\n          )}\n        </Col>\n        <Col\n          xl=\"8\"\n          className={`d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column p-0 mt-xl-0 mt-1 ${\n            !lookupMode ? \"pe-xl-1\" : \"\"\n          }`}\n        >\n          {selectedRow?.length > 0 &&\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) &&\n          !lookupMode ? (\n            <div\n              className={`d-flex align-items-center mb-sm-0 mb-1 ${\n                !lookupMode ? \"me-1\" : \"\"\n              }`}\n            >\n              <Button\n                className=\"delete-users\"\n                color=\"danger\"\n                onClick={handleDeleteSelected}\n              >\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\n              </Button>\n            </div>\n          ) : null}\n          <div className={`d-flex align-items-center mb-sm-0 mb-1 me-1`}>\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n\n          {dynamicColumnsFilter.map((item, index) => {\n            const path_name = item.fieldName.replaceAll(\"id_\", \"\")\n            return (\n              <div\n                key={path_name}\n                className={`mt-50 width-300 mt-sm-0 mt-1 ${\n                  !lookupMode ? \"me-1\" : \"\"\n                }`}\n              >\n                <Suspense fallback={<div>Loading...</div>}>\n                  {dynamicFilterComponents[`${path_name}_comp`]}\n                </Suspense>\n              </div>\n\n              // <Col key={path_name} md={12} xs={12}>\n              //   <Label className=\"form-label\" for={item.fieldName}>\n              //     {t(item.fieldLabel ?? \"\")}\n              //   </Label>\n              //   <Suspense fallback={<div>Loading...</div>}>\n              //     <div\n              //       className={\n              //         !formDatasError[item.fieldName]\n              //           ? \"dynamicForm_input\"\n              //           : \"dynamicForm_input dynamicForm_input_invalid\"\n              //       }\n              //     >\n              //       {dynamicComponents[`${path_name}_comp`]}\n              //       {item?.isM2MDefValFromGrid &&\n              //         formDatas[item.fieldName] && (\n              //           <div\n              //             style={{ textAlign: \"right\" }}\n              //             className=\"text-primary\"\n              //           >\n              //             {formDatas[item.fieldName]?.length}{\" \"}\n              //             {t(item.fieldLabel)} {t(\"Selected\")}\n              //           </div>\n              //         )}\n              //     </div>\n              //   </Suspense>\n              // </Col>\n            )\n          })}\n\n          {/* {!filtersCustomAdd[\"filter_id_permission\"] ? (\n            <div className=\"mt-50 width-200 me-1 mt-sm-0 mt-1\">\n              <Input\n                type=\"select\"\n                name=\"select\"\n                // value={role}\n                onChange={(e) =>\n                  handleFiltersChange(e.target.value, \"filter_id_permission\")\n                }\n              >\n                <option value=\"\">\n                  {t(\"Select\")} {t(\"Permission\")}\n                </option>\n                {allStore[\"apps_permission\"].data.map((item, index) => (\n                  <option key={item.id} value={item.id}>\n                    {item.title}\n                  </option>\n                ))}\n              </Input>\n            </div>\n          ) : null} */}\n          <div className=\"d-flex align-items-center table-header-actions\">\n            {ability.can(\"post\", sessionStorage.getItem(\"current_page_perm\")) &&\n            !lookupMode ? (\n              <Button\n                className=\"add-new-user\"\n                color=\"primary\"\n                onClick={toggleSidebar}\n                // onClick={handleAdd}\n              >\n                {t(\"Add New\")} {t(pageTitle)}\n              </Button>\n            ) : null}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst List = ({\n  filtersCustomAdd,\n  searchString,\n  lookupMode,\n  lookupMode_fieldName,\n  lookupMode_defaultValue,\n  lookupMode_onChange,\n  lookupMode_isMulti,\n  lookupMode_isM2MDefValFromGrid\n}) => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const storeApp = useSelector((state) => state.apps_app)\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  const { colors } = useContext(ThemeColors)\n\n  const [sort_dir, setSortDir] = useState(\"desc\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sort, setSort] = useState(\"id\")\n  const [rowsPerPage, setRowsPerPage] = useState(lookupMode ? 5 : 10)\n  const [selectedRows, setSelectedRows] = useState([])\n\n  const [filtersCustom, setFiltersCustom] = useState(filtersCustomAdd ?? {})\n\n  const [toggleCleared, setToggleCleared] = useState(false)\n\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n\n  const handleEdit = (rowData) => {\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        if (storeApp.data.length === 0 && !storeApp.isLoading) {\n          dispatch(getDataListApp({})).then((res) => {\n            setLoading(false)\n            setShowModal(true)\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    }\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const toggleSidebar = () => {\n    // console.log(\"here\")\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const handleDeleteSelected = async () => {\n    const countSelectedCopy = selectedRows.length\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\n        \"selected data. Deleted data cannot be recovered\"\n      )}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\n        pageTitle\n      )}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\n      )\n      setLoading(true)\n      const values = selectedRows.map((a) => a.id)\n      // console.log(values)\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setSelectedRows([])\n          setToggleCleared(!toggleCleared)\n          setLoading(false)\n          toast.success(\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\n            {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            }\n          )\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /////PAGINATION SERVERSIDE\n  const handlePagination = (page) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: rowsPerPage,\n        page: page.selected + 1,\n        ...filtersCustom\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: value,\n        page: currentPage,\n        ...filtersCustom\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  const handleDebounceFn = (inputValue) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        search: inputValue,\n        sort,\n        page: currentPage,\n        length: rowsPerPage,\n        ...filtersCustom\n      })\n    )\n  }\n\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\n\n  const handleFilter = (event) => {\n    setSearchTerm(event)\n    debounceFn(event)\n  }\n\n  const handleChangeLookupMode = (\n    e,\n    id,\n    lookupMode_fieldName,\n    lookupMode_isMulti\n  ) => {\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\n  }\n\n  const handleFiltersChange = (value, par_name) => {\n    filtersCustom[par_name] = value\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage,\n        ...filtersCustom\n      })\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSortDir(sortDirection)\n    setSort(column.sortField)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage,\n        ...filtersCustom\n      })\n    )\n  }\n\n  const handleRowSelected = useCallback((state) => {\n    setSelectedRows(state.selectedRows)\n    if (lookupMode && lookupMode_isMulti) {\n      lookupMode_onChange(\n        state.selectedRows.map((s) => s.id),\n        lookupMode_fieldName,\n        lookupMode_isMulti\n      )\n    }\n  }, [])\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        containerClassName={\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\n        }\n      />\n    )\n  }\n\n  const renderCell = (row, column) => {\n    const field = row[column.fieldName]\n    const dataFormat = column.dataFormat\n    if (dataFormat) {\n      if (dataFormat.includes(\":\")) {\n        const columnTypeFormat = dataFormat.split(\":\")\n        const columnType = columnTypeFormat[0]\n        const columnFormat = columnTypeFormat[1]\n        let columnFormated = row[column.fieldName]\n        if (columnType === \"date\") {\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\n          if (columnFormat) {\n            columnFormated = Moment(field).format(columnFormat)\n          }\n        }\n        if (columnType === \"datetime\") {\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\n          if (columnFormat) {\n            columnFormated = Moment(field).format(columnFormat)\n          }\n        }\n        return columnFormated\n      }\n    }\n    return row[column.fieldName]\n  }\n\n  const columns = [\n    ...store.dynamicColumns.map((column) => ({\n      name: column.columnName,\n      sortField: column.fieldName,\n      center: false,\n      sortable: true,\n      minWidth: column.minWidth,\n      selector: (row) => row[column.fieldName],\n      cell: (row) => renderCell(row, column)\n    })),\n    {\n      name: t(\"App\"),\n      center: false,\n      sortable: false,\n      selector: (row) => row?.app_logo,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center\">\n          {row?.app_logo ? (\n            <Avatar\n              className=\"me-1\"\n              img={row?.app_logo}\n              width=\"32\"\n              height=\"32\"\n              imgHeight=\"25\"\n              imgWidth=\"30\"\n              color={\"light-primary\"}\n            />\n          ) : (\n            <Avatar\n              initials\n              className=\"me-1\"\n              // color={row.avatarColor}\n              content={row?.app_name ?? \"\"}\n            />\n          )}\n\n          <div className=\"d-flex flex-column\">\n            <span className=\"fw-bolder\">{row.app_name}</span>\n          </div>\n        </div>\n      )\n    },\n    // {\n    //   name: t(\"App Name\"),\n    //   sortField: \"attributes\",\n    //   center: false,\n    //   sortable: true,\n    //   selector: (row) => row.attributes,\n    //   cell: (row) => row.attributes\n    // },\n    !lookupMode && {\n      name: t(\"Actions\"),\n      center: true,\n      width: \"140px\",\n      cell: (row) => (\n        <GlobalActionsTable\n          disabledAction={disabledAction}\n          row={row}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n        />\n      )\n      // (\n      //   <Input\n      //     disabled={row.hidden}\n      //     defaultChecked={row.checked}\n      //     onChange={(e) =>\n      //       handleChangeLookupMode(\n      //         e,\n      //         row.id,\n      //         lookupMode_fieldName,\n      //         lookupMode_isMulti\n      //       )\n      //     }\n      //     type=\"checkbox\"\n      //     id={`checkbox-${row.id}`}\n      //   />\n      // )\n    }\n  ]\n\n  const tableColumns = useMemo(\n    () =>\n      store.isLoading\n        ? columns.map((column) => ({\n            name: t(column.name),\n            ...column,\n            sortable: false,\n            cell: (row) =>\n              column.name === \"Actions\" ? (\n                <Fragment>\n                  <Skeleton\n                    sx={{ bgcolor: colors.dark.light }}\n                    animation=\"wave\"\n                    className=\"ms-2 me-1\"\n                    width={30}\n                    height={40}\n                  />\n                  <Skeleton\n                    sx={{ bgcolor: colors.dark.light }}\n                    animation=\"wave\"\n                    width={30}\n                    height={40}\n                  />\n                </Fragment>\n              ) : (\n                <Skeleton\n                  sx={{ bgcolor: colors.dark.light }}\n                  animation=\"wave\"\n                  width=\"100%\"\n                  height={40}\n                />\n              )\n          }))\n        : columns.map((column) => ({\n            name: t(column.name),\n            ...column\n          })),\n    [store.isLoading, columns]\n  )\n\n  const dataToRender = () => {\n    const filters = {\n      search: searchTerm\n    }\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    if (!store.isLoading) {\n      if (store.data.length > 0) {\n        return store.data\n      } else if (store.data.length === 0 && isFiltered) {\n        return []\n      } else {\n        // console.log(store.allData)\n        // return store.allData.slice(0, rowsPerPage)\n      }\n    } else {\n      return Array(10).fill({})\n    }\n  }\n\n  const removeDefaultValue = (data, dataTree) => {\n    // console.log(dataTree)\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\n    // mainArray.forEach(function iter(a) {\n    //   if (data.includes(a.id)) {\n    //     a[\"checked\"] = true\n    //     a[\"hidden\"] = true\n    //   }\n    //   // console.log(a.id, !data.includes(a.id))\n\n    //   // eslint-disable-next-line no-unused-expressions\n    //   Array.isArray(a.children) && a.children.forEach(iter)\n    // })\n    // dispatch(setDataList(mainArray))\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(\n        getDataList({\n          sort_dir,\n          sort,\n          search: searchTerm,\n          page: currentPage,\n          length: rowsPerPage,\n          ...filtersCustom\n        })\n      ).then((x) => {\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\n        }\n      })\n    }\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\n      removeDefaultValue(lookupMode_defaultValue, store.data)\n    }\n  }, [dispatch, sort_dir, sort, currentPage, filtersCustom])\n\n  return (\n    <Fragment>\n      <UILoader blocking={loading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <DataTable\n              noHeader\n              subHeader\n              sortServer\n              responsive\n              pagination\n              paginationServer\n              paginationTotalRows={store.total}\n              paginationComponent={CustomPagination}\n              selectableRows\n              onSelectedRowsChange={handleRowSelected}\n              selectableRowsHighlight\n              // onRowClicked={handleRowSelected}\n              clearSelectedRows={toggleCleared}\n              selectableRowsComponent={BootstrapCheckbox}\n              noDataComponent={<NoDataDisplay />}\n              // fixedHeader\n              // fixedHeaderScrollHeight=\"600px\"\n              style={{ \"min-height\": \"400px\" }}\n              highlightOnHover\n              pointerOnHover\n              columns={tableColumns}\n              onSort={handleSort}\n              sortIcon={<ChevronDown />}\n              className=\"react-dataTable\"\n              data={dataToRender()}\n              subHeaderComponent={\n                <CustomHeader\n                  store={store}\n                  searchTerm={searchTerm}\n                  rowsPerPage={rowsPerPage}\n                  handleFilter={handleFilter}\n                  handlePerPage={handlePerPage}\n                  toggleSidebar={toggleSidebar}\n                  selectedRow={selectedRows}\n                  handleDeleteSelected={handleDeleteSelected}\n                  handleFiltersChange={handleFiltersChange}\n                  filtersCustomAdd={filtersCustomAdd}\n                  lookupMode={lookupMode}\n                />\n              }\n            />\n          </div>\n        </Card>\n\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n","export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent (ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams (params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map(mount => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n  function render (swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find(mount => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      ReactDOM.render(value, domElement)\n      swal.__mountedDomElements.push(domElement)\n    })\n  }\n\n  function unrender (swal) {\n    swal.__mountedDomElements.forEach(domElement => {\n      ReactDOM.unmountComponentAtNode(domElement)\n    })\n    swal.__mountedDomElements = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params, mixinParams) {\n      this.__mountedDomElements = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams)\n            superDidOpen(popup)\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        }),\n      )\n    }\n\n    update (params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nmodule.exports = _taggedTemplateLiteral, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}