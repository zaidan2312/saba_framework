{"version":3,"sources":["views/dashboard/widgets/WidgetTrainingNeedApproval.js","@core/components/ui-loader/index.js","@core/components/avatar-group/index.js","assets/images/illustration/email.svg","../node_modules/@mui/icons-material/InsertInvitationOutlined.js","assets/images/portrait/small/avatar-s-7.jpg"],"names":["params","pagination","clickable","autoplay","delay","disableOnInteraction","WidgetTrainingNeedApproval","t","useTranslation","store","useSelector","state","dynamicStore","dispatch","dynamic_temp_state","useDispatch","colors","useContext","ThemeColors","useState","loadingPostPut","setLoadingPostPut","loadingDelete","loadingText","setLoadingText","storeName","endpointName","useEffect","pageData","data","length","isLoading","getDataList","baseUrl","type","Id_AttendingState","errorToast","res","errorFieldsMsg","payload","error","errors","errorFields","errorx","toast","message","style","padding","color","danger","main","border","iconTheme","primary","calendarStrings","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","toUpperCaseFilter","d","toUpperCase","lg","xs","minHeight","className","tag","blocking","loader","pill","map","row","src","TrainingData","Image","illustration","height","filter","format","StartDate","Name","Description","icon","size","calendar","IsOnline","LinkRef","Address","Employee","item","imgClassName","img","PhotoPath","require","default","imgHeight","imgWidth","FirstName","LastName","Ripple","onClick","e","preventDefault","id","Id_Training","Id_Employee","window","location","href","putDataWidget","then","meta","requestStatus","xxx","success","x","xx","setTimeout","getDataListMyActivity","catch","UILoader","props","children","overlayColor","Tag","classnames","backgroundColor","defaultProps","AvatarGroup","i","title","split","join","linkUrl","ItemTag","Element","undefined","initials","content","to","_interopRequireDefault","Object","defineProperty","exports","value","_createSvgIcon","_jsxRuntime","_default","jsx"],"mappings":"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","file":"static/js/139.6a490fd6.chunk.js","sourcesContent":["import Avatar from \"@components/avatar\"\nimport AvatarGroup from \"@components/avatar-group\"\nimport { Calendar, MapPin, Video } from \"react-feather\"\nimport {\n  Col,\n  Card,\n  CardTitle,\n  CardBody,\n  CardText,\n  CardHeader,\n  CardFooter,\n  Button,\n  Spinner,\n  Badge\n} from \"reactstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport illustration from \"@src/assets/images/illustration/email.svg\"\nimport { Fragment, useEffect, useMemo, useContext, useState } from \"react\"\nimport UILoader from \"@components/ui-loader\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\nimport Moment from \"react-moment\"\nimport \"moment-timezone\"\nimport \"moment/locale/id\"\nimport { putDataWidget, getDataList } from \"@src/shared/dynamic_pages/store\"\n\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\"\nimport EventAvailableOutlinedIcon from \"@mui/icons-material/EventAvailableOutlined\"\nimport toast from \"react-hot-toast\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { getDataList as getDataListMyActivity } from \"@src/views/my-info/store/my_activities\"\nimport InsertInvitationOutlinedIcon from \"@mui/icons-material/InsertInvitationOutlined\"\n\nconst params = {\n  // navigation: true\n  pagination: {\n    clickable: true\n  },\n  autoplay: {\n    delay: 10000,\n    disableOnInteraction: false\n  }\n}\n\nconst WidgetTrainingNeedApproval = () => {\n  const { t } = useTranslation()\n  // const store = useSelector((state) => state[storeName])\n  const store = useSelector((state) => state.dynamicStore)\n  const dynamicTempState = useSelector((state) => state.dynamic_temp_state)\n  const dispatch = useDispatch()\n\n  const { colors } = useContext(ThemeColors)\n  const [loading, setLoading] = useState(false)\n  const [loadingPostPut, setLoadingPostPut] = useState(false)\n  const [loadingDelete, setLoadingDelete] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n\n  const storeName = \"TrainingEmployee_needApproval\"\n  const endpointName = \"TrainingEmployee/assignment\"\n\n  useEffect(() => {\n    if (\n      !store.pageData[storeName] ||\n      (store.pageData[storeName]?.data?.length === 0 &&\n        !store.pageData[storeName]?.isLoading)\n    ) {\n      dispatch(\n        getDataList({\n          storeName: storeName,\n          endpointName: endpointName,\n          baseUrl: \"hr\",\n          type: \"to_me\",\n          Id_AttendingState: 3\n        })\n      )\n    }\n  }, [])\n\n  const errorToast = (res) => {\n    let errorFieldsMsg = \"\"\n    if (res?.payload?.error?.errors) {\n      const errorFields = res?.payload?.error?.errors\n      for (let errorx in res?.payload?.error?.errors) {\n        errorFieldsMsg = `${errorFieldsMsg} - ${errorFields[errorx]}\\n`\n        // console.log(errorx, errorFields[errorx])\n      }\n    }\n    return toast.error(\n      `${res.payload?.error?.message} \\n \\n ${errorFieldsMsg}`,\n      {\n        style: {\n          padding: \"16px\",\n          color: colors.danger.main,\n          border: `1px solid ${colors.danger.main}`\n        },\n        iconTheme: {\n          primary: colors.danger.main\n        }\n      }\n    )\n  }\n\n  const putDataToApi = (data) => {\n    setLoadingPostPut(true)\n    setLoadingText(\"Confirming Training Request\")\n    data[\"storeName\"] = storeName\n    data[\"endpointName\"] = endpointName\n    data[\"baseUrl\"] = \"hr\"\n    data[\"callback_page\"] = window.location.href\n    dispatch(putDataWidget(data))\n      .then((res) => {\n        // console.log(res)\n\n        if (res.meta.requestStatus === \"fulfilled\") {\n          dispatch(\n            getDataList({\n              storeName: storeName,\n              endpointName: endpointName,\n              baseUrl: \"hr\",\n              type: \"to_me\",\n              Id_AttendingState: 3\n            })\n          )\n            .then((xxx) => {\n              toast.success(\n                `${t(\"Successfully Confirming Training Request\")}}`,\n                {\n                  style: {\n                    padding: \"16px\",\n                    color: colors.success.main,\n                    border: `1px solid ${colors.success.main}`\n                  },\n                  iconTheme: {\n                    primary: colors.success.main\n                  }\n                }\n              )\n            })\n            .then((x) => {\n              setLoadingPostPut(false)\n            })\n            .then((xx) => {\n              dispatch(\n                getDataList({\n                  storeName: \"TrainingEmployee_task\",\n                  endpointName: \"TrainingEmployee/assignment\",\n                  baseUrl: \"hr\",\n                  type: \"to_me\",\n                  Id_AttendingState: 1\n                })\n              )\n              setTimeout(() => {\n                dispatch(getDataListMyActivity({}))\n              }, 8000)\n            })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          errorToast(res)\n        }\n      })\n      .catch((error) => {\n        // console.error(error)\n        setLoadingPostPut(false)\n        errorToast(error)\n      })\n  }\n\n  const calendarStrings = {\n    lastDay: \"[Yesterday]\",\n    sameDay: \"[Today]\",\n    nextDay: \"[Tomorrow]\",\n    lastWeek: \"[last] dddd\",\n    nextWeek: \"dddd\",\n    sameElse: \"L\"\n  }\n\n  const toUpperCaseFilter = (d) => {\n    return d.toUpperCase()\n  }\n\n  {\n    return store.pageData[storeName]?.isLoading ? (\n      <Col lg=\"12\" xs=\"12\">\n        <Card style={{ minHeight: \"200px\" }}>\n          <CardHeader>\n            <div className=\"d-flex align-items-center\">\n              <InsertInvitationOutlinedIcon className=\"user-timeline-title-icon me-1\" />\n              <CardTitle tag=\"h4\">{t(\"Need Approval\")}</CardTitle>\n            </div>\n          </CardHeader>\n          <UILoader blocking={true} loader={<Loader />}>\n            <CardBody></CardBody>\n          </UILoader>\n        </Card>\n      </Col>\n    ) : store.pageData[storeName]?.data?.length > 0 ? (\n      <Col lg=\"12\" xs=\"12\">\n        <Card>\n          <CardHeader>\n            <div className=\"d-flex align-items-center\">\n              <InsertInvitationOutlinedIcon className=\"user-timeline-title-icon me-1\" />\n              <CardTitle tag=\"h4\">{t(\"Training Need Approval\")}</CardTitle>\n              {store.pageData[storeName]?.data?.length > 1 && (\n                <Badge className=\"ms-1\" tag=\"div\" color=\"danger\" pill>\n                  {store.pageData[storeName]?.data?.length}\n                </Badge>\n              )}\n            </div>\n          </CardHeader>\n\n          <CardBody className=\"px-0 pb-0\">\n            <Swiper {...params}>\n              {store.pageData[storeName]?.data.map((row) => {\n                return (\n                  <SwiperSlide key={`swiper_${row.id}`}>\n                    <Card className=\"card-developer-meetup  cursor-pointer\">\n                      <div className=\"meetup-img-wrapper rounded-top text-center\">\n                        <img\n                          src={\n                            row?.TrainingData?.Image\n                              ? row.TrainingData.Image\n                              : illustration\n                          }\n                          height=\"170\"\n                        />\n                      </div>\n                      <CardBody>\n                        <div className=\"meetup-header d-flex align-items-center\">\n                          <div className=\"meetup-day\">\n                            <h6 className=\"mb-0\">\n                              <Moment filter={toUpperCaseFilter} format=\"ddd\">\n                                {row?.TrainingData?.StartDate}\n                              </Moment>\n                            </h6>\n                            <h3 className=\"mb-0\">\n                              <Moment format=\"DD\">\n                                {row?.TrainingData?.StartDate}\n                              </Moment>\n                            </h3>\n                          </div>\n                          <div className=\"my-auto text-truncate\">\n                            <CardTitle tag=\"h4\" className=\"mb-25\">\n                              {row?.TrainingData?.Name}\n                            </CardTitle>\n                            <CardText className=\"mb-0\">\n                              {row?.TrainingData?.Description}\n                            </CardText>\n                          </div>\n                        </div>\n                        <div className=\"d-flex\">\n                          <Avatar\n                            color=\"light-primary\"\n                            className=\"rounded me-1\"\n                            icon={<Calendar size={18} />}\n                          />\n                          <div>\n                            {/* <h6 className=\"mb-0\">Sat, May 25, 2020</h6>\n                    <small>10:AM to 6:PM</small> */}\n                            <h6 className=\"mb-0\">\n                              {\n                                <Moment calendar={calendarStrings}>\n                                  {row?.TrainingData?.StartDate}\n                                </Moment>\n                              }\n                            </h6>\n                            <small>\n                              {\n                                <Moment format=\"[Start at] LT\">\n                                  {row?.TrainingData?.StartDate}\n                                </Moment>\n                              }\n                            </small>\n                          </div>\n                        </div>\n                        {!row?.TrainingData?.IsOnline ? (\n                          <div className=\"d-flex mt-2\">\n                            <Avatar\n                              color=\"light-primary\"\n                              className=\"rounded me-1\"\n                              icon={<MapPin size={18} />}\n                            />\n                            <div>\n                              {/* <h6 className=\"mb-0\">Central Park</h6> */}\n                              <small>{row?.TrainingData?.Address}</small>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"d-flex mt-2\">\n                            <Avatar\n                              color=\"light-primary\"\n                              className=\"rounded me-1\"\n                              icon={<Video size={18} />}\n                            />\n                            <div>\n                              <h6 className=\"mb-0\">{t(\"Online Training\")}</h6>\n                              <small>\n                                {row?.TrainingData?.LinkRef\n                                  ? row?.TrainingData?.LinkRef\n                                  : \"The link will be sent before the event starts\"}\n                              </small>\n                            </div>\n                          </div>\n                        )}\n                      </CardBody>\n\n                      {row?.Employee.map((item) => {\n                        return (\n                          <CardFooter>\n                            <div className=\"d-flex align-items-center justify-content-between\">\n                              <div className=\"d-flex\">\n                                <Avatar\n                                  imgClassName=\"rounded\"\n                                  className=\"me-75\"\n                                  img={\n                                    `${item?.PhotoPath}` ??\n                                    require(\"@src/assets/images/portrait/small/avatar-s-7.jpg\")\n                                      .default\n                                  }\n                                  imgHeight=\"42\"\n                                  imgWidth=\"42\"\n                                />\n                                <div className=\"my-auto\">\n                                  <h6 className=\"mb-0\">{`${item?.FirstName} ${item?.LastName}`}</h6>\n                                  {/* <small>{task.subtitle}</small> */}\n                                </div>\n                              </div>\n                              <div className=\"d-flex\">\n                                {!loadingPostPut &&\n                                  (!loadingDelete ? (\n                                    <Button.Ripple color=\"flat-secondary me-1\">\n                                      {t(\"Decline\")}\n                                    </Button.Ripple>\n                                  ) : (\n                                    <Button.Ripple color=\"flat-secondary me-1\">\n                                      <Spinner\n                                        color=\"white\"\n                                        size=\"sm\"\n                                        type=\"grow\"\n                                      />\n                                      <span className=\"ms-50\">\n                                        {loadingText}\n                                      </span>\n                                    </Button.Ripple>\n                                  ))}\n\n                                {!loadingPostPut ? (\n                                  <Button.Ripple\n                                    onClick={(e) => {\n                                      e.preventDefault()\n                                      putDataToApi({\n                                        id: row?.Id_Training,\n                                        Id_Employee: item.id\n                                      })\n                                    }}\n                                    color=\"gradient-primary\"\n                                  >\n                                    {t(\"Confirm\")}\n                                  </Button.Ripple>\n                                ) : (\n                                  <Button.Ripple color=\"gradient-primary\">\n                                    <Spinner\n                                      color=\"white\"\n                                      size=\"sm\"\n                                      type=\"grow\"\n                                    />\n                                    <span className=\"ms-50\">{loadingText}</span>\n                                  </Button.Ripple>\n                                )}\n                              </div>\n                            </div>\n                          </CardFooter>\n                        )\n                      })}\n                    </Card>\n                  </SwiperSlide>\n                )\n              })}\n            </Swiper>\n          </CardBody>\n        </Card>\n      </Col>\n    ) : null\n  }\n}\n\nexport default WidgetTrainingNeedApproval\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Spinner } from \"reactstrap\"\n\n// ** Styles\nimport \"./ui-loader.scss\"\n\nconst UILoader = (props) => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag\n      className={classnames(\"ui-loader\", {\n        [className]: className,\n        show: blocking\n      })}\n    >\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className=\"overlay\" /*eslint-disable */\n            {...(blocking && overlayColor\n              ? { style: { backgroundColor: overlayColor } }\n              : {})}\n            /*eslint-enable */\n          ></div>\n          <div className=\"loader\">{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: \"div\",\n  blocking: false,\n  loader: <Spinner color=\"primary\" />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { UncontrolledTooltip } from \"reactstrap\"\n\n// ** Custom Components Imports\nimport Avatar from \"@components/avatar\"\nimport { Link } from \"react-router-dom\"\n\nconst AvatarGroup = (props) => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Conditional Tag\n  const Tag = tag ? tag : \"div\"\n\n  // ** Render Data\n  const renderData = () => {\n    return data.map((item, i) => {\n      let id = item?.id\n        ? `avatar_${i}_${item.id}`\n        : item.title.split(\" \").join(\"-\")\n      const linkUrl = item?.linkUrl\n      delete item?.linkUrl\n      const ItemTag = item.tag ? item.tag : \"div\"\n      const Element = (\n        <Fragment key={i}>\n          {/* {id ? (\n            <UncontrolledTooltip placement={item.placement} target={id}>\n              {item.title}\n            </UncontrolledTooltip>\n          ) : null} */}\n          {!item.meta ? (\n            item?.img ? (\n              <Avatar\n                tag={ItemTag}\n                className={classnames(\"pull-up\", {\n                  [item.className]: item.className\n                })}\n                {...(id ? { id: id } : {})}\n                {...item}\n                title={undefined}\n                meta={undefined}\n              />\n            ) : (\n              <Avatar\n                tag={ItemTag}\n                initials\n                className={classnames(\"pull-up\", {\n                  [item.className]: item.className\n                })}\n                {...(id ? { id: id } : {})}\n                color=\"light-primary\"\n                content={`${item.title}`}\n              />\n            )\n          ) : null}\n          {item.meta ? (\n            <ItemTag className=\"d-flex align-items-center ps-1\">\n              {item.meta}\n            </ItemTag>\n          ) : null}\n        </Fragment>\n      )\n      if (linkUrl) {\n        return (\n          <Link key={`avatar_${i}`} to={linkUrl}>\n            {Element}\n          </Link>\n        )\n      } else {\n        return Element\n      }\n    })\n  }\n\n  return (\n    <Tag\n      className={classnames(\"avatar-group\", {\n        [className]: className\n      })}\n    >\n      {renderData()}\n    </Tag>\n  )\n}\n\nexport default AvatarGroup\n\n// ** PropTypes\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n}\n","export default __webpack_public_path__ + \"static/media/email.6f4a4684.svg\";","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V9h14v10zm0-12H5V5h14v2zm-2 5h-5v5h5v-5z\"\n}), 'InsertInvitationOutlined');\nexports.default = _default;","export default __webpack_public_path__ + \"static/media/avatar-s-7.ba3f6823.jpg\";"],"sourceRoot":""}