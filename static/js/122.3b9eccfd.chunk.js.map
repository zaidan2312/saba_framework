{"version":3,"sources":["views/apps/menu/modal/index.js","views/apps/menu/icons/feather.js","views/apps/menu/icons/material.js","views/apps/menu/Table.js","../../src/mounts.js","../../src/index.js","@core/components/breadcrumbs/index.js"],"names":["CustomLabel","_ref","htmlFor","_jsxs","Label","className","children","_jsx","Check","size","X","ModalAddEdit","_ref2","_store$selectedData$t","_store$selectedData","_store$dataDropdown$f","_store$selectedData$r","_store$selectedData4","_store$selectedData$d","_store$selectedData5","show","setShow","detailPage","formState","setFormState","_ref2$currentData","currentData","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","_useState","useState","_useState2","_slicedToArray","setLoadingText","_useForm","useForm","control","setError","handleSubmit","setValue","errors","_useState3","is_separator","_useState4","isSeparator","setIsSeparator","_useState5","_useState6","iconCategory","setIconCategory","_useState7","icon","_useState8","setIcon","_useState9","_useState10","canvasPlacement","setCanvasPlacement","_useState11","_useState12","canvasOpen","setCanvasOpen","toggleCanvasStart","handleReset","resetSelectedData","Modal","isOpen","toggle","UILoader","blocking","isLoadingAddEdit","isLoadingDetail","loader","Loader","ModalHeader","ModalBody","pageTitle","title","Form","onSubmit","data","parent_id","value","id_app","storeData","_objectSpread","sortedObject","selectedData","key","JSON","stringify","countChanges","Object","values","every","field","concat","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","_data$key","length","type","is_app_header","postData","_data$key2","Row","Col","md","xs","for","Controller","defaultValue","name","render","_ref3","Input","invalid","Button","Ripple","outline","onClick","renderIcon","marginTop","defaultChecked","onChange","target","checked","changeSeparator","dataDropdown","filter","el","_ref4","_store$selectedData3","Select","theme","selectThemeColors","isDisabled","options","_store$selectedData2","map","item","label","classnames","classNamePrefix","routePath","_ref5","description","_ref6","TextareaAutosize","Offcanvas","direction","OffcanvasHeader","event","OffcanvasBody","IconsFeather","IconsMaterial","FeatherIcons","IconsArr","query","setQuery","filteredArr","setFilteredArr","active","setActive","Icons","push","Fragment","sm","InputGroup","InputGroupText","placeholder","e","val","arr","toLowerCase","includes","handleFilter","justifyContent","dataToRender","IconTag","CopyToClipboard","text","Card","customName","handleIconCardClick","CardBody","UncontrolledTooltip","placement","replace","trim","renderIcons","IconsComponentsArr","filteredComponentsArr","setFilteredComponentsArr","split","join","substring","useEffect","console","log","material","_loop","setIconsComponents","arrComponents","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","searchTerm","selectedRow","handleDeleteSelected","ability","AbilityContext","userData","invoices","getUserData","xl","width","can","sessionStorage","getItem","UncontrolledDropdown","DropdownToggle","caret","Share","DropdownMenu","DropdownItem","getInvoice","rpt_name","output_type","dataYear","print","as_attachment","par_UNITKEY","par_SAMPLE","Printer","File","Grid","FileText","List","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","selectedRows","setSelectedRows","_useState13","_useState14","toggleCleared","setToggleCleared","_useState15","_useState16","sidebarOpen","setSidebarOpen","_useState17","_useState18","loading","setLoading","_useState19","_useState20","_useState21","_useState22","showModal","setShowModal","_useState23","_useState24","handleCloseModal","revivalBack","neutralizeBack","handleDelete","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fire","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","sent","deleteData","stop","_x","apply","arguments","_callee2","countSelectedCopy","_context2","a","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","columns","center","sortable","sortField","selector","row","cell","_Fragment","preventDefault","Trash2","rowData","detailFromGrid","setDataById","Edit2","tableColumns","useMemo","isLoading","column","Skeleton","sx","bgcolor","dark","light","animation","height","getAlwaysGrid","DataTable","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","Number","Math","ceil","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","NoDataDisplay","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","ChevronDown","filters","isFiltered","keys","some","k","Array","fill","subHeaderComponent","parseInt","currentTarget","mounts","getter","swal","getTitle","getHtmlContainer","getConfirmButton","getDenyButton","getCancelButton","getFooter","getCloseButton","getIcon","querySelector","getLoader","noop","ParentSwal","extractReactParams","params","reactParams","otherParams","mountKeys","mount","entries","forEach","React__default","isValidElement","domElement","find","ReactDOM__default","__mountedDomElements","unrender","unmountComponentAtNode","_ParentSwal","_inherits","_class","_super","_createSuper","_classCallCheck","_createClass","mixinParams","_this","this","__params","assign","_extractReactParams","_extractReactParams2","superDidOpen","didOpen","superDidDestroy","didDestroy","_get","_getPrototypeOf","prototype","call","popup","_extractReactParams3","_extractReactParams4","args","index","undefined","argsToParams","BreadCrumbs","mb","subtitle","Breadcrumb","BreadcrumbItem","tag","Link","to","Wrapper","link","isLastItem"],"mappings":"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","file":"static/js/122.3b9eccfd.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport { Check, X } from \"react-feather\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Offcanvas,\r\n  OffcanvasHeader,\r\n  OffcanvasBody\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport classnames from \"classnames\"\r\nimport { TextareaAutosize } from \"@mui/material\"\r\nimport { renderIcon } from \"../store/my_menu\"\r\nimport IconsFeather from \"../icons/feather\"\r\nimport IconsMaterial from \"../icons/material\"\r\n\r\nconst CustomLabel = ({ htmlFor }) => {\r\n  return (\r\n    <Label className=\"form-check-label\" htmlFor={htmlFor}>\r\n      <span className=\"switch-icon-left\">\r\n        <Check size={14} />\r\n      </span>\r\n      <span className=\"switch-icon-right\">\r\n        <X size={14} />\r\n      </span>\r\n    </Label>\r\n  )\r\n}\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const {\r\n    control,\r\n    setError,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const [isSeparator, setIsSeparator] = useState(currentData.is_separator)\r\n  const [iconCategory, setIconCategory] = useState(\"feather\")\r\n  const [icon, setIcon] = useState(currentData?.icon)\r\n\r\n  const [canvasPlacement, setCanvasPlacement] = useState(\"start\")\r\n  const [canvasOpen, setCanvasOpen] = useState(false)\r\n  const toggleCanvasStart = () => {\r\n    setIconCategory(\"feather\")\r\n    setCanvasPlacement(\"start\")\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasBottom = () => {\r\n    setIconCategory(\"feather\")\r\n    setCanvasPlacement(\"bottom\")\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(store.selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    data[\"is_separator\"] = isSeparator\r\n    data[\"icon\"] = icon\r\n    // console.log(data)\r\n    if (data.parent_id) {\r\n      if (data.parent_id.value >= 9000) {\r\n        data[\"id_app\"] = data.parent_id.id_app\r\n        data[\"parent_id\"] = null\r\n      } else {\r\n        data[\"parent_id\"] = data.parent_id.value\r\n      }\r\n    }\r\n    // console.log(data)\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        }) ||\r\n        data[\"parent_id\"] === null\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      if (!currentData.is_app_header) {\r\n        data[\"parent_id\"] = currentData.id\r\n      }\r\n      data[\"id_app\"] = currentData.id_app\r\n      data[\"is_separator\"] = isSeparator\r\n      data[\"icon\"] = icon\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const changeSeparator = (data) => {\r\n    // console.log(data.target.checked)\r\n    setIsSeparator(data.target.checked)\r\n    if (data.target.checked) {\r\n    }\r\n  }\r\n\r\n  // const changeParentId = (data) => {\r\n  //   console.log(data)\r\n\r\n  //   if (data.is_app_header) {\r\n  //     setValue(\"parent_id\", { value: null })\r\n  //   } else {\r\n  //     setValue(\"parent_id\", data)\r\n  //   }\r\n\r\n  //   // if (data?.routePath) {\r\n  //   //   setValue(\"parent_id\", data.id)\r\n  //   //   setValue(\"routePath\", `${data?.routePath}/`)\r\n  //   // }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(store.dataDropdown)\r\n  // }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\r\n            </h2>\r\n            {formState !== \"edit\" && (\r\n              <p className=\"mb-1\">\r\n                {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={9} xs={7}>\r\n                <Label className=\"form-label\" for=\"title\">\r\n                  {t(\"Title\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.title ?? \"\"}\r\n                  control={control}\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.title\r\n                          ? \"form-control is-invalid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"title\"\r\n                      invalid={errors.title && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              {!isSeparator && (\r\n                <Col md={1} xs={2}>\r\n                  <Label className=\"form-label\" for=\"icon\">\r\n                    {t(\"Icon\")}\r\n                    <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <div>\r\n                    <Button.Ripple\r\n                      className=\"btn-icon\"\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      onClick={toggleCanvasBottom}\r\n                    >\r\n                      {renderIcon(icon, \"\")}\r\n                    </Button.Ripple>\r\n                  </div>\r\n                  {/* <Controller\r\n                    defaultValue={store.selectedData?.icon ?? \"\"}\r\n                    control={control}\r\n                    id=\"icon\"\r\n                    name=\"icon\"\r\n                    render={({ field }) => (\r\n                      <Input\r\n                        {...field}\r\n                        className={\r\n                          errors.icon\r\n                            ? \"form-control is-invalid\"\r\n                            : \"form-control\"\r\n                        }\r\n                        id=\"icon\"\r\n                        invalid={errors.icon && true}\r\n                      />\r\n                    )}\r\n                  /> */}\r\n                </Col>\r\n              )}\r\n\r\n              <Col md={2} xs={3}>\r\n                <Label className=\"form-label\" for=\"is_separator\">\r\n                  {t(\"Separator\")}\r\n                </Label>\r\n                <div\r\n                  style={{ marginTop: \"5px\" }}\r\n                  className=\"form-switch form-check-primary\"\r\n                >\r\n                  <Input\r\n                    type=\"switch\"\r\n                    defaultChecked={isSeparator}\r\n                    onChange={(data) => {\r\n                      changeSeparator(data)\r\n                    }}\r\n                    id=\"icon-primary\"\r\n                    name=\"icon-primary\"\r\n                  />\r\n                  <CustomLabel htmlFor=\"icon-primary\" />\r\n                </div>\r\n              </Col>\r\n\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"parent_id\">\r\n                  {t(\"Parent Menu\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={\r\n                    store.dataDropdown.filter(\r\n                      (el) =>\r\n                        el.value ===\r\n                        (formState === \"edit\"\r\n                          ? currentData?.parent_id\r\n                          : currentData?.id)\r\n                    ) ?? \"\"\r\n                  }\r\n                  control={control}\r\n                  id=\"parent_id\"\r\n                  name=\"parent_id\"\r\n                  render={({ field }) => (\r\n                    <Select\r\n                      {...field}\r\n                      id=\"parent_id\"\r\n                      theme={selectThemeColors}\r\n                      defaultValue={store.dataDropdown.filter(\r\n                        (el) =>\r\n                          el.value ===\r\n                          (formState === \"edit\"\r\n                            ? currentData?.parent_id\r\n                            : currentData?.id)\r\n                      )}\r\n                      // onChange={(data) => {\r\n                      //   changeParentId(data)\r\n                      // }}\r\n                      isDisabled={formState === \"add\"}\r\n                      options={store.dataDropdown\r\n                        .filter((el) => el.value !== store.selectedData?.id)\r\n                        .map((item) => ({\r\n                          ...item,\r\n                          // id_app: item.id_app,\r\n                          label: t(item.title)\r\n                        }))}\r\n                      className={classnames(\"react-select\", {\r\n                        \"is-invalid\": store.selectedData?.parent_id === null\r\n                      })}\r\n                      classNamePrefix=\"select\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              {!isSeparator && (\r\n                <Col md={6} xs={12}>\r\n                  <Label className=\"form-label\" for=\"subject\">\r\n                    {t(\"Route Path\")}\r\n                    <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Controller\r\n                    defaultValue={store.selectedData?.routePath ?? \"\"}\r\n                    control={control}\r\n                    id=\"routePath\"\r\n                    name=\"routePath\"\r\n                    render={({ field }) => (\r\n                      <Input\r\n                        {...field}\r\n                        className={\r\n                          errors.routePath\r\n                            ? \"form-control is-invalid\"\r\n                            : \"form-control\"\r\n                        }\r\n                        id=\"routePath\"\r\n                        invalid={errors.routePath && true}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Col>\r\n              )}\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Description\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.description ?? \"\"}\r\n                  control={control}\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  render={({ field }) => (\r\n                    <TextareaAutosize\r\n                      {...field}\r\n                      className=\"form-control\"\r\n                      id=\"description\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n\r\n      <Offcanvas\r\n        direction={canvasPlacement}\r\n        isOpen={canvasOpen}\r\n        toggle={toggleCanvasStart}\r\n      >\r\n        <OffcanvasHeader className=\"mb-1 mt-1 me-1\" toggle={toggleCanvasStart}>\r\n          {t(\"Select\")} {t(\"Icon\")}\r\n          <Button.Ripple\r\n            className=\"ms-2 me-2\"\r\n            color=\"primary\"\r\n            outline={iconCategory !== \"feather\"}\r\n            onClick={(event) => {\r\n              setIconCategory(\"feather\")\r\n            }}\r\n          >\r\n            Feather Icon\r\n          </Button.Ripple>\r\n          <Button.Ripple\r\n            color=\"primary\"\r\n            outline={iconCategory !== \"material\"}\r\n            onClick={(event) => {\r\n              setIconCategory(\"material\")\r\n            }}\r\n          >\r\n            Material Icon\r\n          </Button.Ripple>\r\n        </OffcanvasHeader>\r\n        <OffcanvasBody\r\n          className={classnames({\r\n            \"my-auto mx-0 flex-grow-0\":\r\n              canvasPlacement === \"start\" || canvasPlacement === \"end\"\r\n          })}\r\n        >\r\n          {iconCategory === \"feather\" ? (\r\n            <IconsFeather setIcon={setIcon} setCanvasOpen={setCanvasOpen} />\r\n          ) : (\r\n            // <IconsFeather setIcon={setIcon} setCanvasOpen={setCanvasOpen} />\r\n            <IconsMaterial setIcon={setIcon} setCanvasOpen={setCanvasOpen} />\r\n          )}\r\n          {/* <Button\r\n            color=\"primary\"\r\n            onClick={toggleCanvasStart}\r\n            className={classnames({\r\n              \"mb-1\": canvasPlacement === \"start\" || canvasPlacement === \"end\",\r\n              \"me-1\": canvasPlacement === \"top\" || canvasPlacement === \"bottom\"\r\n            })}\r\n            {...(canvasPlacement === \"start\" || canvasPlacement === \"end\"\r\n              ? { block: true }\r\n              : {})}\r\n          >\r\n            Continue\r\n          </Button>\r\n          <Button\r\n            outline\r\n            color=\"secondary\"\r\n            onClick={toggleCanvasStart}\r\n            {...(canvasPlacement === \"start\" || canvasPlacement === \"end\"\r\n              ? { block: true }\r\n              : {})}\r\n          >\r\n            Cancel\r\n          </Button> */}\r\n        </OffcanvasBody>\r\n      </Offcanvas>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","// ** React Imports\r\nimport { Fragment, useState } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport classnames from \"classnames\"\r\nimport toast from \"react-hot-toast\"\r\nimport * as Icons from \"react-feather\"\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\r\nimport { useTranslation } from \"react-i18next\"\r\n// ** Custom Components\r\nimport Avatar from \"@components/avatar\"\r\nimport Breadcrumbs from \"@components/breadcrumbs\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  CardBody,\r\n  InputGroup,\r\n  InputGroupText,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"@styles/base/pages/ui-feather.scss\"\r\n\r\nconst FeatherIcons = ({ setIcon, setCanvasOpen }) => {\r\n  const IconsArr = []\r\n\r\n  // ** States\r\n  const [query, setQuery] = useState([]),\r\n    [filteredArr, setFilteredArr] = useState([]),\r\n    [active, setActive] = useState(null)\r\n\r\n  for (const key in Icons) {\r\n    IconsArr.push(key)\r\n  }\r\n  const { t } = useTranslation()\r\n  const handleFilter = (val) => {\r\n    const arr = []\r\n    if (val.length) {\r\n      IconsArr.filter((icon) => {\r\n        if (icon.toLowerCase().includes(val.toLowerCase())) {\r\n          arr.push(icon)\r\n        }\r\n      })\r\n    }\r\n    setFilteredArr([...arr])\r\n  }\r\n\r\n  const handleIconCardClick = (icon) => {\r\n    const customName = `feather:${icon}`\r\n    setIcon(customName)\r\n    setActive(icon)\r\n    // toast(() => (\r\n    //   <div className=\"d-flex\">\r\n    //     <div className=\"me-1\">\r\n    //       <Avatar size=\"sm\" color=\"success\" icon={<Icons.Check size={12} />} />\r\n    //     </div>\r\n    //     <div className=\"d-flex flex-column\">\r\n    //       <h6 className=\"toast-title\">Icon Name Copied! 📋</h6>\r\n    //       <span role=\"img\" aria-label=\"toast-text\">\r\n    //         {icon}\r\n    //       </span>\r\n    //     </div>\r\n    //   </div>\r\n    // ))\r\n    setCanvasOpen(false)\r\n  }\r\n\r\n  const renderIcons = () => {\r\n    const dataToRender = query.length ? filteredArr : IconsArr\r\n    if (dataToRender.length) {\r\n      return dataToRender.map((icon) => {\r\n        const IconTag = Icons[icon]\r\n        return (\r\n          <Fragment key={icon}>\r\n            <CopyToClipboard text={`<${icon} />`}>\r\n              <Card\r\n                id={icon}\r\n                className={classnames(\r\n                  \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n                  {\r\n                    active: active === icon\r\n                  }\r\n                )}\r\n                onClick={() => handleIconCardClick(icon)}\r\n              >\r\n                <CardBody>\r\n                  <div className=\"icon-wrapper\">\r\n                    <IconTag />\r\n                  </div>\r\n                  <p className=\"icon-name text-truncate mb-0 mt-1\">{icon}</p>\r\n                </CardBody>\r\n              </Card>\r\n            </CopyToClipboard>\r\n            <UncontrolledTooltip placement=\"top\" target={icon}>\r\n              {icon.replace(/([A-Z])/g, \" $1\").trim()}\r\n            </UncontrolledTooltip>\r\n          </Fragment>\r\n        )\r\n      })\r\n    } else {\r\n      return (\r\n        <div className=\"d-flex align-items-center justify-content-center w-100\">\r\n          <h4 className=\"mb-0\">{t(\"No Icons Found!\")}</h4>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <div className=\"icon-search-wrapper mt-0 mb-2 mx-auto\">\r\n            <InputGroup className=\"input-group-merge mb-1\">\r\n              <InputGroupText>\r\n                <Icons.Search size={14} />\r\n              </InputGroupText>\r\n              <Input\r\n                placeholder={t(\"Search icons...\")}\r\n                onChange={(e) => {\r\n                  handleFilter(e.target.value)\r\n                  setQuery(e.target.value)\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div\r\n        className=\"d-flex flex-wrap\"\r\n        style={{\r\n          justifyContent: \"center\"\r\n        }}\r\n        id=\"icons-container\"\r\n      >\r\n        {renderIcons()}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default FeatherIcons\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport classnames from \"classnames\"\r\n// import * as Icons from \"react-feather\"\r\nimport * as Icons from \"@mui/icons-material\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  CardBody,\r\n  InputGroup,\r\n  InputGroupText,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"@styles/base/pages/ui-feather.scss\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setIconsComponents } from \"../../../../redux/icons\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nconst FeatherIcons = ({ setIcon, setCanvasOpen }) => {\r\n  const IconsArr = []\r\n  const IconsComponentsArr = []\r\n  // ** States\r\n  const [query, setQuery] = useState([]),\r\n    [filteredArr, setFilteredArr] = useState([]),\r\n    [filteredComponentsArr, setFilteredComponentsArr] = useState([]),\r\n    [active, setActive] = useState(null)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const { t } = useTranslation()\r\n\r\n  const handleFilter = (val) => {\r\n    const arr = []\r\n    const arrComponents = []\r\n    if (val.length) {\r\n      IconsArr.filter((icon) => {\r\n        if (icon.toLowerCase().includes(val.toLowerCase())) {\r\n          arr.push(icon)\r\n\r\n          const IconTag = Icons[icon]\r\n          arrComponents.push(\r\n            <Fragment key={icon}>\r\n              <Card\r\n                id={icon}\r\n                className={classnames(\r\n                  \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n                  {\r\n                    active: active === icon\r\n                  }\r\n                )}\r\n                onClick={() => handleIconCardClick(icon)}\r\n              >\r\n                <CardBody>\r\n                  <div className=\"icon-wrapper\">\r\n                    <IconTag />\r\n                  </div>\r\n                  <p className=\"icon-name text-truncate mb-0 mt-1\">{icon}</p>\r\n                </CardBody>\r\n              </Card>\r\n              <UncontrolledTooltip placement=\"top\" target={icon}>\r\n                {icon.replace(/([A-Z])/g, \" $1\").trim()}\r\n              </UncontrolledTooltip>\r\n            </Fragment>\r\n          )\r\n        }\r\n      })\r\n    }\r\n    setFilteredArr([...arr])\r\n    setFilteredComponentsArr([...arrComponents])\r\n  }\r\n\r\n  function camelToUnderscore(key) {\r\n    let result = key.replace(/([A-Z])/g, \" $1\")\r\n    return result.split(\" \").join(\"_\").toLowerCase()\r\n  }\r\n\r\n  const handleIconCardClick = (icon) => {\r\n    // console.log(icon)\r\n    const customName = `material:${camelToUnderscore(icon).substring(1)}`\r\n    setIcon(customName)\r\n    setActive(icon)\r\n    setCanvasOpen(false)\r\n  }\r\n\r\n  const renderIcons = () => {\r\n    // console.log(IconsArr)\r\n    const dataToRender = query.length ? filteredArr : IconsArr\r\n    const componentsToRender = query.length\r\n      ? filteredComponentsArr\r\n      : IconsComponentsArr\r\n    if (dataToRender.length) {\r\n      // return dataToRender.map((icon) => {\r\n      //   const IconTag = Icons[icon]\r\n      //   return (\r\n      //     <Fragment key={icon}>\r\n      //       <Card\r\n      //         id={icon}\r\n      //         className={classnames(\r\n      //           \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n      //           {\r\n      //             active: active === icon\r\n      //           }\r\n      //         )}\r\n      //         onClick={() => handleIconCardClick(icon)}\r\n      //       >\r\n      //         <CardBody>\r\n      //           <div className=\"icon-wrapper\">\r\n      //             <IconTag />\r\n      //           </div>\r\n      //           <p className=\"icon-name text-truncate mb-0 mt-1\">{icon}</p>\r\n      //         </CardBody>\r\n      //       </Card>\r\n      //       <UncontrolledTooltip placement=\"top\" target={icon}>\r\n      //         {icon.replace(/([A-Z])/g, \" $1\").trim()}\r\n      //       </UncontrolledTooltip>\r\n      //     </Fragment>\r\n      //   )\r\n      // })\r\n      return componentsToRender\r\n    } else {\r\n      return (\r\n        <div className=\"d-flex align-items-center justify-content-center w-100\">\r\n          <h4 className=\"mb-0\">{t(\"No Icons Found!\")}</h4>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const store = useSelector((state) => state[\"icons_store\"])\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    console.log(store.data.material.length)\r\n    if (store.data.material.length === 0) {\r\n      // console.log(store.data.material)\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(\"Icons\")}`)\r\n\r\n      for (const key in Icons) {\r\n        if (key.includes(\"Outlined\")) {\r\n          IconsArr.push(key)\r\n\r\n          const IconTag = Icons[key]\r\n          IconsComponentsArr.push(\r\n            <Fragment key={key}>\r\n              <Card\r\n                id={key}\r\n                className={classnames(\r\n                  \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n                  {\r\n                    active: active === key\r\n                  }\r\n                )}\r\n                onClick={() => handleIconCardClick(key)}\r\n              >\r\n                <CardBody>\r\n                  <div className=\"icon-wrapper\">\r\n                    <IconTag />\r\n                  </div>\r\n                  <p className=\"icon-name text-truncate mb-0 mt-1\">{key}</p>\r\n                </CardBody>\r\n              </Card>\r\n              <UncontrolledTooltip placement=\"top\" target={key}>\r\n                {key.replace(/([A-Z])/g, \" $1\").trim()}\r\n              </UncontrolledTooltip>\r\n            </Fragment>\r\n          )\r\n        }\r\n      }\r\n      dispatch(setIconsComponents({ material: IconsComponentsArr }))\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <div className=\"icon-search-wrapper mt-0 mb-2 mx-auto\">\r\n            <InputGroup className=\"input-group-merge mb-1\">\r\n              <InputGroupText>\r\n                {/* <Icons.Search size={14} /> */}\r\n              </InputGroupText>\r\n              <Input\r\n                placeholder={t(\"Search icons...\")}\r\n                onChange={(e) => {\r\n                  handleFilter(e.target.value)\r\n                  setQuery(e.target.value)\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div\r\n        className=\"d-flex flex-wrap\"\r\n        style={{\r\n          justifyContent: \"center\"\r\n        }}\r\n        id=\"icons-container\"\r\n      >\r\n        {query.length ? filteredComponentsArr : store.data.material}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default FeatherIcons\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef\r\n} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData\r\n} from \"./store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy,\r\n  Slack,\r\n  User,\r\n  Settings,\r\n  Database,\r\n  Edit2,\r\n  MoreVertical,\r\n  Trash2,\r\n  Archive,\r\n  Eye,\r\n  CheckCircle,\r\n  CheckSquare,\r\n  Check,\r\n  Square\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Badge,\r\n  UncontrolledTooltip,\r\n  CardText\r\n} from \"reactstrap\"\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\r\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">{t(\"Export\")}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        print: true,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"xls\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  // onClick={() => downloadCSV(store.data)}\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"csv\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n\r\n                {/* <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem> */}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            {ability.can(\r\n              \"post\",\r\n              sessionStorage.getItem(\"current_page_perm\")\r\n            ) ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = () => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(null)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    // console.log(\"handlePagination\")\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    // console.log(\"handlePerPage\")\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    // console.log(\"handleFilter\")\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    // console.log(\"handleSort\")\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    // console.log(column.sortField, sortDirection)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n  /////PAGINATION SERVERSIDE\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n  }, [])\r\n\r\n  const columns = [\r\n    {\r\n      name: t(\"Title\"),\r\n      center: false,\r\n      sortable: true,\r\n      // minWidth: \"400px\",\r\n      sortField: \"title\",\r\n      selector: (row) => row.title,\r\n      cell: (row) => row.title\r\n    },\r\n    {\r\n      name: t(\"Description\"),\r\n      center: false,\r\n      sortable: true,\r\n      // minWidth: \"400px\",\r\n      sortField: \"description\",\r\n      selector: (row) => row.description,\r\n      cell: (row) => row.description\r\n    },\r\n    {\r\n      name: t(\"Route Path\"),\r\n      center: false,\r\n      sortable: true,\r\n      // minWidth: \"400px\",\r\n      sortField: \"routePath\",\r\n      selector: (row) => row.routePath,\r\n      cell: (row) => row.routePath\r\n    },\r\n    {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <div className=\"column-action text-center\">\r\n          {ability.can(\r\n            \"delete\",\r\n            sessionStorage.getItem(\"current_page_perm\")\r\n          ) ? (\r\n            <>\r\n              <Button.Ripple\r\n                id=\"btn-delete\"\r\n                className=\"btn-icon rounded-circle\"\r\n                color=\"flat-danger\"\r\n                onClick={(e) => {\r\n                  e.preventDefault()\r\n                  handleDelete(row.id)\r\n                }}\r\n              >\r\n                <Trash2 size={16} />\r\n              </Button.Ripple>\r\n              <UncontrolledTooltip placement=\"left\" target=\"btn-delete\">\r\n                {t(\"Delete\")}\r\n              </UncontrolledTooltip>\r\n            </>\r\n          ) : null}\r\n\r\n          {ability.can(\r\n            \"update\",\r\n            sessionStorage.getItem(\"current_page_perm\")\r\n          ) ? (\r\n            <>\r\n              <Button.Ripple\r\n                className=\"btn-icon rounded-circle\"\r\n                color=\"flat-info\"\r\n                id=\"btn-edit\"\r\n                onClick={(e) => {\r\n                  e.preventDefault()\r\n                  handleEdit(row)\r\n                }}\r\n              >\r\n                <Edit2 size={16} />\r\n              </Button.Ripple>\r\n              <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                {t(\"Edit\")}\r\n              </UncontrolledTooltip>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) => (\r\n              <Skeleton\r\n                sx={{ bgcolor: colors.dark.light }}\r\n                animation=\"wave\"\r\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\r\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\r\n                height={40}\r\n              />\r\n            )\r\n          }))\r\n        : columns.map((column) => ({\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage\r\n        })\r\n      )\r\n    }\r\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent (ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams (params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map(mount => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n  function render (swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find(mount => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      ReactDOM.render(value, domElement)\n      swal.__mountedDomElements.push(domElement)\n    })\n  }\n\n  function unrender (swal) {\n    swal.__mountedDomElements.forEach(domElement => {\n      ReactDOM.unmountComponentAtNode(domElement)\n    })\n    swal.__mountedDomElements = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params, mixinParams) {\n      this.__mountedDomElements = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams)\n            superDidOpen(popup)\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        }),\n      )\n    }\n\n    update (params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from \"react-feather\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from \"reactstrap\"\r\n\r\nconst BreadCrumbs = (props) => {\r\n  const { t } = useTranslation()\r\n  // ** Props\r\n  const { data, title, mb, subtitle } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag=\"li\"\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ \"text-primary\": !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\r\n            {item.title}\r\n          </Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`content-header-left col-md-9 col-8 ${\r\n        mb || mb === 0 ? `mb-${mb}` : \"mb-2\"\r\n      }`}\r\n    >\r\n      <div className=\"row breadcrumbs-top\">\r\n        <div className=\"col-12\">\r\n          {title ? (\r\n            <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem tag=\"li\">\r\n                <Link to=\"/\">{t(\"Home\")}</Link>\r\n              </BreadcrumbItem>\r\n              {renderBreadCrumbs()}\r\n            </Breadcrumb>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">{subtitle ?? \"\"}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n"],"sourceRoot":""}