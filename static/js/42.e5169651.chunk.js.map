{"version":3,"sources":["views/apps/roles-permissions/roles/columns.js","views/apps/roles-permissions/roles/Table.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js"],"names":["renderClient","row","avatar","length","className","img","width","height","initials","content","fullName","color","avatarColor","statusObj","pending","active","inactive","columns","name","sortable","minWidth","sortField","selector","cell","to","id","onClick","store","dispatch","getUser","email","role_name","roleObj","subscriber","class","icon","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","size","renderRole","currentPlan","billing","status","pill","BootstrapCheckbox","forwardRef","props","ref","type","CustomHeader","plan","handlePlanChange","handlePerPage","rowsPerPage","handleFilter","searchTerm","useTranslation","t","useContext","AbilityContext","xl","htmlFor","value","onChange","style","e","target","Table","useDispatch","useSelector","state","users","useState","setPlan","sort","setSort","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","sortColumn","setSortColumn","useEffect","getAllData","getData","role","q","page","perPage","data","noHeader","subHeader","pagination","responsive","selectableRows","paginationServer","onSort","column","sortDirection","filters","isFiltered","Object","keys","some","k","allData","slice","dataToRender","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRowsComponent","subHeaderComponent","val","parseInt","currentTarget","arrayLikeToArray","module","exports","arr","Array","isArray","__esModule","iter","Symbol","iterator","from","TypeError","strings","raw","freeze","defineProperties","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"mappings":"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","file":"static/js/42.e5169651.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from \"react-router-dom\"\n\n// ** Custom Components\nimport Avatar from \"@components/avatar\"\n\n// ** Store & Actions\nimport { store } from \"@store/store\"\nimport { getUser } from \"@src/views/apps/user/store\"\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, Eye } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { Badge } from \"reactstrap\"\n\n// ** Renders Client Columns\nconst renderClient = (row) => {\n  if (row.avatar.length) {\n    return <Avatar className=\"me-1\" img={row.avatar} width=\"32\" height=\"32\" />\n  } else {\n    return (\n      <Avatar\n        initials\n        className=\"me-1\"\n        content={row.fullName || \"John Doe\"}\n        color={row.avatarColor || \"light-primary\"}\n      />\n    )\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = (row) => {\n  const roleObj = {\n    subscriber: {\n      class: \"text-primary\",\n      icon: User\n    },\n    maintainer: {\n      class: \"text-success\",\n      icon: Database\n    },\n    editor: {\n      class: \"text-info\",\n      icon: Edit2\n    },\n    author: {\n      class: \"text-warning\",\n      icon: Settings\n    },\n    admin: {\n      class: \"text-danger\",\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role_name] ? roleObj[row.role_name].icon : Edit2\n\n  return (\n    <span className=\"text-truncate text-capitalize align-middle\">\n      <Icon\n        size={18}\n        className={`${\n          roleObj[row.role_name] ? roleObj[row.role_name].class : \"\"\n        } me-50`}\n      />\n      {row.role_name}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: \"light-warning\",\n  active: \"light-success\",\n  inactive: \"light-secondary\"\n}\n\nexport const columns = [\n  {\n    name: \"Name\",\n    sortable: true,\n    minWidth: \"297px\",\n    sortField: \"fullName\",\n    selector: (row) => row.fullName,\n    cell: (row) => (\n      <div className=\"d-flex justify-content-left align-items-center\">\n        {renderClient(row)}\n        <div className=\"d-flex flex-column\">\n          <Link\n            to={`/apps/user/view/${row.id}`}\n            className=\"user_name text-truncate text-body\"\n            onClick={() => store.dispatch(getUser(row.id))}\n          >\n            <span className=\"fw-bold\">{row.fullName}</span>\n          </Link>\n          <small className=\"text-truncate text-muted mb-0\">{row.email}</small>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: \"Role\",\n    sortable: true,\n    minWidth: \"172px\",\n    sortField: \"role\",\n    selector: (row) => row.role_name,\n    cell: (row) => renderRole(row)\n  },\n  {\n    name: \"Plan\",\n    sortable: true,\n    minWidth: \"138px\",\n    sortField: \"currentPlan\",\n    selector: (row) => row.currentPlan,\n    cell: (row) => <span className=\"text-capitalize\">{row.currentPlan}</span>\n  },\n  {\n    name: \"Billing\",\n    sortable: true,\n    minWidth: \"230px\",\n    sortField: \"billing\",\n    selector: (row) => row.billing,\n    sortField: \"billing\",\n    selector: (row) => row.billing,\n    cell: (row) => <span className=\"text-capitalize\">{row.billing}</span>\n  },\n  {\n    name: \"Status\",\n    sortable: true,\n    minWidth: \"138px\",\n    sortField: \"status\",\n    selector: (row) => row.status,\n    cell: (row) => (\n      <Badge className=\"text-capitalize\" color={statusObj[row.status]} pill>\n        {row.status}\n      </Badge>\n    )\n  },\n  {\n    name: \"Actions\",\n    minWidth: \"100px\",\n    cell: (row) => (\n      <Link to={`/apps/user/view/${row.id}`}>\n        <Eye className=\"font-medium-3 text-body\" />\n      </Link>\n    )\n  }\n]\n","// ** React Imports\nimport { useState, useEffect, forwardRef } from \"react\"\n\n// ** Table Columns\nimport { columns } from \"./columns\"\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getData } from \"@src/views/apps/user/store\"\n\n// ** Third Party Components\nimport ReactPaginate from \"react-paginate\"\nimport { ChevronDown } from \"react-feather\"\nimport DataTable from \"react-data-table-component\"\n\n// ** Reactstrap Imports\nimport { Card, Input, Row, Col } from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\n// ** Styles\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className=\"form-check\">\n    <Input type=\"checkbox\" ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({\n  plan,\n  handlePlanChange,\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  return (\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <label htmlFor=\"rows-per-page\">Show</label>\n            <Input\n              className=\"mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: \"5rem\" }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </Input>\n            <label htmlFor=\"rows-per-page\">Entries</label>\n          </div>\n        </Col>\n        <Col\n          xl=\"6\"\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pe-lg-1 p-0 mt-lg-0 mt-1\"\n        >\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              Search:\n            </label>\n            <Input\n              type=\"text\"\n              value={searchTerm}\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n          <Input\n            value={plan}\n            type=\"select\"\n            style={{ width: \"10rem\" }}\n            onChange={(e) => handlePlanChange(e.target.value)}\n          >\n            <option value=\"\">Select Role</option>\n            <option value=\"basic\">Basic</option>\n            <option value=\"company\">Company</option>\n            <option value=\"enterprise\">Enterprise</option>\n            <option value=\"team\">Team</option>\n          </Input>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst Table = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.users)\n\n  // ** States\n  const [plan, setPlan] = useState(\"\")\n  const [sort, setSort] = useState(\"desc\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sortColumn, setSortColumn] = useState(\"id\")\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getData({\n        sort,\n        role: \"\",\n        sortColumn,\n        status: \"\",\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    dispatch(\n      getData({\n        sort,\n        role: \"\",\n        status: \"\",\n        sortColumn,\n        q: searchTerm,\n        currentPlan: plan,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getData({\n        sort,\n        role: \"\",\n        sortColumn,\n        status: \"\",\n        q: searchTerm,\n        perPage: value,\n        currentPlan: plan,\n        page: currentPage\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        q: val,\n        sort,\n        role: \"\",\n        sortColumn,\n        status: \"\",\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  const handlePlanChange = (val) => {\n    setPlan(val)\n    dispatch(\n      getData({\n        sort,\n        role: val,\n        sortColumn,\n        status: \"\",\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        containerClassName={\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        sort,\n        role: \"\",\n        sortColumn,\n        status: \"\",\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  return (\n    <Card>\n      <div className=\"react-dataTable react-dataTable-selectable-rows\">\n        <DataTable\n          noHeader\n          subHeader\n          pagination\n          responsive\n          selectableRows\n          paginationServer\n          columns={columns}\n          onSort={handleSort}\n          data={dataToRender()}\n          sortIcon={<ChevronDown />}\n          paginationComponent={CustomPagination}\n          selectableRowsComponent={BootstrapCheckbox}\n          className=\"react-dataTable\"\n          subHeaderComponent={\n            <CustomHeader\n              plan={plan}\n              searchTerm={searchTerm}\n              rowsPerPage={rowsPerPage}\n              handleFilter={handleFilter}\n              handlePerPage={handlePerPage}\n              handlePlanChange={handlePlanChange}\n            />\n          }\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default Table\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nmodule.exports = _taggedTemplateLiteral, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}