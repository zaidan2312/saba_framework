{"version":3,"sources":["views/apps/app/modal/index.js","views/apps/app/Table.js","../../src/mounts.js","../../src/index.js","../node_modules/lodash.debounce/index.js","shared/GlobaActionsTable.js","utility/canvasUtils.js"],"names":["ORIENTATION_TO_ANGLE","ModalAddEdit","show","setShow","detailPage","formState","setFormState","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","useState","codeApp","setCodeApp","appType","setAppType","mainLanguage","setMainLanguage","framework","setFramework","setLoadingText","imageSrc","setImageSrc","x","y","crop","setCrop","rotation","setRotation","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","useForm","control","setError","handleSubmit","errors","Option","components","appTypeOptions","value","label","icon","className","sixe","IconImgOption","props","src","data","style","width","alt","appMainLanguageOptions","appFrameworkOptions","countChanges","storeData","sortedObject","selectedData","key","JSON","stringify","handleInputName","event","newValue","target","replace","replaceAll","toLowerCase","updateDataToApi","a","Object","values","every","field","includes","getCroppedImg","croppedImage","appLogo","pageTitle","putData","then","res","meta","requestStatus","toast","success","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","length","type","postDataToApi","formData","description","programming_language","main_language","language_others","framework_ver","dependencies","favicon","console","log","postData","handleReset","resetSelectedData","useDropzone","multiple","onDrop","acceptedFiles","file","onFileChange","getRootProps","getInputProps","onCropComplete","useCallback","croppedArea","readFile","Promise","resolve","reader","FileReader","addEventListener","result","readAsDataURL","imageDataUrl","getOrientation","orientation","getRotatedImage","useEffect","logo","isOpen","toggle","blocking","isLoadingAddEdit","isLoadingDetail","loader","onSubmit","md","xs","for","defaultValue","name","render","onInput","invalid","code","disabled","readOnly","theme","selectThemeColors","filter","el","info","onChange","options","classnames","classNamePrefix","margin","image","aspect","showGrid","onCropChange","onRotationChange","onZoomChange","restrictPosition","objectFit","size","href","onClick","e","preventDefault","min","max","step","outline","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","ability","AbilityContext","invoices","getUserData","xl","htmlFor","can","sessionStorage","getItem","List","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","showModal","setShowModal","handleEdit","rowData","detailFromGrid","setDataById","handleCloseModal","revivalBack","neutralizeBack","handleDelete","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","countSelectedCopy","map","deleteSelectedRowData","debounceFn","debounce","inputValue","getDataList","search","page","handleRowSelected","progLangImg","python","javascript","react","angular","flask","columns","sortField","center","sortable","selector","row","cell","img","height","imgHeight","imgWidth","is_uploading","initials","content","dynamicColumns","column","columnName","fieldName","dataFormat","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","tableColumns","useMemo","isLoading","sx","bgcolor","dark","light","animation","getAlwaysGrid","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","keys","some","k","Array","fill","dataToRender","subHeaderComponent","parseInt","currentTarget","mounts","getter","swal","noop","extractReactParams","reactParams","otherParams","mountKeys","mount","React","domElement","ReactDOM","unrender","_main","this","__mountedDomElements","__params","superDidOpen","superDidDestroy","didOpen","popup","didDestroy","update","argsToParams","args","params","forEach","ParentSwal","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","freeGlobal","global","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","nativeMin","now","Date","isObject","toNumber","isObjectLike","call","isSymbol","other","valueOf","isBinary","test","slice","module","exports","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","arguments","cancel","clearTimeout","flush","GlobalActionsTable","pageAttr","disabledAction","onlyText","withText","rowClickEvent","navigate","useNavigate","storeAll","dynamicStore","dynamic_temp_state","dynamicColumnsExtraActionsButton","crudOpt","extraBtnPrefixId","getDepthValue","obj","path","reverse","current","pop","scrollToDiv","divId","element","document","getElementById","scrollIntoView","behavior","block","extraBtnShowCondition","showIf","item","index","operator","currentRowValue","evalStr","userData","isManager","email","username","showIf_or","eval","enabledBtnViewCondition","paramss","enabledViewBtnCondition","enabledViewBtnCondition_or","pageType","hasColorClass","Ripple","staticUrl","clickLinkUrl","static","fieldUrl","widgetId","clickLinkSlideToWidget","widget_id","paramsFromFields","it","idx","paramKey","paramName","paramValue","fieldUrlFix","startsWith","window","open","paramsArr","parseStrAndField","push","appendToEndpointPath","isQueryStr","newStaticUrl","join","staticUrlFix","clickLinkFillGlobalFilter","targetId","store_to_reset","getAttribute","pageAttributes","dynamicCard","children","child","chart_id","cardId","pageId","linkToGlobalFilter","dataFrom","linkToGlobalFilterName","childStoreName","baseUrl","pageData","resetData","endpointName","renderIcon","isViewOnRow","placement","tooltip","onDashboard","saveAsNewBtn","dynamicForm","gridTheme","ganttParentIdField","createImage","url","reject","Image","setAttribute","getRadianAngle","degreeValue","PI","rotateSize","rotRad","abs","cos","sin","pixelCrop","flip","horizontal","vertical","asBlob","asFile","canvas","createElement","ctx","getContext","bBoxWidth","bBoxHeight","translate","rotate","scale","drawImage","getImageData","putImageData","toDataURL","toBlob","URL","createObjectURL"],"mappings":"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","file":"static/js/144.274b97d9.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useContext,\n  useEffect,\n  useState,\n  useCallback,\n  useRef,\n  createRef\n} from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  ListGroup,\n  ListGroupItem\n} from \"reactstrap\"\nimport { useDropzone } from \"react-dropzone\"\nimport { FileText, X, DownloadCloud } from \"react-feather\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors, sortedObject } from \"@utils\"\nimport Select, { components } from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById\n} from \"../store\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ApiIcon from \"@mui/icons-material/Api\"\nimport WebIcon from \"@mui/icons-material/Web\"\nimport InstallMobileIcon from \"@mui/icons-material/InstallMobile\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\nimport classnames from \"classnames\"\nimport { getOrientation } from \"get-orientation/browser\"\nimport {\n  getCroppedImg,\n  getRotatedImage\n} from \"../../../../utility/canvasUtils\"\nimport Cropper from \"react-easy-crop\"\nimport Slider from \"@mui/material/Slider\"\nconst ORIENTATION_TO_ANGLE = {\n  3: 180,\n  6: 90,\n  8: -90\n}\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [codeApp, setCodeApp] = useState(\"\")\n  const [appType, setAppType] = useState(\"\")\n  const [mainLanguage, setMainLanguage] = useState(\"\")\n  const [framework, setFramework] = useState(\"\")\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [imageSrc, setImageSrc] = useState(null)\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\n  const [rotation, setRotation] = useState(0)\n  const [zoom, setZoom] = useState(1)\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n  // const [fileToUpload, setFileToUpload] = useState()\n\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const { Option } = components\n  const IconOption = (props) => (\n    <Option {...props}>\n      {props.data.icon}\n      {props.data.label}\n    </Option>\n  )\n\n  const appTypeOptions = [\n    {\n      value: \"service\",\n      label: \"Service\",\n      icon: <ApiIcon className=\"me-1\" sixe={32} />\n    },\n    {\n      value: \"web\",\n      label: \"Web App\",\n      icon: <WebIcon className=\"me-1\" sixe={32} />\n    },\n    {\n      value: \"mobile\",\n      label: \"Mobile App\",\n      icon: <InstallMobileIcon className=\"me-1\" sixe={32} />\n    }\n  ]\n\n  const IconImgOption = (props) => (\n    <Option {...props}>\n      <img\n        className=\"me-1\"\n        src={props.data.icon}\n        style={{ width: 36 }}\n        alt={props.data.label}\n      />\n      {props.data.label}\n    </Option>\n  )\n\n  const appMainLanguageOptions = [\n    {\n      value: \"python\",\n      label: \"Python\",\n      icon: \"https://logos-download.com/wp-content/uploads/2016/10/Python_logo_wordmark.png\"\n    },\n    {\n      value: \"javascript\",\n      label: \"Javascript\",\n      icon: \"https://javascriptsu.files.wordpress.com/2020/12/js.jpg\"\n    }\n  ]\n\n  const appFrameworkOptions = [\n    {\n      value: \"react\",\n      label: \"React\",\n      icon: \"https://logos-download.com/wp-content/uploads/2016/09/React_logo_wordmark.png\"\n    },\n    {\n      value: \"angular\",\n      label: \"Angular\",\n      icon: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQgREvN-e1uVZXVDc2w_zLeey0Li4buQ26gF0ZmCYxaBMoybo4uQTncS3Z5WxHRyZNfA&usqp=CAU\"\n    },\n    {\n      value: \"flask\",\n      label: \"Flask\",\n      icon: \"https://miro.medium.com/max/1079/1*nvtdCw77Al6LgV8wt_ma6Q.png\"\n    },\n    {\n      value: \"flutter\",\n      label: \"Flutter\",\n      icon: \"https://png.pngitem.com/pimgs/s/480-4803274_google-flutter-hd-png-download.png\"\n    }\n  ]\n\n  const countChanges = (data) => {\n    if (formState === \"edit\") {\n      const storeData = { ...sortedObject(store.selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n\n  const handleInputName = (event) => {\n    const value = event.target.value\n    const newValue = value\n      .replace(/[^a-zA-Z0-9 ]/g, \"\")\n      .replaceAll(\" \", \"_\")\n      .toLowerCase()\n    setCodeApp(newValue)\n  }\n\n  const updateDataToApi = async (data) => {\n    if (countChanges(data)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        // console.log(rotation)\n        // console.log(crop)\n        if (\n          imageSrc.includes(\"data:image/png;base64\") ||\n          crop !== 0 ||\n          rotation !== { x: 0, y: 0 }\n        ) {\n          const croppedImage = await getCroppedImg(\n            imageSrc,\n            croppedAreaPixels,\n            rotation\n          )\n          data[\"logo\"] = { appLogo: croppedImage }\n        }\n        // console.log(data)\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = async (formData) => {\n    const data = {}\n    data[\"name\"] = formData[\"name\"]\n    data[\"code\"] = codeApp\n    data[\"info\"] = {\n      description: formData[\"description\"],\n      appType: appType,\n      programming_language: {\n        main_language: mainLanguage,\n        language_others: [],\n        framework: framework,\n        framework_ver: null,\n        dependencies: []\n      }\n    }\n    data[\"logo\"] = {\n      appLogo:\n        \"https://res.cloudinary.com/insaba/image/upload/v1661262584/app/insaba_starterkit_services/logo.png\",\n      favicon:\n        \"https://res.cloudinary.com/insaba/image/upload/v1661262584/app/insaba_starterkit_services/favicon.png\"\n    }\n\n    if (imageSrc) {\n      const croppedImage = await getCroppedImg(\n        imageSrc,\n        croppedAreaPixels,\n        rotation\n      )\n      console.log(\"donee\", { croppedImage })\n      data[\"logo\"][\"appLogo\"] = croppedImage\n    }\n    // console.log(data)\n\n    if (\n      Object.values(data).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      dispatch(postData(data)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setShow(!show)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n          if (detailPage) {\n            dispatch(getDataById(id))\n          }\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key]?.length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  // ** UPLOAD\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: false,\n    onDrop: (acceptedFiles) => {\n      const file = acceptedFiles[0]\n      onFileChange(file)\n    }\n  })\n\n  const handleRemoveAllFiles = (e) => {\n    setImageSrc(null)\n  }\n\n  //////CROP\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels)\n  }, [])\n\n  function readFile(file) {\n    return new Promise((resolve) => {\n      const reader = new FileReader()\n      reader.addEventListener(\"load\", () => resolve(reader.result), false)\n      reader.readAsDataURL(file)\n    })\n  }\n\n  const onFileChange = async (file) => {\n    let imageDataUrl = await readFile(file)\n    const orientation = await getOrientation(file)\n    const rotation = ORIENTATION_TO_ANGLE[orientation]\n    if (rotation) {\n      imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n    }\n\n    setImageSrc(imageDataUrl)\n  }\n\n  useEffect(() => {\n    if (formState === \"edit\") {\n      setImageSrc(store.selectedData.logo.appLogo ?? null)\n    }\n  }, [])\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\n            </h2>\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              <Col md={8} xs={12}>\n                <Row>\n                  <Col md={12} xs={12} className=\"mb-1\">\n                    <Label className=\"form-label\" for=\"name\">\n                      {t(\"App Name\")}\n                      <span className=\"text-danger\">*</span>\n                    </Label>\n                    <Controller\n                      defaultValue={store.selectedData?.name ?? \"\"}\n                      control={control}\n                      id=\"name\"\n                      name=\"name\"\n                      render={({ field }) => (\n                        <Input\n                          {...field}\n                          className={\n                            errors.name\n                              ? \"form-control is-invalid\"\n                              : \"form-control\"\n                          }\n                          onInput={handleInputName}\n                          id=\"name\"\n                          invalid={errors.name && true}\n                        />\n                      )}\n                    />\n                  </Col>\n\n                  <Col md={12} xs={12} className=\"mb-1\">\n                    <Label className=\"form-label\" for=\"code\">\n                      {t(\"Code\")}\n                      <span className=\"text-danger\">*</span>\n                    </Label>\n                    <Controller\n                      defaultValue={store.selectedData?.code ?? codeApp}\n                      control={control}\n                      id=\"code\"\n                      name=\"code\"\n                      render={({ field }) => (\n                        <Input\n                          disabled={true}\n                          readOnly={true}\n                          {...field}\n                          value={store.selectedData?.code ?? codeApp}\n                          className={\n                            errors.code\n                              ? \"form-control is-invalid\"\n                              : \"form-control\"\n                          }\n                          id=\"code\"\n                          invalid={errors.code && true}\n                        />\n                      )}\n                    />\n                  </Col>\n\n                  <Col md={12} xs={12} className=\"mb-1\">\n                    <Label className=\"form-label\" for=\"appType\">\n                      {t(\"App Type\")}\n                    </Label>\n                    <Select\n                      id=\"appType\"\n                      theme={selectThemeColors}\n                      defaultValue={appTypeOptions.filter(\n                        (el) => el.value === store.selectedData?.info?.appType\n                      )}\n                      onChange={(data) => {\n                        setAppType(data.value)\n                      }}\n                      options={appTypeOptions}\n                      components={{ Option: IconOption }}\n                      className={classnames(\"react-select\", {\n                        \"is-invalid\": appType === null\n                      })}\n                      classNamePrefix=\"select\"\n                    />\n                  </Col>\n                </Row>\n              </Col>\n\n              <Col md={4} xs={12}>\n                {/* <Label className=\"form-label\" for=\"name\">\n                  {t(\"App Logo\")}\n                  <span className=\"text-danger\">*</span>\n                </Label> */}\n\n                <CardBody\n                  style={{ padding: 0, margin: \"auto\" }}\n                  className=\"text-center\"\n                >\n                  {imageSrc && (\n                    <div className=\"crop-container2\">\n                      <Cropper\n                        image={imageSrc}\n                        crop={crop}\n                        rotation={rotation}\n                        zoom={zoom}\n                        aspect={1}\n                        showGrid={false}\n                        onCropChange={setCrop}\n                        onRotationChange={setRotation}\n                        onCropComplete={onCropComplete}\n                        onZoomChange={setZoom}\n                        restrictPosition={false}\n                        // cropSize={{ width: \"110px\", height: \"110px\" }}\n                        objectFit=\"vertical-cover\"\n                      />\n                    </div>\n                  )}\n                  {!imageSrc ? (\n                    <div {...getRootProps({ className: \"dropzone\" })}>\n                      <input {...getInputProps()} />\n                      <div className=\"d-flex align-items-center justify-content-center flex-column\">\n                        <DownloadCloud size={64} />\n                        <h5>{t(\"Drop Files here or click to upload\")}</h5>\n                        <p className=\"text-secondary\">\n                          {t(\"Drop files here or click\")}{\" \"}\n                          <a href=\"/\" onClick={(e) => e.preventDefault()}>\n                            {t(\"browse\")}\n                          </a>{\" \"}\n                          {t(\"through your machine\")}\n                        </p>\n                      </div>\n                    </div>\n                  ) : null}\n                  {imageSrc ? (\n                    <Fragment>\n                      <div className=\"d-flex justify-content-left align-items-center\">\n                        <div\n                          style={{ width: \"95px\" }}\n                          className=\"d-flex flex-column me-1\"\n                        >\n                          <span>{t(\"Zoom\")}</span>\n                        </div>\n                        <Slider\n                          value={zoom}\n                          min={1}\n                          max={3}\n                          step={0.1}\n                          aria-labelledby=\"Zoom\"\n                          onChange={(e, zoom) => setZoom(zoom)}\n                        />\n                      </div>\n\n                      <div className=\"d-flex justify-content-left align-items-center  mb-1\">\n                        <div\n                          style={{ width: \"95px\" }}\n                          className=\"d-flex flex-column me-1\"\n                        >\n                          <span>{t(\"Rotation\")}</span>\n                        </div>\n                        <Slider\n                          value={rotation}\n                          min={0}\n                          max={360}\n                          step={1}\n                          aria-labelledby=\"Rotation\"\n                          onChange={(e, rotation) => setRotation(rotation)}\n                        />\n                      </div>\n\n                      {/* <ListGroup className=\"my-2\">{fileList}</ListGroup> */}\n                      <div className=\"d-flex justify-content-center\">\n                        <Button\n                          color=\"danger\"\n                          outline\n                          onClick={handleRemoveAllFiles}\n                        >\n                          {t(\"Change\")}\n                        </Button>\n                      </div>\n                    </Fragment>\n                  ) : null}\n                </CardBody>\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"main_language\">\n                  {t(\"Programming Language\")}\n                </Label>\n                <Select\n                  id=\"main_language\"\n                  theme={selectThemeColors}\n                  defaultValue={appMainLanguageOptions.filter(\n                    (el) =>\n                      el.value ===\n                      store.selectedData?.info?.programming_language\n                        ?.main_language\n                  )}\n                  onChange={(data) => {\n                    setMainLanguage(data.value)\n                  }}\n                  options={appMainLanguageOptions}\n                  components={{ Option: IconImgOption }}\n                  className=\"react-select\"\n                  classNamePrefix=\"select\"\n                />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"framework\">\n                  {t(\"Framework\")}\n                </Label>\n                <Select\n                  id=\"framework\"\n                  theme={selectThemeColors}\n                  defaultValue={appFrameworkOptions.filter(\n                    (el) =>\n                      el.value ===\n                      store.selectedData?.info?.programming_language?.framework\n                  )}\n                  onChange={(data) => {\n                    setFramework(data.value)\n                  }}\n                  options={appFrameworkOptions}\n                  components={{ Option: IconImgOption }}\n                  className=\"react-select\"\n                  classNamePrefix=\"select\"\n                />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"description\">\n                  {t(\"Description\")}\n                  <span className=\"text-danger\"></span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.name ?? \"\"}\n                  control={control}\n                  id=\"description\"\n                  name=\"description\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      type=\"textarea\"\n                      className=\"form-control\"\n                      id=\"description\"\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n  forwardRef\n} from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData\n} from \"./store\"\nimport { getInvoice } from \"../../invoices/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport debounce from \"lodash.debounce\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid\n} from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Button,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  CardText\n} from \"reactstrap\"\nimport Avatar from \"@components/avatar\"\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { Skeleton } from \"@mui/material\"\nimport Moment from \"moment\"\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\nimport ApiIcon from \"@mui/icons-material/Api\"\nimport WebIcon from \"@mui/icons-material/Web\"\nimport InstallMobileIcon from \"@mui/icons-material/InstallMobile\"\nconst MySwal = withReactContent(Swal)\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className=\"form-check\">\n    <Input type=\"checkbox\" ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({\n  store,\n  toggleSidebar,\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm,\n  selectedRow,\n  handleDeleteSelected\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n  const dispatch = useDispatch()\n  const storeInvoice = useSelector((state) => state.invoices)\n  const userData = getUserData()\n\n  return (\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\n            <Input\n              className=\"mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: \"5rem\" }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </Input>\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\n          </div>\n        </Col>\n        <Col\n          xl=\"8\"\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\n        >\n          {selectedRow?.length > 0 &&\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n              <Button\n                className=\"delete-users\"\n                color=\"danger\"\n                onClick={handleDeleteSelected}\n              >\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\n              </Button>\n            </div>\n          ) : null}\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className=\"d-flex align-items-center table-header-actions\">\n            {/* <UncontrolledDropdown className=\"me-1\">\n              <DropdownToggle color=\"secondary\" caret outline>\n                <Share className=\"font-small-4 me-50\" />\n                <span className=\"align-middle\">{t(\"Export\")}</span>\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"pdf\",\n                        dataYear: userData.dataYear,\n                        print: true,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <Printer className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\n                </DropdownItem>\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"pdf\",\n                        dataYear: userData.dataYear,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <File className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">PDF</span>\n                </DropdownItem>\n\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"xls\",\n                        dataYear: userData.dataYear,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <Grid className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">Excel</span>\n                </DropdownItem>\n\n                <DropdownItem\n                  className=\"w-100\"\n                  // onClick={() => downloadCSV(store.data)}\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"csv\",\n                        dataYear: userData.dataYear,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <FileText className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">CSV</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown> */}\n\n            {ability.can(\n              \"post\",\n              sessionStorage.getItem(\"current_page_perm\")\n            ) ? (\n              <Button\n                className=\"add-new-user\"\n                color=\"primary\"\n                onClick={toggleSidebar}\n                // onClick={handleAdd}\n              >\n                {t(\"Add New\")} {t(pageTitle)}\n              </Button>\n            ) : null}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst List = () => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  const { colors } = useContext(ThemeColors)\n  const [sort_dir, setSortDir] = useState(\"desc\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sort, setSort] = useState(\"id\")\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [selectedRows, setSelectedRows] = useState([])\n  const [toggleCleared, setToggleCleared] = useState(false)\n\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n\n  const handleEdit = (rowData) => {\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        setLoading(false)\n        setShowModal(true)\n      })\n    }\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const toggleSidebar = () => {\n    // console.log(\"here\")\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const handleDeleteSelected = async () => {\n    const countSelectedCopy = selectedRows.length\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\n        \"selected data. Deleted data cannot be recovered\"\n      )}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\n        pageTitle\n      )}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\n      )\n      setLoading(true)\n      const values = selectedRows.map((a) => a.id)\n      // console.log(values)\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setSelectedRows([])\n          setToggleCleared(!toggleCleared)\n          setLoading(false)\n          toast.success(\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\n            {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            }\n          )\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /////PAGINATION SERVERSIDE\n  const handlePagination = (page) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: value,\n        page: currentPage\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  const handleDebounceFn = (inputValue) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        search: inputValue,\n        sort,\n        page: currentPage,\n        length: rowsPerPage\n      })\n    )\n  }\n\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\n\n  const handleFilter = (event) => {\n    setSearchTerm(event)\n    debounceFn(event)\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSortDir(sortDirection)\n    setSort(column.sortField)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage\n      })\n    )\n  }\n\n  const handleRowSelected = useCallback((state) => {\n    setSelectedRows(state.selectedRows)\n  }, [])\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        containerClassName={\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\n        }\n      />\n    )\n  }\n\n  const renderCell = (row, column) => {\n    const field = row[column.fieldName]\n    const dataFormat = column.dataFormat\n    if (dataFormat) {\n      if (dataFormat.includes(\":\")) {\n        const columnTypeFormat = dataFormat.split(\":\")\n        const columnType = columnTypeFormat[0]\n        const columnFormat = columnTypeFormat[1]\n        let columnFormated = row[column.fieldName]\n        if (columnType === \"date\") {\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\n          if (columnFormat) {\n            columnFormated = Moment(field).format(columnFormat)\n          }\n        }\n        if (columnType === \"datetime\") {\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\n          if (columnFormat) {\n            columnFormated = Moment(field).format(columnFormat)\n          }\n        }\n        return columnFormated\n      }\n    }\n    return row[column.fieldName]\n  }\n\n  const progLangImg = {\n    python:\n      \"https://logos-download.com/wp-content/uploads/2016/10/Python_logo_wordmark.png\",\n    javascript: \"https://javascriptsu.files.wordpress.com/2020/12/js.jpg\",\n    react:\n      \"https://logos-download.com/wp-content/uploads/2016/09/React_logo_wordmark.png\",\n    angular:\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQgREvN-e1uVZXVDc2w_zLeey0Li4buQ26gF0ZmCYxaBMoybo4uQTncS3Z5WxHRyZNfA&usqp=CAU\",\n    flask: \"https://miro.medium.com/max/1079/1*nvtdCw77Al6LgV8wt_ma6Q.png\"\n  }\n  const columns = [\n    {\n      name: t(\"App Name\"),\n      sortField: \"name\",\n      center: false,\n      sortable: true,\n      selector: (row) => row[\"name\"],\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center\">\n          {row.logo?.appLogo ? (\n            <Avatar\n              className=\"me-1\"\n              img={row?.logo?.appLogo}\n              width=\"32\"\n              height=\"32\"\n              imgHeight=\"25\"\n              imgWidth=\"30\"\n              color={\"light-primary\"}\n            />\n          ) : !row.is_uploading ? (\n            <Avatar\n              initials\n              className=\"me-1\"\n              color={\"light-primary\"}\n              content={row.name || \"John Doe\"}\n            />\n          ) : (\n            <Spinner size=\"sm\" color=\"primary\" />\n          )}\n\n          <div className=\"d-flex flex-column\">\n            <span className=\"fw-bolder\">{row.name}</span>\n            <small className=\"text-truncate text-muted mb-0\">{row.code}</small>\n          </div>\n        </div>\n      )\n    },\n    {\n      name: t(\"App Type\"),\n      center: false,\n      sortable: false,\n      selector: (row) => row[\"info\"][\"appType\"],\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center\">\n          {row?.info?.appType === \"service\" ? (\n            <ApiIcon className=\"me-1\" sixe={32} />\n          ) : (\n            <WebIcon className=\"me-1\" sixe={32} />\n          )}\n          <div className=\"d-flex flex-column\">\n            <span className=\"fw-bolder\">{row?.info?.appType}</span>\n          </div>\n        </div>\n      )\n    },\n    {\n      name: t(\"Framework\"),\n      center: false,\n      sortable: false,\n      selector: (row) => row[\"info\"][\"programming_language\"][\"main_language\"],\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center\">\n          {progLangImg[row?.info?.programming_language?.main_language] && (\n            <img\n              className=\"me-1\"\n              src={progLangImg[row?.info?.programming_language?.main_language]}\n              // width=\"60\"\n              height=\"18\"\n            />\n          )}\n          {progLangImg[row?.info?.programming_language?.framework] && (\n            <img\n              className=\"me-1\"\n              src={progLangImg[row?.info?.programming_language?.framework]}\n              // width=\"60\"\n              height=\"18\"\n            />\n          )}\n        </div>\n      )\n    },\n    ...store.dynamicColumns.map((column) => ({\n      name: column.columnName,\n      sortField: column.fieldName,\n      center: false,\n      sortable: true,\n      selector: (row) => row[column.fieldName],\n      cell: (row) => renderCell(row, column)\n    })),\n    {\n      name: t(\"Actions\"),\n      center: true,\n      width: \"140px\",\n      cell: (row) => (\n        <GlobalActionsTable\n          row={row}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n        />\n      )\n    }\n  ]\n\n  const tableColumns = useMemo(\n    () =>\n      store.isLoading\n        ? columns.map((column) => ({\n            name: t(column.name),\n            ...column,\n            sortable: false,\n            cell: (row) => (\n              <Skeleton\n                sx={{ bgcolor: colors.dark.light }}\n                animation=\"wave\"\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\n                height={40}\n              />\n            )\n          }))\n        : columns.map((column) => ({\n            name: t(column.name),\n            ...column\n          })),\n    [store.isLoading, columns]\n  )\n\n  const dataToRender = () => {\n    const filters = {\n      search: searchTerm\n    }\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    if (!store.isLoading) {\n      if (store.data.length > 0) {\n        return store.data\n      } else if (store.data.length === 0 && isFiltered) {\n        return []\n      } else {\n        // console.log(store.allData)\n        // return store.allData.slice(0, rowsPerPage)\n      }\n    } else {\n      return Array(10).fill({})\n    }\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(\n        getDataList({\n          sort_dir,\n          sort,\n          search: searchTerm,\n          page: currentPage,\n          length: rowsPerPage\n        })\n      )\n    }\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\n\n  return (\n    <Fragment>\n      <UILoader blocking={loading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <DataTable\n              noHeader\n              subHeader\n              sortServer\n              responsive\n              pagination\n              paginationServer\n              paginationTotalRows={store.total}\n              paginationComponent={CustomPagination}\n              selectableRows\n              onSelectedRowsChange={handleRowSelected}\n              selectableRowsHighlight\n              // onRowClicked={handleRowSelected}\n              clearSelectedRows={toggleCleared}\n              selectableRowsComponent={BootstrapCheckbox}\n              noDataComponent={<NoDataDisplay />}\n              // fixedHeader\n              // fixedHeaderScrollHeight=\"600px\"\n              style={{ \"min-height\": \"400px\" }}\n              highlightOnHover\n              pointerOnHover\n              columns={tableColumns}\n              onSort={handleSort}\n              sortIcon={<ChevronDown />}\n              className=\"react-dataTable\"\n              data={dataToRender()}\n              subHeaderComponent={\n                <CustomHeader\n                  store={store}\n                  searchTerm={searchTerm}\n                  rowsPerPage={rowsPerPage}\n                  handleFilter={handleFilter}\n                  handlePerPage={handlePerPage}\n                  toggleSidebar={toggleSidebar}\n                  selectedRow={selectedRows}\n                  handleDeleteSelected={handleDeleteSelected}\n                />\n              }\n            />\n          </div>\n        </Card>\n\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n","export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent (ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams (params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map(mount => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n  function render (swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find(mount => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      ReactDOM.render(value, domElement)\n      swal.__mountedDomElements.push(domElement)\n    })\n  }\n\n  function unrender (swal) {\n    swal.__mountedDomElements.forEach(domElement => {\n      ReactDOM.unmountComponentAtNode(domElement)\n    })\n    swal.__mountedDomElements = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params, mixinParams) {\n      this.__mountedDomElements = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams)\n            superDidOpen(popup)\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        }),\n      )\n    }\n\n    update (params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","import { AbilityContext } from \"@src/utility/context/Can\"\nimport { renderIcon } from \"@src/views/apps/menu/store/my_menu\"\nimport { getUserData, parseStrAndField } from \"@utils\"\nimport { Fragment, useContext } from \"react\"\nimport { CornerDownRight, Edit2, Eye, Trash2 } from \"react-feather\"\nimport { useTranslation } from \"react-i18next\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { Button, UncontrolledTooltip } from \"reactstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  getBaseUrl,\n  getDataList,\n  resetData\n} from \"@src/shared/dynamic_pages/store\"\n\nconst GlobalActionsTable = ({\n  row,\n  pageAttr,\n  handleDelete,\n  handleEdit,\n  disabledAction = [],\n  onlyText = false,\n  withText = false,\n  outline = false,\n  rowClickEvent = \"edit\"\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n  const navigate = useNavigate()\n  const storeAll = useSelector((state) => state.dynamicStore)\n  const store = useSelector((state) => state.dynamic_temp_state)\n  const dispatch = useDispatch()\n  const dynamicColumnsExtraActionsButton =\n    pageAttr?.crudOpt?.dynamicColumnsExtraActionsButton\n\n  const extraBtnPrefixId = `btn-extra-action-${row?.id}`\n\n  function getDepthValue(obj, path, defaultValue = null) {\n    let props\n    if (typeof obj === \"undefined\") return defaultValue\n    if (typeof path === \"string\") {\n      props = path.split(\".\").reverse()\n    } else {\n      props = path\n    }\n    if (path.length === 0) return obj || defaultValue\n    let current = props.pop()\n    return getDepthValue(obj?.[current], props, defaultValue)\n  }\n\n  const scrollToDiv = (divId) => {\n    const element = document.getElementById(divId)\n    if (element) {\n      element.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      })\n    }\n  }\n\n  const extraBtnShowCondition = (crudOpt, row = null) => {\n    let result = false\n    if (crudOpt?.showIf) {\n      crudOpt?.showIf?.map((item, index) => {\n        let field = item?.field\n        let operator = item?.operator\n        let value = item?.value\n\n        let currentRowValue = null\n        let evalStr = null\n\n        if (field?.includes(\"__userData\")) {\n          const userData = getUserData()\n          if (field === \"__userData.name__\") {\n            currentRowValue = userData?.name\n          } else if (field === \"__userData.isManager__\") {\n            currentRowValue = userData?.isManager\n          } else if (field === \"__userData.email__\") {\n            currentRowValue = userData?.email\n          } else if (field === \"__userData.id__\") {\n            currentRowValue = userData?.id\n          } else if (field === \"__userData.username__\") {\n            currentRowValue = userData?.username\n          }\n\n          evalStr = `'${currentRowValue}' ${operator} ${value}`\n          if (\n            [null, undefined, \"\", false].includes(currentRowValue) &&\n            (value === \"null\" || value === \"false\")\n          ) {\n            evalStr = `${currentRowValue} ${operator} ${currentRowValue}`\n          }\n\n          try {\n            if (item?.showIf_or === true) {\n              result = result || eval(evalStr)\n            } else {\n              result = eval(evalStr)\n            }\n          } catch (error) {\n            result = false\n          }\n          // console.log(field, evalStr, result)\n        } else {\n          currentRowValue = field?.includes(\".\")\n            ? getDepthValue(row, field)\n            : row?.[field]\n\n          evalStr = `'${currentRowValue}' ${operator} ${value}`\n\n          if (\n            [null, undefined, \"\", false].includes(currentRowValue) &&\n            (value === \"null\" || value === \"false\")\n          ) {\n            evalStr = `${currentRowValue} ${operator} ${currentRowValue}`\n          }\n\n          try {\n            if (item?.showIf_or === true) {\n              result = result || eval(evalStr)\n            } else {\n              result = eval(evalStr)\n            }\n          } catch (error) {\n            result = false\n          }\n          // console.log(field, evalStr, result)\n        }\n      })\n    } else {\n      result = true\n    }\n    return result\n  }\n\n  const enabledBtnViewCondition = (crudOpt, row = null) => {\n    const paramss = useParams()\n    let result = false\n    if (crudOpt?.enabledViewBtnCondition) {\n      crudOpt?.enabledViewBtnCondition?.map((item) => {\n        let field = item?.field\n        let operator = item?.operator\n        let value = item?.value\n\n        let currentRowValue = null\n        let evalStr = null\n\n        if (field?.includes(\"__userData\")) {\n          const userData = getUserData()\n          if (field === \"__userData.name__\") {\n            currentRowValue = userData?.name\n          } else if (field === \"__userData.isManager__\") {\n            currentRowValue = userData?.isManager\n          } else if (field === \"__userData.email__\") {\n            currentRowValue = userData?.email\n          } else if (field === \"__userData.id__\") {\n            currentRowValue = userData?.id\n          } else if (field === \"__userData.username__\") {\n            currentRowValue = userData?.username\n          }\n\n          evalStr = `'${currentRowValue}' ${operator} ${value}`\n          if (\n            [null, undefined, \"\", false].includes(currentRowValue) &&\n            (value === \"null\" || value === \"false\")\n          ) {\n            evalStr = `${currentRowValue} ${operator} ${currentRowValue}`\n          }\n\n          try {\n            if (crudOpt?.enabledViewBtnCondition_or === true) {\n              result = result || eval(evalStr)\n            } else {\n              result = eval(evalStr)\n            }\n          } catch (error) {\n            result = false\n          }\n          // console.log(field, evalStr, result)\n        } else {\n          currentRowValue = field?.includes(\".\")\n            ? getDepthValue(row, field)\n            : row?.[field]\n\n          evalStr = `'${currentRowValue}' ${operator} ${value}`\n\n          if (\n            [null, undefined, \"\", false].includes(currentRowValue) &&\n            (value === \"null\" || value === \"false\")\n          ) {\n            evalStr = `${currentRowValue} ${operator} ${currentRowValue}`\n          }\n\n          try {\n            if (crudOpt?.enabledViewBtnCondition_or === true) {\n              result = result || eval(evalStr)\n            } else {\n              result = eval(evalStr)\n            }\n          } catch (error) {\n            result = false\n          }\n          // console.log(field, evalStr, result)\n        }\n      })\n    }\n\n    if (\n      !ability.can(\"update\", sessionStorage.getItem(\"current_page_perm\")) &&\n      !ability.can(\"post\", sessionStorage.getItem(\"current_page_perm\"))\n    ) {\n      result = true\n    }\n\n    if (paramss?.pageType === \"view\") {\n      result = true\n    }\n\n    return result\n  }\n\n  function hasColorClass(className) {\n    let result = \"\"\n    if (className && !className?.includes(\"flat\")) {\n      result = \"has-color\"\n    }\n    return result\n  }\n\n  return (\n    <div className=\"column-action text-center\">\n      {dynamicColumnsExtraActionsButton\n        ? dynamicColumnsExtraActionsButton?.map((item, index) => {\n            return (\n              extraBtnShowCondition(item, row) && (\n                <Fragment key={`${extraBtnPrefixId}-fragment-${index}`}>\n                  <Button.Ripple\n                    key={`${extraBtnPrefixId}-${index}`}\n                    outline={\n                      item?.outline &&\n                      /^(flat-|gradient-|relief-)/.test(item?.color) === false\n                    }\n                    id={`${extraBtnPrefixId}-${index}`}\n                    className={`btn-icon ms-25 extra-btn-table } ${\n                      !item?.text ? \"rounded-circle \" : \"\"\n                    }`}\n                    color={item?.color ? item?.color : \"flat-secondary\"}\n                    onClick={(e) => {\n                      e.preventDefault()\n                      let staticUrl = item?.clickLinkUrl?.static\n                      let fieldUrl = item?.clickLinkUrl?.field\n                      let widgetId = item?.clickLinkSlideToWidget?.widget_id\n\n                      if (staticUrl && !fieldUrl && !widgetId) {\n                        let params = \"\"\n                        let paramsFromFields =\n                          item?.clickLinkUrl?.paramsFromFields\n                        let paramsArr = []\n                        if (paramsFromFields) {\n                          paramsFromFields?.map((it, idx) => {\n                            let paramKey = it?.paramName\n                            // let paramValue = row?.[it?.fieldName]\n                            let paramValue = parseStrAndField(\n                              row,\n                              it?.fieldName\n                            )\n                            params += `&${paramKey}=${paramValue}`\n                            paramsArr.push(`${paramKey}=${paramValue}`)\n                          })\n                        }\n\n                        let appendToEndpointPath =\n                          item?.clickLinkUrl?.appendToEndpointPath\n                        if (appendToEndpointPath) {\n                          // let appendToEndpointPathObj = appendToEndpointPath?.split(\",\")\n                          appendToEndpointPath?.map((it, idx) => {\n                            let paramKey = it?.paramName\n                            let paramValue = parseStrAndField(row, it)\n                            params += `/${paramValue}`\n                            paramsArr.push(`${paramValue}`)\n                          })\n                        }\n\n                        const isQueryStr = staticUrl?.includes(\"?\")\n\n                        let newStaticUrl = !appendToEndpointPath\n                          ? `${staticUrl}${\n                              isQueryStr ? \"\" : \"?\"\n                            }${paramsArr.join(\"&\")}`\n                          : `${staticUrl}${\n                              isQueryStr ? \"/\" : \"/\"\n                            }${paramsArr.join(\"/\")}`\n\n                        let staticUrlFix = !appendToEndpointPath\n                          ? newStaticUrl\n                              .replace(\"&&\", \"&\")\n                              .replace(\"/?&\", \"?\")\n                              .replace(\"??\", \"?\")\n                              .replace(\"/?\", \"?\")\n                              .replace(\"/&\", \"&\")\n                              .replace(\"?&\", \"?\")\n                              .replace(\"&?\", \"&\")\n                              .replace(\"?&\", \"\")\n                          : newStaticUrl\n\n                        if (\n                          staticUrl.startsWith(\"http://\") ||\n                          staticUrl.startsWith(\"https://\")\n                        ) {\n                          // console.log(staticUrlFix)\n                          window.open(staticUrlFix, \"_blank\", \"noreferrer\")\n                        } else {\n                          navigate(newStaticUrl)\n                        }\n                      } else if (fieldUrl && !staticUrl && !widgetId) {\n                        let params = \"\"\n                        let paramsFromFields =\n                          item?.clickLinkUrl?.paramsFromFields\n                        // console.log(fieldUrl.includes(\".\"))\n                        let fieldUrlFix = fieldUrl.includes(\".\")\n                          ? getDepthValue(row, fieldUrl)\n                          : row?.[fieldUrl]\n                        // console.log(fieldUrlFix)\n                        if (fieldUrlFix) {\n                          // console.log(fieldUrlFix)\n                          if (paramsFromFields) {\n                            paramsFromFields?.map((it, idx) => {\n                              let paramKey = it?.paramName\n                              let paramValue = row?.[it?.fieldName]\n                              params += `${paramKey}=${paramValue}&`\n                            })\n                          }\n                          fieldUrlFix = `${fieldUrlFix}?${params.replace(\n                            /&$/,\n                            \"\"\n                          )}`\n                          if (\n                            fieldUrlFix.startsWith(\"http://\") ||\n                            fieldUrlFix.startsWith(\"https://\")\n                          ) {\n                            // console.log(fieldUrlFix)\n                            window.open(fieldUrlFix, \"_blank\", \"noreferrer\")\n                          } else {\n                            navigate(fieldUrlFix)\n                          }\n                        }\n                      } else if (!fieldUrl && !staticUrl && widgetId) {\n                        let params = \"\"\n                        let paramsFromFields =\n                          item?.clickLinkSlideToWidget?.paramsFromFields\n\n                        if (paramsFromFields) {\n                          paramsFromFields?.map((it, idx) => {\n                            let paramKey = it?.paramName\n                            let paramValue = row?.[it?.fieldName]\n                            params += `${paramKey}=${paramValue}&`\n                          })\n                        }\n                        setTimeout(() => {\n                          scrollToDiv(`widget_${widgetId}`)\n                        }, 400)\n                      }\n\n                      const clickLinkFillGlobalFilter =\n                        item?.clickLinkFillGlobalFilter\n                      // console.log(clickLinkFillGlobalFilter)\n                      if (clickLinkFillGlobalFilter) {\n                        const targetId = clickLinkFillGlobalFilter?.widget_id\n                        const element = document.getElementById(\n                          `widget_${targetId}`\n                        )\n                        if (element) {\n                          const store_to_reset =\n                            element.getAttribute(\"storename\")\n\n                          let params = {}\n                          let paramsFromFields =\n                            item?.clickLinkFillGlobalFilter?.paramsFromFields\n\n                          if (paramsFromFields) {\n                            paramsFromFields?.map((it, idx) => {\n                              let paramKey = it?.paramName\n                              let paramValue = row?.[it?.fieldName]\n                              params[`${paramKey}`] = paramValue\n                            })\n                          }\n\n                          storeAll.pageAttributes[\n                            store_to_reset\n                          ]?.options?.data?.dynamicCard?.map((x, index) => {\n                            // console.log(x)\n                            if (x?.children) {\n                              x.children?.map((child, index) => {\n                                // console.log(storeAll)\n                                // console.log(store)\n                                const widget_id =\n                                  child?.chart_id ??\n                                  child?.cardId ??\n                                  child?.pageId ??\n                                  child?.crudOpt?.pageId ??\n                                  index\n\n                                const targetAttr = child\n\n                                const linkToGlobalFilterName =\n                                  child?.linkToGlobalFilter ??\n                                  child?.crudOpt?.linkToGlobalFilter ??\n                                  child?.dataFrom?.linkToGlobalFilter\n\n                                // console.log(widget_id, targetId)\n\n                                if (\n                                  child?.type === \"global_filter\" &&\n                                  widget_id === targetId\n                                ) {\n                                  // console.log(targetAttr)\n                                  // if (storeAll?.pageData?.[store_to_reset]?.data) {\n                                  //   dispatch(resetData(store_to_reset))\n                                  // }\n                                  // dispatch(\n                                  //   getDataList({\n                                  //     ...(storeAll?.pageData?.[store_to_reset]\n                                  //       ?.params ?? {}),\n                                  //     ...params,\n                                  //     storeName: store_to_reset,\n                                  //     endpointName:\n                                  //     child?.crudOpt\n                                  //         ?.endpointName,\n                                  //     baseUrl:\n                                  //     child?.crudOpt\n                                  //         ?.baseUrl\n                                  //   })\n                                  // )\n                                }\n\n                                // else if (child?.crudOpt && targetId === linkToGlobalFilterName) {\n                                //   const child_widget_id =\n                                //   child?.chart_id ??\n                                //   child?.cardId ??\n                                //   child?.pageId ??\n                                //   child?.crudOpt?.pageId ??\n                                //   index\n                                // }\n                              })\n                            } else {\n                              const widget_id =\n                                x?.chart_id ??\n                                x?.cardId ??\n                                x?.pageId ??\n                                x?.crudOpt?.pageId ??\n                                index\n\n                              const targetAttr = x\n                              const linkToGlobalFilterName =\n                                x?.linkToGlobalFilter ??\n                                x?.crudOpt?.linkToGlobalFilter ??\n                                x?.dataFrom?.linkToGlobalFilter\n\n                              // console.log(widget_id, targetId)\n\n                              if (\n                                x?.type === \"global_filter\" &&\n                                widget_id === targetId\n                              ) {\n                                // console.log(targetAttr)\n                                // console.log(storeAll)\n                              } else if (\n                                x?.crudOpt &&\n                                targetId === linkToGlobalFilterName\n                              ) {\n                                const childStoreName = `${\n                                  x?.crudOpt?.baseUrl ??\n                                  x?.dataFrom?.baseUrl ??\n                                  x?.baseUrl\n                                }_${widget_id}`\n\n                                // console.log(params, x)\n                                // console.log(storeAll, childStoreName)\n\n                                if (\n                                  storeAll?.pageData?.[childStoreName]?.data\n                                ) {\n                                  dispatch(resetData(childStoreName))\n                                }\n\n                                dispatch(\n                                  getDataList({\n                                    ...(storeAll?.pageData?.[childStoreName]\n                                      ?.params ?? {}),\n                                    ...params,\n                                    storeName: childStoreName,\n                                    endpointName: x?.crudOpt?.endpointName,\n                                    baseUrl: x?.crudOpt?.baseUrl\n                                  })\n                                )\n                              }\n\n                              // const linkToGlobalFilterName =\n                              //   x?.linkToGlobalFilter ??\n                              //   x?.crudOpt?.linkToGlobalFilter ??\n                              //   x?.dataFrom?.linkToGlobalFilter\n                              // if (linkToGlobalFilterName) {\n                              //   const widget_id = x?.chart_id ?? x?.cardId\n                              //   // console.log(params?.storeName, linkToGlobalFilterName)\n                              //   if (params?.storeName === linkToGlobalFilterName) {\n                              //     isLinkedToChilds = true\n                              //     if (x?.crudOpt) {\n                              //       const store_to_reset = `${\n                              //         x?.crudOpt?.baseUrl ?? x?.dataFrom?.baseUrl ?? x?.baseUrl\n                              //       }_${widget_id}`\n                              //       // console.log(store_to_reset)\n                              //       // if (storeAll?.pageData?.[store_to_reset]?.data) {\n                              //       resetDataByStore(store_to_reset, params)\n                              //       // }\n                              //     } else {\n                              //       const store_to_reset = `${widget_id}`\n                              //       const copyParams = { ...params }\n                              //       delete copyParams.storeName\n                              //       copyParams[\"item\"] = x\n                              //       handleChangeFilterFromChild(copyParams)\n                              //     }\n                              //   }\n                              // }\n                            }\n                          })\n                        }\n                      }\n                    }}\n                  >\n                    {\n                      <Fragment>\n                        {item?.icon &&\n                          renderIcon(item?.icon, \"align-middle\", 16)}\n                        {item?.text && (\n                          <span className=\"ms-25 align-middle\">\n                            {t(item?.text)}\n                          </span>\n                        )}\n                      </Fragment>\n                    }\n                  </Button.Ripple>\n                  {!pageAttr?.isViewOnRow && (\n                    <UncontrolledTooltip\n                      key={`${extraBtnPrefixId}-tooltip-${index}`}\n                      placement=\"left\"\n                      target={`${extraBtnPrefixId}-${index}`}\n                    >\n                      {item?.tooltip ? t(item?.tooltip) : t(item?.text)}\n                    </UncontrolledTooltip>\n                  )}\n                </Fragment>\n              )\n            )\n          })\n        : null}\n\n      {ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) &&\n      !disabledAction.includes(\"delete\") &&\n      !pageAttr?.onDashboard ? (\n        <Fragment>\n          <Button.Ripple\n            outline={outline}\n            id={`btn-delete-${row.id}`}\n            className={`btn-action-table ms-25 btn-icon ${\n              !outline ? \"rounded-circle \" : \"\"\n            }`}\n            color={!outline ? \"flat-secondary\" : \"secondary\"}\n            onClick={(e) => {\n              e.preventDefault()\n              handleDelete(row.id)\n            }}\n          >\n            {!onlyText && <Trash2 size={16} />}\n            {(onlyText || withText) && (\n              <span className=\"align-middle ms-25\">{t(\"Delete\")}</span>\n            )}\n          </Button.Ripple>\n          {!pageAttr?.isViewOnRow && (\n            <UncontrolledTooltip\n              placement=\"left\"\n              target={`btn-delete-${row.id}`}\n            >\n              {t(\"Delete\")}\n            </UncontrolledTooltip>\n          )}\n        </Fragment>\n      ) : null}\n\n      {rowClickEvent !== \"view\" &&\n      ability.can(\"update\", sessionStorage.getItem(\"current_page_perm\")) &&\n      !disabledAction.includes(\"update\") &&\n      !pageAttr?.onDashboard ? (\n        <Fragment>\n          <Button.Ripple\n            outline={outline}\n            className={`btn-action-table ms-25 btn-icon ${\n              !outline ? \"rounded-circle \" : \"\"\n            }`}\n            color={!outline ? \"flat-secondary\" : \"secondary\"}\n            id={`btn-edit-${row.id}`}\n            onClick={(e) => {\n              e.preventDefault()\n              handleEdit(row)\n            }}\n          >\n            {!onlyText && <Edit2 size={16} />}\n            {(onlyText || withText) && (\n              <span className=\"align-middle ms-25\">{t(\"Edit\")}</span>\n            )}\n          </Button.Ripple>\n          {!pageAttr?.isViewOnRow && (\n            <UncontrolledTooltip placement=\"left\" target={`btn-edit-${row.id}`}>\n              {t(\"Edit\")}\n            </UncontrolledTooltip>\n          )}\n        </Fragment>\n      ) : null}\n\n      {(rowClickEvent === \"view\" && !disabledAction.includes(\"view\")) ||\n      (enabledBtnViewCondition(pageAttr?.crudOpt, row) &&\n        !pageAttr?.crudOpt?.saveAsNewBtn &&\n        !pageAttr?.crudOpt?.data?.dynamicForm?.some(\n          (item) => item.type === \"selectTable\"\n        ) &&\n        !pageAttr?.onDashboard) ? (\n        <Fragment>\n          <Button.Ripple\n            outline={outline}\n            className={`btn-action-table ms-25 btn-icon ${\n              !outline ? \"rounded-circle \" : \"\"\n            }`}\n            color={!outline ? \"flat-secondary\" : \"secondary\"}\n            id={`btn-view-${row.id}`}\n            onClick={(e) => {\n              e.preventDefault()\n              handleEdit(row, null, \"view\")\n            }}\n          >\n            {!onlyText && <Eye size={16} />}\n            {(onlyText || withText) && (\n              <span className=\"align-middle ms-25\">{t(\"View\")}</span>\n            )}\n          </Button.Ripple>\n          {!pageAttr?.isViewOnRow && (\n            <UncontrolledTooltip placement=\"left\" target={`btn-view-${row.id}`}>\n              {t(\"View Detail\")}\n            </UncontrolledTooltip>\n          )}\n        </Fragment>\n      ) : null}\n\n      {ability.can(\"post\", sessionStorage.getItem(\"current_page_perm\")) &&\n      !disabledAction.includes(\"add-child\") &&\n      pageAttr?.crudOpt?.gridTheme === \"table_tree\" &&\n      !pageAttr?.onDashboard ? (\n        <Fragment>\n          <Button.Ripple\n            outline={outline}\n            id={`btn-add-child-${row.id}`}\n            className={`btn-action-table btn-icon ${\n              !outline ? \"rounded-circle \" : \"\"\n            }`}\n            color={!outline ? \"flat-secondary\" : \"secondary\"}\n            onClick={(e) => {\n              e.preventDefault()\n              handleEdit(null, {\n                [pageAttr?.crudOpt?.ganttParentIdField ?? \"parent_id\"]: row?.id\n              })\n            }}\n          >\n            {!onlyText && <CornerDownRight size={16} />}\n            {/* {!onlyText && renderIcon(\"fontAwesome:folder-tree\", \"\", 16)} */}\n            {/* {!onlyText && renderIcon(\"material:subdirectory_arrow_right\", \"\", 16)} */}\n            {(onlyText || withText) && (\n              <span className=\"align-middle ms-25\">{t(\"Add Child\")}</span>\n            )}\n          </Button.Ripple>\n          {!pageAttr?.isViewOnRow && (\n            <UncontrolledTooltip\n              placement=\"left\"\n              target={`btn-add-child-${row.id}`}\n            >\n              {t(\"Add Child\")}\n            </UncontrolledTooltip>\n          )}\n        </Fragment>\n      ) : null}\n\n      {/* {rowClickEvent === \"view\" || !disabledAction.includes(\"view\") ? (\n        <Fragment>\n          <Button.Ripple\n            outline={outline}\n            className={`btn-icon ms-1 ${!outline ? \"rounded-circle \" : \"\"}`}\n            color={!outline ? \"flat-info\" : \"info\"}\n            id={`btn-view-${row.id}`}\n            onClick={(e) => {\n              e.preventDefault()\n              handleEdit(row)\n            }}\n          >\n            {!onlyText && <Eye size={16} />}\n            {(onlyText || withText) && (\n              <span className=\"align-middle ms-25\">{t(\"View\")}</span>\n            )}\n          </Button.Ripple>\n          <UncontrolledTooltip placement=\"left\" target={`btn-view-${row.id}`}>\n            {t(\"View Detail\")}\n          </UncontrolledTooltip>\n        </Fragment>\n      ) : null} */}\n    </div>\n  )\n}\n\nexport default GlobalActionsTable\n","export const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener(\"load\", () => resolve(image))\n    image.addEventListener(\"error\", (error) => reject(error))\n    image.setAttribute(\"crossOrigin\", \"anonymous\") // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width, height, rotation) {\n  const rotRad = getRadianAngle(rotation)\n\n  return {\n    width:\n      Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height:\n      Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height)\n  }\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n */\nexport async function getCroppedImg(\n  imageSrc,\n  pixelCrop,\n  rotation = 0,\n  flip = { horizontal: false, vertical: false },\n  asBlob = false,\n  asFile = false\n) {\n  // console.log(imageSrc)\n  // console.log(pixelCrop)\n  // console.log(asBlob)\n\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement(\"canvas\")\n  const ctx = canvas.getContext(\"2d\")\n\n  if (!ctx) {\n    return null\n  }\n\n  const rotRad = getRadianAngle(rotation)\n\n  // calculate bounding box of the rotated image\n  const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\n    image.width,\n    image.height,\n    rotation\n  )\n\n  // set canvas size to match the bounding box\n  canvas.width = bBoxWidth\n  canvas.height = bBoxHeight\n\n  // translate canvas context to a central location to allow rotating and flipping around the center\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2)\n  ctx.rotate(rotRad)\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1)\n  ctx.translate(-image.width / 2, -image.height / 2)\n\n  // draw rotated image\n  ctx.drawImage(image, 0, 0)\n\n  // croppedAreaPixels values are bounding box relative\n  // extract the cropped image using these values\n  const data = ctx.getImageData(\n    pixelCrop.x,\n    pixelCrop.y,\n    pixelCrop.width,\n    pixelCrop.height\n  )\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image at the top left corner\n  ctx.putImageData(data, 0, 0)\n\n  if (!asBlob) {\n    // As Base64 string\n    // return canvas.toDataURL(\"image/jpeg\")\n    return canvas.toDataURL(\"image/png\")\n  } else if (asFile) {\n    // As a blob\n    return new Promise((resolve, reject) => {\n      canvas.toBlob((file) => {\n        resolve(file)\n      }, \"image/png\")\n    })\n  } else {\n    // As a blob\n    return new Promise((resolve, reject) => {\n      canvas.toBlob((file) => {\n        resolve(URL.createObjectURL(file))\n      }, \"image/png\")\n    })\n  }\n}\n\nexport async function getRotatedImage(imageSrc, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement(\"canvas\")\n  const ctx = canvas.getContext(\"2d\")\n\n  const orientationChanged =\n    rotation === 90 || rotation === -90 || rotation === 270 || rotation === -270\n  if (orientationChanged) {\n    canvas.width = image.height\n    canvas.height = image.width\n  } else {\n    canvas.width = image.width\n    canvas.height = image.height\n  }\n\n  ctx.translate(canvas.width / 2, canvas.height / 2)\n  ctx.rotate((rotation * Math.PI) / 180)\n  ctx.drawImage(image, -image.width / 2, -image.height / 2)\n\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, \"image/png\")\n  })\n}\n"],"sourceRoot":""}