{"version":3,"sources":["views/apps/user/modal/index.js","@core/components/sidebar/index.js","views/apps/user/Sidebar.js","views/apps/user/Table.js","../../src/mounts.js","../../src/index.js","@core/components/input-password-toggle/index.js","shared/GlobalUnitDropdown.js"],"names":["withReactContent","Swal","ModalAddEdit","_ref","_selectedUser$phone","_store$data_employee$","_store$selectedUser","_store$selectedUser2","show","setShow","detailPage","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","unitOptionsSelected","setUnitOptionsSelected","_useState5","_useState6","idRole","setIdRole","_useState7","_useState8","employeeOptionsSelected","setEmployeeOptionsSelected","_useState9","_useState10","setFormEdited","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","users","storeUnit","units","storeRole","roles","colors","useContext","ThemeColors","_useState11","selectedUser","_useState12","setSelectedUser","_useForm","useForm","defaultValues","username","name","phone","reset","control","setError","handleSubmit","errors","formState","Loader","_jsxs","Fragment","children","_jsx","Spinner","CardText","className","useEffect","data","length","isLoading","getUnits","getData","data_employee","isLoading_employee","getDataEmployee","id_employee","filter","el","map","item","_item$LastName","value","label","concat","FirstName","LastName","id_role","Modal","isOpen","toggle","UILoader","blocking","isLoadingAddEdit","isLoadingDetail","loader","ModalHeader","ModalBody","Form","onSubmit","_selectedUser$phone2","unitOptionsSelect","member_of","formEdited","JSON","stringify","countChanges","Object","values","every","field","updateUser","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getUser","error","payload","danger","key","_data$key","type","icon","Row","Col","md","xs","Label","for","Controller","defaultValue","render","_ref2","Input","_objectSpread","placeholder","invalid","_ref3","disabled","email","_ref4","Select","theme","selectThemeColors","onChange","options","classnames","classNamePrefix","isClearable","_item$LastName2","e","Array","isArray","x","_item$LastName3","closeMenuOnSelect","isMulti","Button","outline","onClick","Sidebar","props","_classnames3","open","size","title","width","closeBtn","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","_objectWithoutProperties","_excluded","renderCloseBtn","X","_defineProperty","modalClassName","undefined","String","close","tag","PerfectScrollbar","wheelPropagation","password","SidebarNewUsers","setData","idUnit","setIdUnit","setValue","selectedUnit","onClosed","checkIsValid","addUser","avatar","status","message","error_reason","rules","required","pattern","FormText","minLength","maxLength","_ref5","InputPasswordToggle","_ref6","vaue","MySwal","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","ability","AbilityContext","downloadCSV","array","link","document","createElement","csv","result","keys","join","forEach","ctr","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","xl","htmlFor","target","UncontrolledDropdown","DropdownToggle","caret","Share","DropdownMenu","DropdownItem","Printer","FileText","Grid","File","Copy","can","sessionStorage","getItem","crudTitle","UsersList","_store$params$page","_store$params","_store$params$length","_store$params2","sort_dir","setSortDir","setSearchTerm","params","page","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","sidebarOpen","setSidebarOpen","_useState13","_useState14","currentRole","setCurrentRole","_useState15","_useState16","currentUnit","setCurrentUnit","_useState17","number","_useState18","currentStatus","setCurrentStatus","_useState19","_useState20","roleOptions","setRoleOptions","_useState21","_useState22","loading","setLoading","_useState23","_useState24","showModal","setShowModal","handleCloseModal","revivalBack","neutralizeBack","roleOptionss","unshift","getDataRole","search","filter_role","filter_status","filter_unit","statusObj","pending","active","inactive","renderClient","row","Avatar","img","height","initials","avatarColor","content","columns","sortable","minWidth","sortField","selector","cell","Link","to","role_name","roleObj","public","class","User","viewer","Eye","editor","Edit2","admin","Settings","super_user","Slack","Icon","renderRole","billing","Moment","joined_date","format","is_active","Badge","pill","MoreVertical","end","href","preventDefault","handleEdit","Archive","handleDelete","Trash2","tableColumns","useMemo","column","Skeleton","sx","bgcolor","dark","light","animation","statusOptions","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteUser","parseInt","Card","CardBody","GlobalUnitDropdown","parentChange","colMode","DataTable","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","sortDirection","sortIcon","ChevronDown","paginationComponent","count","Number","Math","ceil","total","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","fill","dataToRender","subHeaderComponent","val","currentTarget","mounts","getter","swal","getTitle","getHtmlContainer","getConfirmButton","getDenyButton","getCancelButton","getFooter","getCloseButton","getIcon","querySelector","getLoader","noop","ParentSwal","extractReactParams","reactParams","otherParams","mountKeys","mount","entries","includes","React__default","isValidElement","domElement","find","ReactDOM__default","__mountedDomElements","push","unrender","unmountComponentAtNode","_ParentSwal","_inherits","_class","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","mixinParams","_this","this","__params","assign","_extractReactParams","_extractReactParams2","superDidOpen","didOpen","superDidDestroy","didDestroy","_get","_getPrototypeOf","prototype","call","popup","_extractReactParams3","_extractReactParams4","args","index","argsToParams","forwardRef","ref","_classnames","hideIcon","showIcon","visible","iconSize","inputClassName","inputVisibility","setInputVisibility","InputGroup","InputGroupText","EyeOff","renderIcon","defaultProps","_store$data","_ref$colMode","_ref$colSize","colSize","_ref$initialValue","initialValue","_ref$colClassName","colClassName","getUserData","unitOptions","setUnitOptions","handleChange","dataDropdown","getOptionLabel","option","code"],"mappings":"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","file":"static/js/12.320203fb.chunk.js","sourcesContent":["import { useState, Fragment, useContext, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  CardBody,\r\n  Button,\r\n  Badge,\r\n  Modal,\r\n  Input,\r\n  Label,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport Moment from \"moment\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport classnames from \"classnames\"\r\n\r\nimport Swal from \"sweetalert2\"\r\nimport Select from \"react-select\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport { updateUser, getUser, getDataEmployee } from \"../store\"\r\nimport { getUnits } from \"../../unit/store\"\r\nimport { getData } from \"../../roles-permissions/store/role\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst ModalAddEdit = ({ show, setShow, detailPage }) => {\r\n  const [unitOptions, setUnitOptions] = useState([])\r\n  const [unitOptionsSelected, setUnitOptionsSelected] = useState([])\r\n  const [idRole, setIdRole] = useState(null)\r\n  const [employeeOptionsSelected, setEmployeeOptionsSelected] = useState([])\r\n  const [formEdited, setFormEdited] = useState(false)\r\n  const { t } = useTranslation()\r\n  // const [id, setId] = useState(null)\r\n  let { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.users)\r\n  const storeUnit = useSelector((state) => state.units)\r\n  const storeRole = useSelector((state) => state.roles)\r\n  const { colors } = useContext(ThemeColors)\r\n  const [selectedUser, setSelectedUser] = useState(store.selectedUser)\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: {\r\n      username: selectedUser?.username,\r\n      name: selectedUser?.name,\r\n      phone: selectedUser?.phone ?? \"\"\r\n    }\r\n  })\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1 text-white\">\r\n          {t(\"Please Wait\")}...\r\n        </CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const handleChangeUnit = (e) => {\r\n    // console.log(e)\r\n    setUnitOptionsSelected(Array.isArray(e) ? e.map((x) => x.value) : [])\r\n    // console.log(unitOptionsSelected)\r\n  }\r\n\r\n  const handleChangeEmployee = (e) => {\r\n    // console.log(e)\r\n    setEmployeeOptionsSelected(Array.isArray(e) ? e.map((x) => x.value) : [])\r\n    // console.log(unitOptionsSelected)\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    // console.log(data)\r\n\r\n    const unitOptionsSelect =\r\n      selectedUser.member_of !== null\r\n        ? selectedUser?.member_of.map((item) => ({\r\n            value: item.id,\r\n            label: item.name\r\n          }))\r\n        : []\r\n\r\n    // console.log(unitOptionsSelect)\r\n    // console.log(unitOptionsSelected)\r\n    const formEdited =\r\n      selectedUser.name !== data.name ||\r\n      selectedUser.username !== data.username ||\r\n      (selectedUser.phone ?? \"\") !== data.phone ||\r\n      JSON.stringify(unitOptionsSelect) !==\r\n        JSON.stringify(unitOptionsSelected) ||\r\n      idRole !== selectedUser.id_role\r\n    setFormEdited(true)\r\n    return formEdited\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    if (countChanges(data)) {\r\n      // console.log(countChanges(data))\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field.length > 0 || field === \"\"\r\n        })\r\n      ) {\r\n        if (data.phone === \"\") {\r\n          delete data.phone\r\n        }\r\n\r\n        data[\"id\"] = id ?? selectedUser.id\r\n        data[\"id_role\"] = idRole\r\n        data[\"id_employee\"] = employeeOptionsSelected?.id\r\n        data[\"member_of\"] = unitOptionsSelected\r\n        dispatch(updateUser(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated Data\")}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getUser(id))\r\n            }\r\n\r\n            // setUnitOptionsSelected(\r\n            //   selectedUser.member_of.map((item) => ({\r\n            //     value: item.id,\r\n            //     label: item.name\r\n            //   }))\r\n            // )\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(JSON.stringify(res.payload), {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    reset({\r\n      username: selectedUser?.username,\r\n      name: selectedUser?.name\r\n    })\r\n  }\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    // const { id } = useParams()\r\n    // console.log(this.props.match.params.id)\r\n    // if (!id) {\r\n    //   id = idRow\r\n    // }\r\n    setSelectedUser(store.selectedUser)\r\n    if (storeUnit.data.length === 0 && !storeUnit.isLoading) {\r\n      dispatch(getUnits())\r\n      setSelectedUser(store.selectedUser)\r\n    }\r\n\r\n    if (storeRole?.data.length === 0 && !storeRole.isLoading) {\r\n      dispatch(getData())\r\n    }\r\n\r\n    if (store?.data_employee.length === 0 && !store.isLoading_employee) {\r\n      dispatch(\r\n        getDataEmployee({\r\n          length: 200\r\n        })\r\n      )\r\n      if (store.data_employee && selectedUser?.id_employee) {\r\n        setEmployeeOptionsSelected(\r\n          store.data_employee\r\n            .filter((el) => el.id === selectedUser?.id_employee)\r\n            .map((item) => ({\r\n              value: item.id,\r\n              label: `${item.FirstName} ${item?.LastName ?? \"\"}`\r\n            }))\r\n        )\r\n      }\r\n    }\r\n\r\n    // console.log(storeUnit.data)\r\n    // console.log(unitOptions)\r\n    // console.log(unitOptionsSelected)\r\n\r\n    setIdRole(selectedUser?.id_role)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => setShow(!show)}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={\r\n          (store.isLoadingAddEdit || store.isLoadingDetail) &&\r\n          !store.selectedUser\r\n        }\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => setShow(!show)}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h1 className=\"mb-1\">\r\n              {t(\"Edit\")} {t(\"User Information\")}\r\n            </h1>\r\n            <p>{t(\"Updating user details will receive a privacy audit.\")}</p>\r\n          </div>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"name\">\r\n                  {t(\"Full Name\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue=\"\"\r\n                  control={control}\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      id=\"name\"\r\n                      placeholder=\"John\"\r\n                      invalid={errors.name && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"username\">\r\n                  {t(\"Username\")}:\r\n                </Label>\r\n                <Controller\r\n                  defaultValue=\"\"\r\n                  control={control}\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      id=\"username\"\r\n                      placeholder=\"john.doe.007\"\r\n                      invalid={errors.username && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"email\">\r\n                  {t(\"Email\")}:\r\n                </Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  disabled\r\n                  defaultValue={selectedUser?.email}\r\n                  placeholder=\"example@domain.com\"\r\n                />\r\n              </Col>\r\n\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"phone\">\r\n                  {t(\"Contact\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue=\"\"\r\n                  control={control}\r\n                  id=\"phone\"\r\n                  name=\"phone\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      value={selectedUser?.phone || \"\"}\r\n                      id=\"phone\"\r\n                      placeholder=\"+62 813 940 10XX X\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"id_role\">\r\n                  {t(\"Role\")}\r\n                </Label>\r\n                <Select\r\n                  id=\"id_role\"\r\n                  theme={selectThemeColors}\r\n                  defaultValue={storeRole.data\r\n                    .filter((el) => el.id === selectedUser?.id_role)\r\n                    .map((item) => ({\r\n                      value: item.id,\r\n                      label: item.name\r\n                    }))}\r\n                  onChange={(data) => {\r\n                    setIdRole(data.value)\r\n                  }}\r\n                  options={storeRole.data.map((item) => ({\r\n                    value: item.id,\r\n                    label: item.name\r\n                  }))}\r\n                  className={classnames(\"react-select\", {\r\n                    \"is-invalid\": idRole === null\r\n                  })}\r\n                  classNamePrefix=\"select\"\r\n                />\r\n              </Col>\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"id_employee\">\r\n                  {t(\"Employee\")}\r\n                </Label>\r\n                <Select\r\n                  id=\"id_employee\"\r\n                  isClearable={true}\r\n                  isLoading={store.isLoading_employee}\r\n                  theme={selectThemeColors}\r\n                  defaultValue={\r\n                    store.data_employee\r\n                      .filter((el) => el.id === selectedUser?.id_employee)\r\n                      .map((item) => ({\r\n                        value: item.id,\r\n                        label: `${item.FirstName} ${item?.LastName ?? \"\"}`\r\n                      })) ?? \"\"\r\n                  }\r\n                  onChange={(data) => {\r\n                    handleChangeEmployee(data)\r\n                  }}\r\n                  options={store.data_employee.map((item) => ({\r\n                    value: item.id,\r\n                    label: `${item.FirstName} ${item?.LastName ?? \"\"}`\r\n                  }))}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"select\"\r\n                />\r\n              </Col>\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"member_of\">\r\n                  {t(\"Unit\")}\r\n                </Label>\r\n                <Select\r\n                  id=\"member_of\"\r\n                  isClearable={false}\r\n                  theme={selectThemeColors}\r\n                  closeMenuOnSelect={false}\r\n                  defaultValue={\r\n                    store.selectedUser?.member_of\r\n                      ? store.selectedUser?.member_of.map((item) => ({\r\n                          value: item.id,\r\n                          label: item.name\r\n                        }))\r\n                      : []\r\n                  }\r\n                  onChange={(data) => {\r\n                    handleChangeUnit(data)\r\n                  }}\r\n                  isMulti\r\n                  options={storeUnit.data\r\n                    .map((item) => ({\r\n                      value: item.id,\r\n                      label: item.name\r\n                    }))\r\n                    .filter((x) => x.value !== \"\")}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"select\"\r\n                />\r\n              </Col>\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","// ** Third Party Components\r\nimport { X } from \"react-feather\"\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\n\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\"\r\n\r\nconst Sidebar = (props) => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    size,\r\n    title,\r\n    width,\r\n    children,\r\n    closeBtn,\r\n    className,\r\n    toggleSidebar,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? (\r\n    closeBtn\r\n  ) : (\r\n    <X className=\"cursor-pointer\" size={15} onClick={toggleSidebar} />\r\n  )\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={toggleSidebar}\r\n      contentClassName={classnames(\"overflow-hidden\", {\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames(\"modal-slide-in\", {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        \"sidebar-lg\": size === \"lg\",\r\n        \"sidebar-sm\": size === \"sm\"\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + \"px\" },\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag=\"div\"\r\n      >\r\n        <h5 className=\"modal-title\">\r\n          <span className=\"align-middle\">{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody\r\n          className={classnames(\"flex-grow-1\", {\r\n            [bodyClassName]: bodyClassName\r\n          })}\r\n        >\r\n          {children}\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  open: Proptypes.bool.isRequired,\r\n  title: Proptypes.string.isRequired,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  size: Proptypes.oneOf([\"sm\", \"lg\"]),\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n// ** React Import\r\nimport { useState, useContext, useEffect } from \"react\"\r\nimport Sidebar from \"@components/sidebar\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport classnames from \"classnames\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport { Button, Label, FormText, Form, Input } from \"reactstrap\"\r\nimport store, { addUser } from \"@src/views/apps/user/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport toast from \"react-hot-toast\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport InputPasswordToggle from \"@components/input-password-toggle\"\r\nconst defaultValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n  phone: \"\",\r\n  member_of: \"\",\r\n  id_role: \"\",\r\n  name: \"\",\r\n  username: \"\"\r\n}\r\n\r\nconst checkIsValid = (data) => {\r\n  return Object.values(data).every((field) =>\r\n    typeof field === \"object\" || field !== \"member_of\"\r\n      ? field !== null && field !== \"\"\r\n      : field.length > 0\r\n  )\r\n}\r\n\r\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n\r\n  // ** Theme Colors\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  // ** States\r\n  const [data, setData] = useState({})\r\n  const [idRole, setIdRole] = useState(3)\r\n  const [idUnit, setIdUnit] = useState([])\r\n  const store = useSelector((state) => state.users)\r\n  const storeRole = useSelector((state) => state.roles)\r\n  const storeUnit = useSelector((state) => state.units)\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** Vars\r\n  const {\r\n    control,\r\n    setValue,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  // ** Function to handle form submit\r\n  const onSubmit = (data) => {\r\n    // console.log(data)\r\n    data[\"member_of\"] = idUnit !== null ? idUnit.map((item) => item.value) : []\r\n    data[\"id_role\"] = idRole !== null ? idRole : null\r\n    setData(data)\r\n    // console.log(data)\r\n    if (checkIsValid(data)) {\r\n      dispatch(\r\n        addUser({\r\n          id_role: data?.id_role,\r\n          avatar: \"\",\r\n          status: 1,\r\n          email: data.email,\r\n          member_of: data?.member_of,\r\n          phone: data.phone,\r\n          name: data.name,\r\n          username: data.username,\r\n          password: data.password\r\n        })\r\n      ).then((res) => {\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          toggleSidebar()\r\n          toast.success(`${t(\"Successfully Create Data\")}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          // console.log(store.errorAddEdit)\r\n          let message = \"\"\r\n          if (res.payload.errors) {\r\n            message = Object.values(res.payload.errors)\r\n          } else if (res.payload.error_reason) {\r\n            message = res.payload.message\r\n          }\r\n          toast.error(`${t(message)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key].length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSidebarClosed = () => {\r\n    for (const key in defaultValues) {\r\n      setValue(key, \"\")\r\n    }\r\n    // setRole(null)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const selectedUnit = storeUnit.data.map((item) => ({\r\n      value: item.id,\r\n      label: item.name\r\n    }))\r\n    // console.log(selectedUnit[0])\r\n    setIdUnit([selectedUnit[0]])\r\n  }, [dispatch, storeUnit.data.length])\r\n\r\n  return (\r\n    <Sidebar\r\n      size=\"lg\"\r\n      open={open}\r\n      title={t(\"New User\")}\r\n      headerClassName=\"mb-1\"\r\n      contentClassName=\"pt-0\"\r\n      toggleSidebar={toggleSidebar}\r\n      onClosed={handleSidebarClosed}\r\n    >\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"mb-1\">\r\n          <Label className=\"form-label\" for=\"name\">\r\n            {t(\"Full Name\")}\r\n            <span className=\"text-danger\">*</span>\r\n          </Label>\r\n          <Controller\r\n            defaultValue=\"\"\r\n            control={control}\r\n            rules={{\r\n              required: true,\r\n              pattern: {\r\n                value: /^[a-zA-Z\\s]*$/,\r\n                message: t(\"Invalid name, you can only use letters\")\r\n              }\r\n            }}\r\n            id=\"name\"\r\n            name=\"name\"\r\n            render={({ field }) => (\r\n              <Input\r\n                {...field}\r\n                id=\"name\"\r\n                placeholder=\"John\"\r\n                invalid={errors.name && true}\r\n              />\r\n            )}\r\n          />\r\n          {errors.name && (\r\n            <FormText color=\"danger\">{t(errors.name.message)}</FormText>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mb-1\">\r\n          <Label className=\"form-label\" for=\"email\">\r\n            {t(\"Email\")} <span className=\"text-danger\">*</span>\r\n          </Label>\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: t(\"You need to specify a valid email address\")\r\n              },\r\n              pattern: {\r\n                value: /^\\S+@\\S+$/i,\r\n                message: t(\"Not valid email adreess.\")\r\n              }\r\n            }}\r\n            render={({ field }) => (\r\n              <Input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"john.doe@example.com\"\r\n                invalid={errors.email && true}\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n          <FormText color=\"muted\">\r\n            {t(\"You can use letters, numbers & periods\")}\r\n          </FormText>\r\n        </div>\r\n\r\n        <div className=\"mb-1\">\r\n          <Label className=\"form-label\" for=\"username\">\r\n            {t(\"Username\")}\r\n            <span className=\"text-danger\">*</span>\r\n          </Label>\r\n          <Controller\r\n            defaultValue=\"\"\r\n            control={control}\r\n            rules={{\r\n              required: true,\r\n              minLength: {\r\n                value: 4,\r\n                message: t(\"minimum number of character is 4\")\r\n              },\r\n              maxLength: {\r\n                value: 15,\r\n                message: t(\"maximum number of character is 15\")\r\n              },\r\n              pattern: {\r\n                value:\r\n                  /^[a-zA-Z0-9]+([a-zA-Z0-9](_|-| )[a-zA-Z0-9])*[a-zA-Z0-9]+$/,\r\n                message: t(\r\n                  \"You can use letters and numbers without white space\"\r\n                )\r\n              }\r\n            }}\r\n            id=\"username\"\r\n            name=\"username\"\r\n            render={({ field }) => (\r\n              <Input\r\n                {...field}\r\n                id=\"username\"\r\n                placeholder=\"john.doe.007\"\r\n                invalid={errors.username && true}\r\n              />\r\n            )}\r\n          />\r\n          {errors.username && (\r\n            <FormText color=\"danger\">{t(errors.username.message)}</FormText>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mb-1\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <Label className=\"form-label\" for=\"login-password\">\r\n              {t(\"Password\")} <span className=\"text-danger\">*</span>\r\n            </Label>\r\n          </div>\r\n          <Controller\r\n            defaultValue=\"\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            control={control}\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: t(\"Password is required\")\r\n              },\r\n              minLength: {\r\n                value: 8,\r\n                message: t(\"Password must have at least 8 characters\")\r\n              }\r\n            }}\r\n            render={({ field }) => (\r\n              <InputPasswordToggle\r\n                className=\"input-group-merge\"\r\n                invalid={errors.password && true}\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n          {errors.password && (\r\n            <FormText color=\"danger\">{t(errors.password.message)}</FormText>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mb-1\">\r\n          <Label className=\"form-label\" for=\"phone\">\r\n            {t(\"Mobile Phone Number\")}\r\n          </Label>\r\n          <Controller\r\n            defaultValue=\"\"\r\n            control={control}\r\n            rules={{\r\n              required: false,\r\n              pattern: {\r\n                value: /^[0-9+-]+$/,\r\n                message: \"This is not a valid mobile phone, try again!\"\r\n              },\r\n              minLength: {\r\n                value: 6,\r\n                message: \"This number is too short.\"\r\n              },\r\n              maxLength: {\r\n                value: 14,\r\n                message: \"...And now it's too long.\"\r\n              }\r\n            }}\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            render={({ field }) => (\r\n              <Input {...field} id=\"phone\" placeholder=\"+62 813 940 10XX X\" />\r\n            )}\r\n          />\r\n          {errors.phone && (\r\n            <FormText color=\"danger\">{t(errors.phone.message)}</FormText>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-1\">\r\n          <Label className=\"form-label\" for=\"id_unit\">\r\n            {t(\"Unit\")}\r\n          </Label>\r\n          <Select\r\n            id=\"id_unit\"\r\n            isClearable={false}\r\n            theme={selectThemeColors}\r\n            closeMenuOnSelect={false}\r\n            // defaultValue={null}\r\n            onChange={(data) => {\r\n              setIdUnit(data)\r\n            }}\r\n            defaultValue={\r\n              storeUnit.data.map((item) => ({\r\n                value: item.id,\r\n                label: item.name\r\n              }))[0]\r\n            }\r\n            isMulti\r\n            options={storeUnit.data.map((item) => ({\r\n              value: item.id,\r\n              label: item.name\r\n            }))}\r\n            className=\"react-select\"\r\n            classNamePrefix=\"select\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-1\">\r\n          <Label for=\"role-select\">{t(\"Role\")}</Label>\r\n          <Select\r\n            id=\"id_role\"\r\n            isClearable={false}\r\n            options={storeRole.data.map((item) => ({\r\n              value: item.id,\r\n              label: item.name\r\n            }))}\r\n            defaultValue={{\r\n              label: \"editor\",\r\n              vaue: 3\r\n            }}\r\n            classNamePrefix=\"select\"\r\n            className={classnames(\"react-select\", {\r\n              \"is-invalid\": idRole === null\r\n            })}\r\n            theme={selectThemeColors}\r\n            onChange={(data) => {\r\n              // console.log(data.value)\r\n              setIdRole(data.value)\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n          {t(\"Submit\")}\r\n        </Button>\r\n        <Button type=\"reset\" color=\"secondary\" outline onClick={toggleSidebar}>\r\n          {t(\"Cancel\")}\r\n        </Button>\r\n      </Form>\r\n    </Sidebar>\r\n  )\r\n}\r\n\r\nexport default SidebarNewUsers\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\n\r\nimport { Fragment, useState, useEffect, useContext, useMemo } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport Sidebar from \"@src/views/apps/user/Sidebar\"\r\nimport ModalAddEdit from \"@src/views/apps/user/modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport Avatar from \"@components/avatar\"\r\nimport { getData, getUser, deleteUser } from \"@src/views/apps/user/store\"\r\nimport { getData as getDataRole } from \"@src/views/apps/roles-permissions/store/role\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Select from \"react-select\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy,\r\n  Slack,\r\n  User,\r\n  Settings,\r\n  Database,\r\n  Edit2,\r\n  MoreVertical,\r\n  Trash2,\r\n  Archive,\r\n  Eye\r\n} from \"react-feather\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport GlobalUnitDropdown from \"@src/shared/GlobalUnitDropdown\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Badge,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Moment from \"moment\"\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = \",\"\r\n    const lineDelimiter = \"\\n\"\r\n    const keys = Object.keys(store.data[0])\r\n\r\n    result = \"\"\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach((item) => {\r\n      let ctr = 0\r\n      keys.forEach((key) => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\")\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = \"export.csv\"\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv))\r\n    link.setAttribute(\"download\", filename)\r\n    link.click()\r\n  }\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"6\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">{t(\"Export\")}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Print</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() => downloadCSV(store.data)}\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            {ability.can(\r\n              \"post\",\r\n              sessionStorage.getItem(\"current_page_perm\")\r\n            ) ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n              >\r\n                {t(\"Add New\")} {t(store.crudTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.users)\r\n  const storeUnit = useSelector((state) => state.units)\r\n  const storeRole = useSelector((state) => state.roles)\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n  // ** Theme Colors\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  // ** States\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(store.params?.page ?? 1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(store.params?.length ?? 10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({\r\n    value: \"\",\r\n    label: `${t(\"Select\")} ${t(\"Role\")}`\r\n  })\r\n  const [currentUnit, setCurrentUnit] = useState({\r\n    value: \"\",\r\n    label: `${t(\"Select\")} ${t(\"Unit\")}`\r\n  })\r\n  const [currentStatus, setCurrentStatus] = useState({\r\n    value: \"\",\r\n    label: `${t(\"Select\")} Status`,\r\n    number: 0\r\n  })\r\n  const [roleOptions, setRoleOptions] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  // ** Function to toggle sidebar\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    // console.log(store.params)\r\n    if (storeRole?.data.length === 0 && !storeRole.isLoading) {\r\n      dispatch(getDataRole()).then((x) => {\r\n        if (x.data) {\r\n          const roleOptionss = x.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: item.name\r\n          }))\r\n          roleOptionss.unshift({\r\n            value: \"\",\r\n            label: `${t(\"Select\")} ${t(\"Role\")}`\r\n          })\r\n          setRoleOptions(roleOptionss)\r\n        }\r\n      })\r\n    } else {\r\n      const roleOptionss = storeRole.data.map((item) => ({\r\n        value: item.id,\r\n        label: item.name\r\n      }))\r\n      roleOptionss.unshift({\r\n        value: \"\",\r\n        label: `${t(\"Select\")} ${t(\"Role\")}`\r\n      })\r\n      setRoleOptions(roleOptionss)\r\n    }\r\n\r\n    if (store.data.length === 0 && !store.isLoading) {\r\n      dispatch(\r\n        getData({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage,\r\n          filter_role: currentRole.value,\r\n          filter_status: currentStatus.value,\r\n          filter_unit: currentUnit.value\r\n        })\r\n      )\r\n    }\r\n  }, [\r\n    dispatch,\r\n    store.data.length,\r\n    storeUnit.data.length,\r\n    storeRole.data.length,\r\n    sort_dir,\r\n    sort,\r\n    currentPage\r\n  ])\r\n\r\n  const statusObj = {\r\n    pending: \"light-warning\",\r\n    active: \"light-success\",\r\n    inactive: \"light-secondary\"\r\n  }\r\n\r\n  // ** Renders Client Columns\r\n  const renderClient = (row) => {\r\n    if (row.avatar) {\r\n      return (\r\n        <Avatar className=\"me-1\" img={row.avatar} width=\"32\" height=\"32\" />\r\n      )\r\n    } else {\r\n      return (\r\n        <Avatar\r\n          initials\r\n          className=\"me-1\"\r\n          color={row.avatarColor || \"light-primary\"}\r\n          content={row.name || \"John Doe\"}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  // ** Renders Role Columns\r\n  const renderRole = (row) => {\r\n    const roleObj = {\r\n      public: {\r\n        class: \"text-primary\",\r\n        icon: User\r\n      },\r\n      viewer: {\r\n        class: \"text-success\",\r\n        icon: Eye\r\n      },\r\n      editor: {\r\n        class: \"text-info\",\r\n        icon: Edit2\r\n      },\r\n      admin: {\r\n        class: \"text-warning\",\r\n        icon: Settings\r\n      },\r\n      super_user: {\r\n        class: \"text-danger\",\r\n        icon: Slack\r\n      }\r\n    }\r\n\r\n    const Icon = roleObj[row.role_name] ? roleObj[row.role_name].icon : Edit2\r\n\r\n    return (\r\n      <span className=\"text-truncate text-capitalize align-middle\">\r\n        <Icon\r\n          size={18}\r\n          className={`${\r\n            roleObj[row.role_name] ? roleObj[row.role_name].class : \"\"\r\n          } me-50`}\r\n        />\r\n        {row.role_name}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: t(\"User\"),\r\n      sortable: true,\r\n      minWidth: \"400px\",\r\n      sortField: \"name\",\r\n      selector: (row) => row.name,\r\n      cell: (row) => (\r\n        <div className=\"d-flex justify-content-left align-items-center\">\r\n          {renderClient(row)}\r\n          <div className=\"d-flex flex-column\">\r\n            <Link\r\n              to={`/apps/user/view/${row.id}`}\r\n              className=\"user_name text-truncate text-body\"\r\n              // onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <span className=\"fw-bolder\">{row.name}</span>\r\n            </Link>\r\n            <small className=\"text-truncate text-muted mb-0\">{row.email}</small>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: t(\"Role\"),\r\n      sortable: true,\r\n      minWidth: \"200px\",\r\n      sortField: \"role_name\",\r\n      selector: (row) => row.role_name,\r\n      cell: (row) => renderRole(row)\r\n    },\r\n    // {\r\n    //   name: \"Unit\",\r\n    //   minWidth: \"138px\",\r\n    //   sortable: true,\r\n    //   sortField: \"unit\",\r\n    //   selector: (row) => row.currentPlan,\r\n    //   cell: (row) => <span className=\"text-capitalize\">{row.currentPlan}</span>\r\n    // },\r\n    {\r\n      name: t(\"Joined Date\"),\r\n      minWidth: \"230px\",\r\n      sortable: true,\r\n      sortField: \"joined_date\",\r\n      selector: (row) => row.billing,\r\n      cell: (row) => (\r\n        <span className=\"text-capitalize\">\r\n          {Moment(row.joined_date).format(\"DD MMM YYYY\")}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: t(\"Status\"),\r\n      minWidth: \"120px\",\r\n      sortable: true,\r\n      sortField: \"status\",\r\n      selector: (row) => row.is_active,\r\n      cell: (row) => (\r\n        <Badge\r\n          className=\"text-capitalize\"\r\n          color={statusObj[row.is_active ? \"active\" : \"inactive\"]}\r\n          pill\r\n        >\r\n          {row.is_active ? t(\"active\") : t(\"inactive\")}\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      name: t(\"Actions\"),\r\n      width: \"130px\",\r\n      cell: (row) => (\r\n        <div className=\"column-action text-center\">\r\n          <UncontrolledDropdown>\r\n            <DropdownToggle tag=\"span\">\r\n              <MoreVertical size={14} className=\"cursor-pointer\" />\r\n            </DropdownToggle>\r\n            <DropdownMenu end>\r\n              <DropdownItem\r\n                tag={Link}\r\n                className=\"w-100\"\r\n                to={`/apps/user/view/${row.id}`}\r\n                onClick={() => store.dispatch(getUser(row.id))}\r\n              >\r\n                <FileText size={14} className=\"me-50\" />\r\n                <span className=\"align-middle\">{t(\"Details\")}</span>\r\n              </DropdownItem>\r\n\r\n              {ability.can(\r\n                \"update\",\r\n                sessionStorage.getItem(\"current_page_perm\")\r\n              ) && (\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  href=\"/\"\r\n                  className=\"w-100\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    handleEdit(row.id)\r\n                  }}\r\n                >\r\n                  <Archive size={14} className=\"me-50\" />\r\n                  <span className=\"align-middle\">{t(\"Edit\")}</span>\r\n                </DropdownItem>\r\n              )}\r\n\r\n              {ability.can(\r\n                \"delete\",\r\n                sessionStorage.getItem(\"current_page_perm\")\r\n              ) && (\r\n                <DropdownItem\r\n                  tag=\"a\"\r\n                  href=\"/\"\r\n                  className=\"w-100\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    handleDelete(row.id)\r\n                  }}\r\n                >\r\n                  <Trash2 size={14} className=\"me-50\" />\r\n                  <span className=\"align-middle\">{t(\"Delete\")}</span>\r\n                </DropdownItem>\r\n              )}\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: column.name,\r\n            sortable: false,\r\n            minWidth: column.minWidth,\r\n            width: column.width,\r\n            cell: (row) => (\r\n              <Skeleton\r\n                sx={{ bgcolor: colors.dark.light }}\r\n                animation=\"wave\"\r\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\r\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\r\n                height={40}\r\n              />\r\n            )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: column.name,\r\n            sortable: column.sortable,\r\n            minWidth: column.minWidth,\r\n            width: column.width,\r\n            sortField: column.sortField,\r\n            selector: column.selector,\r\n            cell: column.cell\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const statusOptions = [\r\n    { value: \"\", label: `${t(\"Select\")} Status`, number: 0 },\r\n    { value: \"pending\", label: `${t(\"Pending\")}`, number: 1 },\r\n    { value: \"active\", label: `${t(\"Active\")}`, number: 2 },\r\n    { value: \"inactive\", label: `${t(\"Inactive\")}`, number: 3 }\r\n  ]\r\n\r\n  const handleChangeUnit = (value) => {\r\n    setCurrentUnit(value)\r\n    dispatch(\r\n      getData({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        filter_role: currentRole.value,\r\n        filter_unit: value.value,\r\n        filter_status: currentStatus.value\r\n      })\r\n    )\r\n  }\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1\">{t(\"Please Wait\")}...</CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    return MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(\"user\")}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete User!\")}`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    }).then(function (result) {\r\n      if (result.value) {\r\n        setLoading(true)\r\n        dispatch(deleteUser(id)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setLoading(false)\r\n            toast.success(`${t(\"Successfully deleted Data\")}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            setLoading(false)\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleEdit = (id) => {\r\n    setLoading(true)\r\n    if (\r\n      !store.selectedUser ||\r\n      (store.selectedUser?.id !== parseInt(id) && !store.isLoadingDetail)\r\n    ) {\r\n      dispatch(getUser(id)).then((res) => {\r\n        setShowModal(true)\r\n        setLoading(false)\r\n      })\r\n    } else {\r\n      setLoading(false)\r\n      setShowModal(true)\r\n    }\r\n  }\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getData({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1,\r\n        filter_role: currentRole.value,\r\n        filter_status: currentStatus.value,\r\n        filter_unit: currentUnit.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getData({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage,\r\n        filter_role: currentRole.value,\r\n        filter_unit: currentUnit.value,\r\n        filter_status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search searchuery change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        sort_dir,\r\n        search: val,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        filter_role: currentRole.value,\r\n        filter_status: currentStatus.value,\r\n        filter_unit: currentUnit.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        filter_role: currentRole.value,\r\n        filter_status: currentStatus.value,\r\n        filter_unit: currentUnit.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      filter_role: currentRole.value,\r\n      filter_unit: currentUnit.value,\r\n      filter_status: currentStatus.value,\r\n      search: searchTerm\r\n    }\r\n    // console.log(tableData)\r\n    // console.log(tableColumns)\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card>\r\n          {/* <CardHeader>\r\n            <CardTitle tag=\"h4\">{t(\"Filters\")}</CardTitle>\r\n          </CardHeader> */}\r\n          <CardBody>\r\n            <Row>\r\n              <Col>\r\n                <Label for=\"role-select\">{t(\"Role\")}</Label>\r\n                <Select\r\n                  isClearable={false}\r\n                  value={currentRole}\r\n                  options={roleOptions}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"select\"\r\n                  theme={selectThemeColors}\r\n                  onChange={(data) => {\r\n                    setCurrentRole(data)\r\n                    dispatch(\r\n                      getData({\r\n                        sort_dir,\r\n                        sort,\r\n                        search: searchTerm,\r\n                        filter_role: data.value,\r\n                        page: currentPage,\r\n                        length: rowsPerPage,\r\n                        filter_status: currentStatus.value,\r\n                        filter_unit: currentUnit.value\r\n                      })\r\n                    )\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <Label for=\"status-select\">Status</Label>\r\n                <Select\r\n                  theme={selectThemeColors}\r\n                  isClearable={false}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"select\"\r\n                  options={statusOptions}\r\n                  value={currentStatus}\r\n                  onChange={(data) => {\r\n                    setCurrentStatus(data)\r\n                    dispatch(\r\n                      getData({\r\n                        sort_dir,\r\n                        sort,\r\n                        search: searchTerm,\r\n                        page: currentPage,\r\n                        filter_status: data.value,\r\n                        length: rowsPerPage,\r\n                        filter_role: currentRole.value,\r\n                        filter_unit: currentUnit.value\r\n                      })\r\n                    )\r\n                  }}\r\n                />\r\n              </Col>\r\n              <GlobalUnitDropdown\r\n                parentChange={handleChangeUnit}\r\n                colMode={true}\r\n              />\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              pagination\r\n              responsive\r\n              paginationServer\r\n              style={{ \"min-height\": \"400px\" }}\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              paginationComponent={CustomPagination}\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n      </UILoader>\r\n\r\n      {store.selectedUser !== null && (\r\n        <ModalAddEdit\r\n          show={showModal}\r\n          setShow={setShowModal}\r\n          detailPage={false}\r\n          // idRow={store.selectedUser.id}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent (ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams (params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map(mount => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n  function render (swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find(mount => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      ReactDOM.render(value, domElement)\n      swal.__mountedDomElements.push(domElement)\n    })\n  }\n\n  function unrender (swal) {\n    swal.__mountedDomElements.forEach(domElement => {\n      ReactDOM.unmountComponentAtNode(domElement)\n    })\n    swal.__mountedDomElements = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params, mixinParams) {\n      this.__mountedDomElements = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams)\n            superDidOpen(popup)\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        }),\n      )\n    }\n\n    update (params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n","// ** React Imports\r\nimport { Fragment, useState, forwardRef } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, EyeOff } from \"react-feather\"\r\n\r\n// ** Reactstrap Imports\r\nimport { InputGroup, Input, InputGroupText, Label } from \"reactstrap\"\r\n\r\nconst InputPasswordToggle = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    invalid,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? (\r\n        <Label className=\"form-label\" for={htmlFor}>\r\n          {label}\r\n        </Label>\r\n      ) : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className,\r\n          \"is-invalid\": invalid\r\n        })}\r\n      >\r\n        <Input\r\n          ref={ref}\r\n          invalid={invalid}\r\n          type={inputVisibility === false ? \"password\" : \"text\"}\r\n          placeholder={placeholder ? placeholder : \"············\"}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor,\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupText\r\n          className=\"cursor-pointer\"\r\n          onClick={() => setInputVisibility(!inputVisibility)}\r\n        >\r\n          {renderIcon()}\r\n        </InputGroupText>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n})\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  invalid: PropTypes.bool,\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props[\"htmlFor\"] === \"undefined\") {\r\n      throw new Error(\"htmlFor prop is required when label prop is present\")\r\n    }\r\n  },\r\n  htmlFor(props, propName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props[\"label\"] === \"undefined\") {\r\n      throw new Error(\"label prop is required when htmlFor prop is present\")\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect, useCallback, useMemo } from \"react\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Form\r\n} from \"reactstrap\"\r\n\r\nimport Select from \"react-select\"\r\n\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\n// ** Utils\r\nimport { selectThemeColors, getUserData } from \"@utils\"\r\n// ** Store & Actions\r\nimport {\r\n  getUnits,\r\n  setUnitSelected,\r\n  setUnitSelectedDropdown\r\n} from \"../views/apps/unit/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\n\r\nconst GlobalUnitDropdown = ({\r\n  parentChange,\r\n  colMode = false,\r\n  colSize = 6,\r\n  initialValue = true,\r\n  colClassName = \"\"\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const userData = getUserData()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.units)\r\n  const [unitOptions, setUnitOptions] = useState([])\r\n  const [currentUnit, setCurrentUnit] = useState(\r\n    initialValue\r\n      ? {\r\n          value: \"\",\r\n          label: `${t(\"Select\")} ${t(\"Unit\")}`\r\n        }\r\n      : {}\r\n  )\r\n\r\n  const handleChange = (data, parentChange) => {\r\n    setCurrentUnit(data)\r\n    // localStorage.setItem(\"last_id_unit\", data.value)\r\n    if (typeof parentChange === \"function\") {\r\n      parentChange(data)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if (store.data.length === 0 && !store.isLoading) {\r\n    //   dispatch(getUnits())\r\n    // }\r\n    // console.log(userData.member_of)\r\n    const unitOptions = initialValue\r\n      ? store.dataDropdown\r\n      : store.dataDropdown.filter((item) => item.value !== \"\")\r\n\r\n    setUnitOptions(unitOptions)\r\n    setCurrentUnit(initialValue ? store.selectedUnit : unitOptions[0])\r\n  }, [dispatch, store.dataDropdown])\r\n\r\n  return store.data?.length > 1 ? (\r\n    !colMode ? (\r\n      <Card>\r\n        {/* <CardHeader>\r\n        <CardTitle tag=\"h4\">{t(\"Filters\")}</CardTitle>\r\n      </CardHeader> */}\r\n        <CardBody>\r\n          <Row>\r\n            <Label className=\"\" for=\"plan-select\">\r\n              {t(\"Unit\")}\r\n            </Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              isClearable={false}\r\n              className=\"react-select\"\r\n              classNamePrefix=\"select\"\r\n              options={unitOptions}\r\n              value={currentUnit}\r\n              onChange={(e) => {\r\n                handleChange(e, parentChange)\r\n              }}\r\n              getOptionLabel={(option) =>\r\n                option.code\r\n                  ? `${option.code} ${option.label}`\r\n                  : `${option.label}`\r\n              }\r\n            />\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    ) : (\r\n      <Col md={`${colSize}`} className={colClassName}>\r\n        <Label className=\"\" for=\"plan-select\">\r\n          {t(\"Unit\")}\r\n        </Label>\r\n        <Select\r\n          theme={selectThemeColors}\r\n          isClearable={false}\r\n          className=\"react-select\"\r\n          classNamePrefix=\"select\"\r\n          options={unitOptions}\r\n          value={currentUnit}\r\n          onChange={(e) => {\r\n            handleChange(e, parentChange)\r\n          }}\r\n          getOptionLabel={(option) =>\r\n            option.code ? `${option.code} ${option.label}` : `${option.label}`\r\n          }\r\n          // styles={{ menu: (base) => ({ ...base, base.children fontWeight: \"bold\" }) }}\r\n        />\r\n      </Col>\r\n    )\r\n  ) : null\r\n}\r\n\r\nexport default GlobalUnitDropdown\r\n"],"sourceRoot":""}