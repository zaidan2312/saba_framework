{"version":3,"sources":["views/apps/unit/modal/index.js","views/apps/unit/index.js","views/apps/unit/Table.js","views/apps/unit/Tree.js","@core/components/widgets/stats/StatsHorizontal.js","@core/components/breadcrumbs/index.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"],"names":["ModalAddEdit","_ref","_store$selectedData$n","_store$selectedData","_store$selectedData$c","_store$selectedData2","show","setShow","detailPage","formState","setFormState","_ref$currentData","currentData","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","loadingText","setLoadingText","_useForm","useForm","control","setError","handleSubmit","errors","Loader","_jsxs","Fragment","children","_jsx","Spinner","CardText","className","sortedObject","unordered","Object","keys","sort","reduce","obj","key","handleReset","resetSelectedData","Modal","isOpen","toggle","UILoader","blocking","isLoadingAddEdit","isLoadingDetail","loader","ModalHeader","ModalBody","pageTitle","Form","onSubmit","data","storeData","_objectSpread","selectedData","JSON","stringify","countChanges","values","every","field","concat","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","_res$payload","error","payload","message","danger","_data$key","length","type","icon","depth","postData","console","log","_data$key2","Row","Col","md","xs","Label","for","Controller","defaultValue","name","render","_ref2","Input","invalid","code","_ref3","Button","outline","onClick","List","_store$dataSummary2","_store$dataSummary3","searchTerm","setSearchTerm","useEffect","_store$dataSummary","getApiSummaryData","dataSummary","isLoadingSummary","getAlwaysGrid","getSummaryData","_Fragment","Breadcrumbs","title","htmlFor","value","onChange","e","event","target","map","item","index","_item$count_format","StatsHorizontal","statTitle","Icon","baseClassName","fontSize","renderStats","Skeleton","sx","bgcolor","animation","height","width","count_format","count","Tree","searchString","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","selectedRow","handleDeleteSelected","ability","AbilityContext","userData","invoices","getUserData","xl","can","sessionStorage","getItem","UncontrolledDropdown","DropdownToggle","caret","Share","DropdownMenu","DropdownItem","getInvoice","rpt_name","output_type","dataYear","print","as_attachment","par_UNITKEY","par_SAMPLE","Printer","File","Grid","FileText","sort_dir","setSortDir","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","setSort","_useState9","_useState10","setRowsPerPage","_useState11","_useState12","selectedRows","setSelectedRows","_useState13","_useState14","toggleCleared","setToggleCleared","_useState15","_useState16","sidebarOpen","setSidebarOpen","_useState17","_useState18","loading","setLoading","_useState19","_useState20","_useState21","_useState22","showModal","setShowModal","_useState23","_useState24","handleEdit","rowData","detailFromGrid","setDataById","handleCloseModal","revivalBack","neutralizeBack","handleDelete","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","sent","deleteData","stop","_x","apply","arguments","_callee2","countSelectedCopy","_context2","a","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","columns","_toConsumableArray","dynamicColumns","column","columnName","sortField","fieldName","center","sortable","selector","row","cell","dataFormat","includes","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","GlobalActionsTable","tableColumns","useMemo","isLoading","dark","light","Card","DataTable","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","Number","Math","ceil","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","NoDataDisplay","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","ChevronDown","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","parseInt","currentTarget","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","undefined","dataNested","isLoadingNested","marginLeft","marginRight","marginTop","SortableTree","treeData","tree","setDataListNested","canDrag","searchMethod","node","searchQuery","toLowerCase","indexOf","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","_ref4","_node$attributes","_node$children","path","is_app_header","fontWeight","attributes","logo","src","buttons","Ripple","Plus","size","UncontrolledTooltip","placement","disableEdit","preventDefault","Edit2","disableDelete","Trash2","cardColor","stats","countTextColor","_ref$countTextStyle","countTextStyle","_ref$titleStyle","titleStyle","statsMargin","_ref$solidColor","solidColor","_ref$cardStyle","cardStyle","_ref$titleOnTop","titleOnTop","cardColorFix","inverse","CardBody","classnames","_defineProperty","BreadCrumbs","mb","subtitle","Breadcrumb","BreadcrumbItem","tag","Link","to","Wrapper","link","isLastItem","active","arrayLikeToArray","module","exports","arr","isArray","__esModule","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","defineProperty","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","i","source","forEach","getOwnPropertyDescriptors","defineProperties","objectWithoutPropertiesLoose","excluded","sourceSymbolKeys","prototype","propertyIsEnumerable","call","strings","raw","slice","freeze","sourceKeys"],"mappings":"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","file":"static/js/36.ae8576d6.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [tgl1, setTgl1] = useState(null)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(store.selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload?.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      data[\"depth\"] = currentData.depth + 1\r\n      data[\"parent_id\"] = currentData.id\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n            {formState !== \"edit\" ? (\r\n              <p>\r\n                Setelah menambahkan data {t(\"Unit\")} baru, maka pastikan logout\r\n                dulu akun anda.\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"name\">\r\n                  {t(\"Name\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.name ?? \"\"}\r\n                  control={control}\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.name ? \"form-control is-invalid\" : \"form-control\"\r\n                      }\r\n                      id=\"name\"\r\n                      invalid={errors.name && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Code\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.code ?? \"\"}\r\n                  control={control}\r\n                  id=\"code\"\r\n                  name=\"code\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.code ? \"form-control is-invalid\" : \"form-control\"\r\n                      }\r\n                      id=\"code\"\r\n                      invalid={errors.code && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Table from \"./Table\"\r\nimport { Row, Col, Input } from \"reactstrap\"\r\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\"\r\nimport { User, UserPlus, UserCheck, UserX } from \"react-feather\"\r\nimport Icon from \"@mui/material/Icon\"\r\nimport AddCardOutlinedIcon from \"@mui/icons-material/AddCardOutlined\"\r\nimport \"./style.scss\"\r\nimport Breadcrumbs from \"@components/breadcrumbs\"\r\nimport Tree from \"./Tree\"\r\nimport {\r\n  storeName,\r\n  getAlwaysGrid,\r\n  getApiSummaryData,\r\n  getSummaryData\r\n} from \"./store\"\r\nimport { Skeleton } from \"@mui/material\"\r\n\r\nconst List = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n  const handleFilter = (event) => {\r\n    // console.log(\"handleFilter\")\r\n    setSearchTerm(event)\r\n    // debounceFn(event)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      getApiSummaryData &&\r\n      (store.dataSummary?.length === 0 ||\r\n        (!store.isLoadingSummary && getAlwaysGrid))\r\n    ) {\r\n      dispatch(getSummaryData({}))\r\n    }\r\n  }, [dispatch, store.dataSummary?.length])\r\n\r\n  const colors = [\r\n    \"primary\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"secondary\"\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-header row\">\r\n        <Breadcrumbs\r\n          title={t(\"Instance & Corporate\")}\r\n          data={[{ title: t(\"App Setting\") }, { title: t(\"Instance\") }]}\r\n        />\r\n        <div className=\"content-header-right text-md-end col-md-3 col-12 d-md-block d-none\">\r\n          <div className=\"breadcrumb-right dropdown\">\r\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n              <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                {t(\"Search\")}:\r\n              </label>\r\n              <Input\r\n                id=\"search-invoice\"\r\n                className=\"ms-50 w-100\"\r\n                type=\"text\"\r\n                value={searchTerm}\r\n                onChange={(e) => handleFilter(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"content-header-right text-md-end col-md-3 col-12 d-md-block d-none\">\r\n        <div className=\"breadcrumb-right dropdown\"></div>\r\n      </div>\r\n      <div className=\"app-user-list\">\r\n        {getApiSummaryData && (\r\n          <Row>\r\n            {store.dataSummary?.map((item, index) => {\r\n              return (\r\n                <Col>\r\n                  <StatsHorizontal\r\n                    color={colors[index]}\r\n                    statTitle={`${t(item.title)}`}\r\n                    icon={\r\n                      item.icon ? (\r\n                        <Icon\r\n                          baseClassName=\"material-icons-outlined\"\r\n                          fontSize=\"20\"\r\n                        >\r\n                          {item.icon}\r\n                        </Icon>\r\n                      ) : (\r\n                        <Icon\r\n                          baseClassName=\"material-icons-outlined\"\r\n                          fontSize=\"20\"\r\n                        >\r\n                          lightbulb\r\n                        </Icon>\r\n                      )\r\n                    }\r\n                    renderStats={\r\n                      store.isLoadingSummary ? (\r\n                        <Skeleton\r\n                          sx={{ bgcolor: \"#eef2f8\" }}\r\n                          animation=\"wave\"\r\n                          height={25}\r\n                          width={40}\r\n                          className=\"fw-bolder mb-75\"\r\n                        />\r\n                      ) : (\r\n                        <h3 className=\"fw-bolder mb-75\">\r\n                          {item.count_format ?? item.count}\r\n                        </h3>\r\n                      )\r\n                    }\r\n                  />\r\n                </Col>\r\n              )\r\n            })}\r\n          </Row>\r\n        )}\r\n        <Tree searchString={searchTerm} />\r\n        {/* <Table /> */}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default List\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef\r\n} from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  dynamicColumns,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData\r\n} from \"./store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  CardText\r\n} from \"reactstrap\"\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Moment from \"moment\"\r\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\r\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">{t(\"Export\")}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        print: true,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"xls\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  // onClick={() => downloadCSV(store.data)}\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"csv\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n\r\n                {/* <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem> */}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            {ability.can(\r\n              \"post\",\r\n              sessionStorage.getItem(\"current_page_perm\")\r\n            ) ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = () => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n  }, [])\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderCell = (row, column) => {\r\n    const field = row[column.fieldName]\r\n    const dataFormat = column.dataFormat\r\n    if (dataFormat) {\r\n      if (dataFormat.includes(\":\")) {\r\n        const columnTypeFormat = dataFormat.split(\":\")\r\n        const columnType = columnTypeFormat[0]\r\n        const columnFormat = columnTypeFormat[1]\r\n        let columnFormated = row[column.fieldName]\r\n        if (columnType === \"date\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        if (columnType === \"datetime\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        return columnFormated\r\n      }\r\n    }\r\n    return row[column.fieldName]\r\n  }\r\n\r\n  const columns = [\r\n    ...dynamicColumns.map((column) => ({\r\n      name: column.columnName,\r\n      sortField: column.fieldName,\r\n      center: false,\r\n      sortable: true,\r\n      selector: (row) => row[column.fieldName],\r\n      cell: (row) => renderCell(row, column)\r\n    })),\r\n    {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <GlobalActionsTable\r\n          row={row}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) => (\r\n              <Skeleton\r\n                sx={{ bgcolor: colors.dark.light }}\r\n                animation=\"wave\"\r\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\r\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\r\n                height={40}\r\n              />\r\n            )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage\r\n        })\r\n      )\r\n    }\r\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport { Fragment, useState, useEffect, useContext } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  setDataList,\r\n  setDataListNested,\r\n  putData\r\n} from \"./store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Edit2, Trash2, Plus } from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport { Card, Button, UncontrolledTooltip, CardText } from \"reactstrap\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nconst MySwal = withReactContent(Swal)\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport Avatar from \"@components/avatar\"\r\n\r\nconst List = (searchString) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { t } = useTranslation()\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const ability = useContext(AbilityContext)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\r\n\r\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\r\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const toggleSidebar = (row = null) => {\r\n    // console.log(row.id)\r\n    setCurrentDataAdd(row)\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const handleChange = (tree) => {\r\n    // console.log(tree)\r\n    dispatch(setDataListNested(tree))\r\n  }\r\n\r\n  const eventCanDragNode = (args) => {\r\n    // console.log(args)\r\n    if (args.node.is_app_header) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const onMoveNode = ({\r\n    treeData,\r\n    node,\r\n    nextParentNode,\r\n    prevPath,\r\n    prevTreeIndex,\r\n    nextPath,\r\n    nextTreeIndex\r\n  }) => {\r\n    // console.log(nextParentNode)\r\n    const data = {\r\n      name: node.name,\r\n      id: node.id,\r\n      parent_id: nextParentNode.id\r\n    }\r\n    updateDataToApi(data, true)\r\n  }\r\n\r\n  const updateDataToApi = (data, notReload = false) => {\r\n    // console.log(data)\r\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\r\n    if (notReload) data[\"notReload\"] = true\r\n    const nameMsg = data.name\r\n    delete data[\"name\"]\r\n    dispatch(putData(data, notReload)).then((res) => {\r\n      // console.log(res)\r\n      if (res.meta.requestStatus === \"fulfilled\") {\r\n        toast.success(\r\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\r\n          {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          }\r\n        )\r\n      } else if (res.meta.requestStatus === \"rejected\") {\r\n        toast.error(res.payload.message, {\r\n          style: {\r\n            padding: \"16px\",\r\n            color: colors.danger.main,\r\n            border: `1px solid ${colors.danger.main}`\r\n          },\r\n          iconTheme: {\r\n            primary: colors.danger.main\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const customSearchMethod = ({ node, searchQuery }) => {\r\n    return (\r\n      searchQuery &&\r\n      node.name.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1\r\n    )\r\n  }\r\n\r\n  const selectPrevMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null\r\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\r\n        : searchFoundCount - 1\r\n    )\r\n\r\n  const selectNextMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\r\n    )\r\n\r\n  useEffect(() => {\r\n    // console.log(store)\r\n    if (\r\n      (store.dataNested.length === 0 && !store.isLoadingNested) ||\r\n      getAlwaysGrid\r\n    ) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(getDataList({}))\r\n    }\r\n  }, [dispatch, store.dataNested.length > 0])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={store.isLoadingNested} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <div\r\n              style={{\r\n                height: 1000,\r\n                marginLeft: 20,\r\n                marginRight: 20,\r\n                marginTop: 40\r\n              }}\r\n            >\r\n              <SortableTree\r\n                treeData={store.dataNested}\r\n                onChange={handleChange}\r\n                // onMoveNode={onMoveNode}\r\n                // canDrag={eventCanDragNode}\r\n                canDrag={false}\r\n                searchMethod={customSearchMethod}\r\n                searchQuery={searchString.searchString}\r\n                searchFocusOffset={searchFocusIndex}\r\n                searchFinishCallback={(matches) => {\r\n                  setSearchFoundCount(matches.length)\r\n                  setSearchFocusIndex(\r\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\r\n                  )\r\n                }}\r\n                // onlyExpandSearchedNodes\r\n                maxDepth={10}\r\n                generateNodeProps={({ node, path }) => ({\r\n                  style: {\r\n                    fontSize: node.is_app_header ? `16px` : \"14px\",\r\n                    fontWeight: node.is_app_header ? `bold` : \"normal\"\r\n                  },\r\n                  title: (\r\n                    <div className=\"d-flex justify-content-left align-items-center\">\r\n                      {\r\n                        node?.attributes?.logo && (\r\n                          <img\r\n                            className=\"me-1\"\r\n                            src={node.attributes.logo}\r\n                            // width=\"60\"\r\n                            height=\"25\"\r\n                          />\r\n                        )\r\n                        // : (\r\n                        //   <Avatar\r\n                        //     initials\r\n                        //     className=\"me-1\"\r\n                        //     color={\"light-primary\"}\r\n                        //     content={node.name || \"\"}\r\n                        //   />\r\n                        // )\r\n                      }\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"fw-bolder\">\r\n                          {/* {node.code}  */}\r\n                          {node.name}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                  buttons: [\r\n                    ability.can(\r\n                      \"post\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-primary\"\r\n                          id=\"btn-add-child\"\r\n                          onClick={(e) => {\r\n                            toggleSidebar(node)\r\n                          }}\r\n                        >\r\n                          <Plus size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"btn-add-child\"\r\n                        >\r\n                          {t(\"Add Child\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    ability.can(\r\n                      \"update\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) &&\r\n                    !node.is_app_header &&\r\n                    !node.disableEdit ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-info\"\r\n                          id=\"btn-edit\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleEdit(node)\r\n                          }}\r\n                        >\r\n                          <Edit2 size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                          {t(\"Edit\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    ability.can(\r\n                      \"delete\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) &&\r\n                    !node.disableDelete &&\r\n                    node?.children?.length === 0 ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          id=\"btn-delete\"\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-danger\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleDelete(node.id)\r\n                          }}\r\n                        >\r\n                          <Trash2 size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"btn-delete\"\r\n                        >\r\n                          {t(\"Delete\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null\r\n                  ]\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n          currentData={currentDataAdd}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","// ** Third Party Components\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from \"reactstrap\"\r\nimport { Fragment } from \"react\"\r\n\r\nconst StatsHorizontal = ({\r\n  icon,\r\n  color,\r\n  cardColor,\r\n  stats,\r\n  renderStats,\r\n  statTitle,\r\n  className,\r\n  countTextColor,\r\n  countTextStyle = {},\r\n  titleStyle = {},\r\n  statsMargin,\r\n  solidColor = false,\r\n  cardStyle = {},\r\n  titleOnTop = false\r\n}) => {\r\n  const cardColorFix = !solidColor ? `bg-light-${cardColor}` : `bg-${cardColor}`\r\n  return (\r\n    <Card\r\n      style={{ ...cardStyle }}\r\n      {...(cardColor ? { className: cardColorFix, inverse: true } : {})}\r\n    >\r\n      <CardBody className={className}>\r\n        {!titleOnTop ? (\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <Fragment>\r\n                <div>\r\n                  {renderStats ? (\r\n                    renderStats\r\n                  ) : (\r\n                    <h3\r\n                      className={classnames(\"fw-bolder\", {\r\n                        \"mb-0\": !statsMargin,\r\n                        [statsMargin]: statsMargin\r\n                      })}\r\n                      style={{\r\n                        color: countTextColor ?? \"#5e5873\",\r\n                        ...countTextStyle\r\n                      }}\r\n                    >\r\n                      {stats}\r\n                    </h3>\r\n                  )}\r\n\r\n                  <p style={{ ...titleStyle }} className=\"card-text\">\r\n                    {statTitle}\r\n                  </p>\r\n                </div>\r\n                <div\r\n                  className={`avatar avatar-stats p-50 m-0 ${\r\n                    color ? `bg-light-${color}` : \"bg-light-primary\"\r\n                  }`}\r\n                >\r\n                  <div className=\"avatar-content\">{icon}</div>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Fragment>\r\n            <div>\r\n              <p style={{ ...titleStyle }} className=\"card-text\">\r\n                {statTitle}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              {renderStats ? (\r\n                renderStats\r\n              ) : (\r\n                <Fragment>\r\n                  <div>\r\n                    {renderStats ? (\r\n                      renderStats\r\n                    ) : (\r\n                      <h3\r\n                        className={classnames(\"fw-bolder\", {\r\n                          \"mb-0\": !statsMargin,\r\n                          [statsMargin]: statsMargin\r\n                        })}\r\n                        style={{\r\n                          color: countTextColor ?? \"#5e5873\",\r\n                          ...countTextStyle\r\n                        }}\r\n                      >\r\n                        {stats}\r\n                      </h3>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    className={`avatar avatar-stats p-50 m-0 ${\r\n                      color ? `bg-light-${color}` : \"bg-light-primary\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"avatar-content\">{icon}</div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element,\r\n  color: PropTypes.string,\r\n  cardColor: PropTypes.string,\r\n  statTitle: PropTypes.string,\r\n  statsMargin: PropTypes.oneOf([\r\n    \"mb-0\",\r\n    \"mb-25\",\r\n    \"mb-50\",\r\n    \"mb-75\",\r\n    \"mb-1\",\r\n    \"mb-2\",\r\n    \"mb-3\",\r\n    \"mb-4\",\r\n    \"mb-5\"\r\n  ])\r\n}\r\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from \"react-feather\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from \"reactstrap\"\r\n\r\nconst BreadCrumbs = (props) => {\r\n  const { t } = useTranslation()\r\n  // ** Props\r\n  const { data, title, mb, subtitle } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag=\"li\"\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ \"text-primary\": !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\r\n            {item.title}\r\n          </Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`content-header-left col-md-9 col-8 ${\r\n        mb || mb === 0 ? `mb-${mb}` : \"mb-2\"\r\n      }`}\r\n    >\r\n      <div className=\"row breadcrumbs-top\">\r\n        <div className=\"col-12\">\r\n          {title ? (\r\n            <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem tag=\"li\">\r\n                <Link to=\"/\">{t(\"Home\")}</Link>\r\n              </BreadcrumbItem>\r\n              {renderBreadCrumbs()}\r\n            </Breadcrumb>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">{subtitle ?? \"\"}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nmodule.exports = _taggedTemplateLiteral, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}