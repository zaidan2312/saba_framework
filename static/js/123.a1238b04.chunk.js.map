{"version":3,"sources":["views/apps/endpoint/modal/index.js","views/apps/endpoint/Table.js","../../src/mounts.js","../../src/index.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js"],"names":["ModalAddEdit","_ref","show","setShow","detailPage","formState","setFormState","_ref$currentData","currentData","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","_useState","useState","_useState2","_slicedToArray","loadingText","setLoadingText","allStore","_useState3","_useState4","dynamicComponents","setDynamicComponents","_useState5","_useState6","formDatas","_useState7","_useState8","formDatasError","setFormDatasError","_useForm","useForm","setError","control","handleSubmit","Loader","errors","_jsxs","Fragment","children","_jsx","Spinner","CardText","className","handleReset","resetSelectedData","handleChangeInputs","value","fieldName","isMulti","arguments","length","undefined","index","indexOf","splice","push","_objectSpread","_defineProperty","useEffect","componentsImport","dynamicFormRelation","dynamicForm","_loop","i","fieldLabel","path_name","replaceAll","_dynamicFormRelation$","_dynamicFormRelation$2","_allStore$storeName","_dynamicFormRelation$3","_dynamicFormRelation$4","MyComponent","lazy","concat","Label","for","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","isMultiSelection","lookupMode_onChange","lookupMode_defaultValue","isM2MDefValFromGrid","data","map","x","selectedData","lookupMode_isM2MDefValFromGrid","_dynamicFormRelation$5","_allStore$storeName2","Input","defaultValue","onChange","e","_dynamicFormRelation$6","target","Modal","isOpen","toggle","UILoader","blocking","isLoadingAddEdit","isLoadingDetail","loader","ModalHeader","ModalBody","pageTitle","title","Form","onSubmit","storeData","sortedObject","key","JSON","stringify","countChanges","Object","values","every","field","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","_data$key","type","icon","postData","errorFields","assign","_formDatas$key","Row","item","_formDatas$item$field","_formDatas$item$field2","includes","Col","md","xs","Suspense","fallback","textAlign","Button","outline","onClick","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","handleFiltersChange","filtersCustomAdd","searchString","ability","AbilityContext","dynamicFilterComponents","setDynamicFilterComponents","dynamicFilterDatas","invoices","getUserData","_dynamicColumnsFilter","_dynamicColumnsFilter2","_dynamicColumnsFilter3","_dynamicColumnsFilter4","dynamicColumnsFilter","xl","htmlFor","width","can","sessionStorage","getItem","List","_ref2","storeApp","apps_app","sort_dir","setSortDir","setSearchTerm","_useState9","_useState10","currentPage","setCurrentPage","_useState11","_useState12","sort","setSort","_useState13","_useState14","setRowsPerPage","_useState15","_useState16","selectedRows","setSelectedRows","_useState17","_useState18","filtersCustom","_useState19","_useState20","toggleCleared","setToggleCleared","_useState21","_useState22","sidebarOpen","setSidebarOpen","_useState23","_useState24","loading","setLoading","_useState25","_useState26","_useState27","_useState28","showModal","setShowModal","_useState29","_useState30","handleEdit","rowData","detailFromGrid","setDataById","isLoading","getDataListApp","handleCloseModal","revivalBack","neutralizeBack","handleDelete","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","sent","deleteData","stop","_x","apply","_ref4","_callee2","countSelectedCopy","_context2","a","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","s","columns","_toConsumableArray","dynamicColumns","column","name","columnName","sortField","center","sortable","minWidth","selector","row","cell","dataFormat","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","app_logo","_row$app_name","Avatar","img","height","imgHeight","imgWidth","initials","content","app_name","GlobalActionsTable","disabledAction","tableColumns","useMemo","Skeleton","sx","bgcolor","dark","light","animation","removeDefaultValue","dataTree","parse","getAlwaysGrid","Card","DataTable","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","Number","Math","ceil","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","NoDataDisplay","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","ChevronDown","filters","isFiltered","keys","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget","par_name","mounts","getter","swal","getTitle","getHtmlContainer","getConfirmButton","getDenyButton","getCancelButton","getFooter","getCloseButton","getIcon","querySelector","getLoader","noop","ParentSwal","extractReactParams","params","reactParams","otherParams","mountKeys","mount","entries","forEach","React__default","isValidElement","render","domElement","find","ReactDOM__default","__mountedDomElements","unrender","unmountComponentAtNode","_ParentSwal","_inherits","_class","_super","_createSuper","_classCallCheck","_createClass","mixinParams","_this","this","__params","_extractReactParams","_extractReactParams2","superDidOpen","didOpen","superDidDestroy","didDestroy","_get","_getPrototypeOf","prototype","call","popup","_extractReactParams3","_extractReactParams4","args","argsToParams","arrayLikeToArray","module","exports","arr","isArray","__esModule","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","strings","raw","slice","freeze","defineProperties"],"mappings":"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","file":"static/js/123.a1238b04.chunk.js","sourcesContent":["/* eslint-disable brace-style */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById,\r\n  dynamicForm\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicComponents, setDynamicComponents] = useState({})\r\n  const [formDatas, setFormDatas] = useState({})\r\n  const [formDatasError, setFormDatasError] = useState({})\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = () => {\r\n    if (countChanges(formDatas)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = () => {\r\n    if (\r\n      Object.values(formDatas).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(formDatas)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      // console.log(\"ERORR\")\r\n      // console.log(formDatas)\r\n      let errorFields = Object.assign({}, formDatasError)\r\n      for (let key in formDatas) {\r\n        // console.log(key, formDatas[key])\r\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\r\n          errorFields[key] = true\r\n        }\r\n      }\r\n      // console.log(errorFields)\r\n      setFormDatasError(errorFields)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\r\n    // console.log(value, fieldName, isMulti)\r\n    if (isMulti) {\r\n      if (formDatas[fieldName]) {\r\n        const index = formDatas[fieldName].indexOf(value)\r\n        if (index !== -1) {\r\n          formDatas[fieldName].splice(index, 1)\r\n        } else {\r\n          formDatas[fieldName].push(value)\r\n        }\r\n      } else {\r\n        formDatas[fieldName] = [value]\r\n      }\r\n    } else {\r\n      formDatas[fieldName] = value\r\n    }\r\n    // formDatasError[fieldName] = false\r\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // DYNAMIC IMPORT COMPONENTS\r\n    let componentsImport = {}\r\n    // const dynamicFormRelation = dynamicForm.filter(function (el) {\r\n    //   return el.type === \"dropdown\" || el.type === \"table\"\r\n    // })\r\n\r\n    const dynamicFormRelation = dynamicForm\r\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\r\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\r\n      const fieldLabel = dynamicFormRelation[i][\"fieldLabel\"]\r\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\r\n        \"id_\",\r\n        \"\"\r\n      )\r\n\r\n      formDatas[fieldName] = null\r\n      formDatasError[fieldName] = false\r\n\r\n      ////////////INPUT - DROPDOWN\r\n      if (\r\n        dynamicFormRelation[i][\"type\"] === \"dropdown\" ||\r\n        dynamicFormRelation[i][\"type\"] === \"table\"\r\n      ) {\r\n        const MyComponent = lazy(() => import(`../../${path_name}`))\r\n        componentsImport[`${path_name}_comp`] = (\r\n          <Fragment>\r\n            <Label className=\"form-label\" for={fieldName}>\r\n              {t(fieldLabel ?? \"\")}\r\n            </Label>\r\n            <MyComponent\r\n              key={`dynInput_${fieldName}`}\r\n              lookupMode={true}\r\n              lookupMode_fieldName={fieldName}\r\n              lookupMode_dropdown={\r\n                dynamicFormRelation[i][\"type\"] === \"dropdown\"\r\n              }\r\n              lookupMode_isMulti={\r\n                dynamicFormRelation[i].isMultiSelection ?? false\r\n              }\r\n              lookupMode_onChange={handleChangeInputs}\r\n              lookupMode_defaultValue={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n                  ? allStore[storeName].data.map((x) => x[fieldName])\r\n                  : allStore[storeName]?.selectedData\r\n                  ? allStore[storeName].selectedData[fieldName]\r\n                  : \"\"\r\n              }\r\n              lookupMode_isM2MDefValFromGrid={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\r\n              }\r\n            />\r\n          </Fragment>\r\n        )\r\n      }\r\n\r\n      ////////////INPUT - TEXT\r\n      else {\r\n        componentsImport[`${path_name}_comp`] = (\r\n          <Fragment>\r\n            <Label className=\"form-label\" for={fieldName}>\r\n              {t(fieldLabel ?? \"\")}\r\n            </Label>\r\n            <Input\r\n              key={`dynInput_${fieldName}`}\r\n              defaultValue={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n                  ? allStore[storeName].data.map((x) => x[fieldName])\r\n                  : allStore[storeName]?.selectedData\r\n                  ? allStore[storeName].selectedData[fieldName]\r\n                  : \"\"\r\n              }\r\n              onChange={(e) =>\r\n                handleChangeInputs(\r\n                  e.target.value,\r\n                  fieldName,\r\n                  dynamicFormRelation[i].isMultiSelection ?? false\r\n                )\r\n              }\r\n              // className={\r\n              //   !formDatasError[fieldName]\r\n              //     ? \"form-control is-invalid\"\r\n              //     : \"form-control\"\r\n              // }\r\n              id={`dynInput_${fieldName}`}\r\n            />\r\n          </Fragment>\r\n        )\r\n      }\r\n    }\r\n\r\n    setDynamicComponents(componentsImport)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\r\n            </h2>\r\n            <p className=\"mb-1\">\r\n              {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\r\n            </p>\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              {dynamicForm.map((item, index) => {\r\n                const path_name = item.fieldName.replaceAll(\"id_\", \"\")\r\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\r\n                  if (item.type === \"table\") {\r\n                    return (\r\n                      <Col key={path_name} md={12} xs={12}>\r\n                        <Suspense fallback={<div>Loading...</div>}>\r\n                          <div\r\n                            className={\r\n                              !formDatasError[item.fieldName]\r\n                                ? \"dynamicForm_input\"\r\n                                : \"dynamicForm_input dynamicForm_input_invalid\"\r\n                            }\r\n                          >\r\n                            {dynamicComponents[`${path_name}_comp`]}\r\n                            {item?.isM2MDefValFromGrid &&\r\n                              formDatas[item.fieldName] && (\r\n                                <div\r\n                                  style={{ textAlign: \"right\" }}\r\n                                  className=\"text-primary\"\r\n                                >\r\n                                  {formDatas[item.fieldName]?.length}{\" \"}\r\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                        </Suspense>\r\n                      </Col>\r\n                    )\r\n                  } else {\r\n                    return (\r\n                      <Col key={path_name} md={12} xs={12}>\r\n                        <Suspense fallback={<div>Loading...</div>}>\r\n                          <div\r\n                            className={\r\n                              !formDatasError[item.fieldName]\r\n                                ? \"\"\r\n                                : \"dynamicForm_input_invalid\"\r\n                            }\r\n                          >\r\n                            {dynamicComponents[`${path_name}_comp`]}\r\n                            {item?.isM2MDefValFromGrid &&\r\n                              formDatas[item.fieldName] && (\r\n                                <div\r\n                                  style={{ textAlign: \"right\" }}\r\n                                  className=\"text-primary\"\r\n                                >\r\n                                  {formDatas[item.fieldName]?.length}{\" \"}\r\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                        </Suspense>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                } else {\r\n                  return (\r\n                    <Col key={path_name} md={12} xs={12}>\r\n                      <div\r\n                        className={\r\n                          !formDatasError[item.fieldName]\r\n                            ? \"\"\r\n                            : \"dynamicForm_input_invalid\"\r\n                        }\r\n                      >\r\n                        {dynamicComponents[`${path_name}_comp`]}\r\n                      </div>\r\n                    </Col>\r\n                  )\r\n                }\r\n              })}\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  disabledAction,\r\n  dynamicColumnsFilter,\r\n  setDataList\r\n} from \"./store\"\r\n\r\nimport { getDataList as getDataListApp } from \"../app/store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  CardText\r\n} from \"reactstrap\"\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Moment from \"moment\"\r\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\r\n\r\nimport { getDataList as getDataListPermission } from \"../permission/store\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport Avatar from \"@components/avatar\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected,\r\n  handleFiltersChange,\r\n  filtersCustomAdd,\r\n  searchString,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const dispatch = useDispatch()\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicFilterComponents, setDynamicFilterComponents] = useState({})\r\n  const [dynamicFilterDatas, setDynamicFilterDatas] = useState({})\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\r\n    fieldName = `filter_${fieldName}`\r\n    if (isMulti) {\r\n      if (dynamicFilterDatas[fieldName]) {\r\n        const index = dynamicFilterDatas[fieldName].indexOf(value)\r\n        if (index !== -1) {\r\n          dynamicFilterDatas[fieldName].splice(index, 1)\r\n        } else {\r\n          dynamicFilterDatas[fieldName].push(value)\r\n        }\r\n      } else {\r\n        dynamicFilterDatas[fieldName] = [value]\r\n      }\r\n    } else {\r\n      dynamicFilterDatas[fieldName] = value\r\n    }\r\n    return handleFiltersChange(dynamicFilterDatas[fieldName], fieldName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // DYNAMIC IMPORT COMPONENTS\r\n    let componentsImport = {}\r\n    for (let i = 0; i < dynamicColumnsFilter.length; i++) {\r\n      const fieldName = dynamicColumnsFilter[i][\"fieldName\"]\r\n      const path_name = dynamicColumnsFilter[i][\"fieldName\"].replaceAll(\r\n        \"id_\",\r\n        \"\"\r\n      )\r\n\r\n      dynamicFilterDatas[`filter_${fieldName}`] = null\r\n      const MyComponent = lazy(() => import(`../${path_name}`))\r\n      componentsImport[`${path_name}_comp`] = (\r\n        <MyComponent\r\n          lookupMode={true}\r\n          lookupMode_fieldName={fieldName}\r\n          lookupMode_dropdown={true}\r\n          lookupMode_isMulti={dynamicColumnsFilter[i].isMultiSelection ?? false}\r\n          lookupMode_onChange={handleChangeInputs}\r\n          lookupMode_defaultValue={\r\n            dynamicColumnsFilter[i]?.isM2MDefValFromGrid\r\n              ? allStore[storeName].data.map((x) => x[fieldName])\r\n              : allStore[storeName]?.selectedData\r\n              ? allStore[storeName].selectedData[fieldName]\r\n              : \"\"\r\n          }\r\n          lookupMode_isM2MDefValFromGrid={\r\n            dynamicColumnsFilter[i]?.isM2MDefValFromGrid ?? false\r\n          }\r\n        />\r\n      )\r\n    }\r\n\r\n    setDynamicFilterComponents(componentsImport)\r\n  }, [dispatch, dynamicFilterDatas])\r\n\r\n  return (\r\n    <div\r\n      className={`invoice-list-table-header w-100 ms-50 mb-75 ${\r\n        !lookupMode ? \"mt-2 me-1\" : \"\"\r\n      }`}\r\n    >\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          {!lookupMode && (\r\n            <div className=\"d-flex align-items-center w-100\">\r\n              <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n              <Input\r\n                className=\"mx-50\"\r\n                type=\"select\"\r\n                id=\"rows-per-page\"\r\n                value={rowsPerPage}\r\n                onChange={handlePerPage}\r\n                style={{ width: \"5rem\" }}\r\n              >\r\n                <option value=\"10\">10</option>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"50\">50</option>\r\n              </Input>\r\n              <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className={`d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column p-0 mt-xl-0 mt-1 ${\r\n            !lookupMode ? \"pe-xl-1\" : \"\"\r\n          }`}\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) &&\r\n          !lookupMode ? (\r\n            <div\r\n              className={`d-flex align-items-center mb-sm-0 mb-1 ${\r\n                !lookupMode ? \"me-1\" : \"\"\r\n              }`}\r\n            >\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className={`d-flex align-items-center mb-sm-0 mb-1 me-1`}>\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {dynamicColumnsFilter.map((item, index) => {\r\n            const path_name = item.fieldName.replaceAll(\"id_\", \"\")\r\n            return (\r\n              <div\r\n                key={path_name}\r\n                className={`mt-50 width-300 mt-sm-0 mt-1 ${\r\n                  !lookupMode ? \"me-1\" : \"\"\r\n                }`}\r\n              >\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                  {dynamicFilterComponents[`${path_name}_comp`]}\r\n                </Suspense>\r\n              </div>\r\n\r\n              // <Col key={path_name} md={12} xs={12}>\r\n              //   <Label className=\"form-label\" for={item.fieldName}>\r\n              //     {t(item.fieldLabel ?? \"\")}\r\n              //   </Label>\r\n              //   <Suspense fallback={<div>Loading...</div>}>\r\n              //     <div\r\n              //       className={\r\n              //         !formDatasError[item.fieldName]\r\n              //           ? \"dynamicForm_input\"\r\n              //           : \"dynamicForm_input dynamicForm_input_invalid\"\r\n              //       }\r\n              //     >\r\n              //       {dynamicComponents[`${path_name}_comp`]}\r\n              //       {item?.isM2MDefValFromGrid &&\r\n              //         formDatas[item.fieldName] && (\r\n              //           <div\r\n              //             style={{ textAlign: \"right\" }}\r\n              //             className=\"text-primary\"\r\n              //           >\r\n              //             {formDatas[item.fieldName]?.length}{\" \"}\r\n              //             {t(item.fieldLabel)} {t(\"Selected\")}\r\n              //           </div>\r\n              //         )}\r\n              //     </div>\r\n              //   </Suspense>\r\n              // </Col>\r\n            )\r\n          })}\r\n\r\n          {/* {!filtersCustomAdd[\"filter_id_permission\"] ? (\r\n            <div className=\"mt-50 width-200 me-1 mt-sm-0 mt-1\">\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                // value={role}\r\n                onChange={(e) =>\r\n                  handleFiltersChange(e.target.value, \"filter_id_permission\")\r\n                }\r\n              >\r\n                <option value=\"\">\r\n                  {t(\"Select\")} {t(\"Permission\")}\r\n                </option>\r\n                {allStore[\"apps_permission\"].data.map((item, index) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.title}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </div>\r\n          ) : null} */}\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            {ability.can(\"post\", sessionStorage.getItem(\"current_page_perm\")) &&\r\n            !lookupMode ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = ({\r\n  filtersCustomAdd,\r\n  searchString,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const storeApp = useSelector((state) => state.apps_app)\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(lookupMode ? 5 : 10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n\r\n  const [filtersCustom, setFiltersCustom] = useState(filtersCustomAdd ?? {})\r\n\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        if (storeApp.data.length === 0 && !storeApp.isLoading) {\r\n          dispatch(getDataListApp({})).then((res) => {\r\n            setLoading(false)\r\n            setShowModal(true)\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleChangeLookupMode = (\r\n    e,\r\n    id,\r\n    lookupMode_fieldName,\r\n    lookupMode_isMulti\r\n  ) => {\r\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\r\n  }\r\n\r\n  const handleFiltersChange = (value, par_name) => {\r\n    filtersCustom[par_name] = value\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n    if (lookupMode && lookupMode_isMulti) {\r\n      lookupMode_onChange(\r\n        state.selectedRows.map((s) => s.id),\r\n        lookupMode_fieldName,\r\n        lookupMode_isMulti\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderCell = (row, column) => {\r\n    const field = row[column.fieldName]\r\n    const dataFormat = column.dataFormat\r\n    if (dataFormat) {\r\n      if (dataFormat.includes(\":\")) {\r\n        const columnTypeFormat = dataFormat.split(\":\")\r\n        const columnType = columnTypeFormat[0]\r\n        const columnFormat = columnTypeFormat[1]\r\n        let columnFormated = row[column.fieldName]\r\n        if (columnType === \"date\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        if (columnType === \"datetime\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        return columnFormated\r\n      }\r\n    }\r\n    return row[column.fieldName]\r\n  }\r\n\r\n  const columns = [\r\n    ...store.dynamicColumns.map((column) => ({\r\n      name: column.columnName,\r\n      sortField: column.fieldName,\r\n      center: false,\r\n      sortable: true,\r\n      minWidth: column.minWidth,\r\n      selector: (row) => row[column.fieldName],\r\n      cell: (row) => renderCell(row, column)\r\n    })),\r\n    {\r\n      name: t(\"App\"),\r\n      center: false,\r\n      sortable: false,\r\n      selector: (row) => row?.app_logo,\r\n      cell: (row) => (\r\n        <div className=\"d-flex justify-content-left align-items-center\">\r\n          {row?.app_logo ? (\r\n            <Avatar\r\n              className=\"me-1\"\r\n              img={row?.app_logo}\r\n              width=\"32\"\r\n              height=\"32\"\r\n              imgHeight=\"25\"\r\n              imgWidth=\"30\"\r\n              color={\"light-primary\"}\r\n            />\r\n          ) : (\r\n            <Avatar\r\n              initials\r\n              className=\"me-1\"\r\n              // color={row.avatarColor}\r\n              content={row?.app_name ?? \"\"}\r\n            />\r\n          )}\r\n\r\n          <div className=\"d-flex flex-column\">\r\n            <span className=\"fw-bolder\">{row.app_name}</span>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    // {\r\n    //   name: t(\"App Name\"),\r\n    //   sortField: \"attributes\",\r\n    //   center: false,\r\n    //   sortable: true,\r\n    //   selector: (row) => row.attributes,\r\n    //   cell: (row) => row.attributes\r\n    // },\r\n    !lookupMode && {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <GlobalActionsTable\r\n          disabledAction={disabledAction}\r\n          row={row}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      )\r\n      // (\r\n      //   <Input\r\n      //     disabled={row.hidden}\r\n      //     defaultChecked={row.checked}\r\n      //     onChange={(e) =>\r\n      //       handleChangeLookupMode(\r\n      //         e,\r\n      //         row.id,\r\n      //         lookupMode_fieldName,\r\n      //         lookupMode_isMulti\r\n      //       )\r\n      //     }\r\n      //     type=\"checkbox\"\r\n      //     id={`checkbox-${row.id}`}\r\n      //   />\r\n      // )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) =>\r\n              column.name === \"Actions\" ? (\r\n                <Fragment>\r\n                  <Skeleton\r\n                    sx={{ bgcolor: colors.dark.light }}\r\n                    animation=\"wave\"\r\n                    className=\"ms-2 me-1\"\r\n                    width={30}\r\n                    height={40}\r\n                  />\r\n                  <Skeleton\r\n                    sx={{ bgcolor: colors.dark.light }}\r\n                    animation=\"wave\"\r\n                    width={30}\r\n                    height={40}\r\n                  />\r\n                </Fragment>\r\n              ) : (\r\n                <Skeleton\r\n                  sx={{ bgcolor: colors.dark.light }}\r\n                  animation=\"wave\"\r\n                  width=\"100%\"\r\n                  height={40}\r\n                />\r\n              )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  const removeDefaultValue = (data, dataTree) => {\r\n    // console.log(dataTree)\r\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\r\n    // mainArray.forEach(function iter(a) {\r\n    //   if (data.includes(a.id)) {\r\n    //     a[\"checked\"] = true\r\n    //     a[\"hidden\"] = true\r\n    //   }\r\n    //   // console.log(a.id, !data.includes(a.id))\r\n\r\n    //   // eslint-disable-next-line no-unused-expressions\r\n    //   Array.isArray(a.children) && a.children.forEach(iter)\r\n    // })\r\n    // dispatch(setDataList(mainArray))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage,\r\n          ...filtersCustom\r\n        })\r\n      ).then((x) => {\r\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\r\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\r\n        }\r\n      })\r\n    }\r\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\r\n      removeDefaultValue(lookupMode_defaultValue, store.data)\r\n    }\r\n  }, [dispatch, sort_dir, sort, currentPage, filtersCustom])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                  handleFiltersChange={handleFiltersChange}\r\n                  filtersCustomAdd={filtersCustomAdd}\r\n                  lookupMode={lookupMode}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent (ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams (params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map(mount => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n  function render (swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find(mount => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      ReactDOM.render(value, domElement)\n      swal.__mountedDomElements.push(domElement)\n    })\n  }\n\n  function unrender (swal) {\n    swal.__mountedDomElements.forEach(domElement => {\n      ReactDOM.unmountComponentAtNode(domElement)\n    })\n    swal.__mountedDomElements = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params, mixinParams) {\n      this.__mountedDomElements = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams)\n            superDidOpen(popup)\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        }),\n      )\n    }\n\n    update (params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nmodule.exports = _taggedTemplateLiteral, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}