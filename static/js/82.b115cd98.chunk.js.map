{"version":3,"sources":["views/apps/unit/store/my_unit.js"],"names":["initSelectData","value","label","setUnitSelectedDropdown","createAsyncThunk","data","getUnits","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","_ref","rejectWithValue","_yield$JSON$parse$mem","userMember","fetchState","response","_response","wrap","_context","prev","next","isUserLoggedIn","JSON","parse","localStorage","getItem","member_of","t1","sent","t0","t2","length","some","e","children_count","useJwt","ssoAxiosInterceptor","get","abrupt","total","t3","stop","_x","_x2","apply","arguments","getUnit","_ref3","_callee2","id","_context2","axios","concat","_x3","addUnit","_ref5","_callee3","unit","_ref4","dispatch","getState","_context3","post","units","getAllUnit","_x4","_x5","deleteUnit","_ref7","_callee4","_ref6","_context4","delete","_x6","_x7","MyUnitsSlice","createSlice","name","initialState","crudTitle","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","selectedUnit","selectedUnitMulti","reducers","setUnitSelected","state","action","console","log","_objectSpread","payload","resetAll","extraReducers","builder","addCase","fulfilled","pending","_action$payload","_action$payload2","map","item","unshift","rejected","message"],"mappings":"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","file":"static/js/82.b115cd98.chunk.js","sourcesContent":["// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport { useTranslation } from \"react-i18next\"\r\n// ** Axios Imports\r\n// import axios from \"axios\"\r\n// import useJwt.ssoAxiosInterceptor from \"../../../../shared/SsoAxiosInterceptorsss\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nimport { isUserLoggedIn } from \"@utils\"\r\nimport { bool } from \"prop-types\"\r\n\r\nconst initSelectData = {\r\n  value: \"\",\r\n  label: \"Select Unit\"\r\n}\r\n\r\nexport const setUnitSelectedDropdown = createAsyncThunk(\r\n  \"Units/setUnitSelectedDropdown\",\r\n  (data) => {\r\n    // console.log(data)\r\n    return data\r\n  }\r\n)\r\n\r\nexport const getUnits = createAsyncThunk(\r\n  \"Units/getUnits\",\r\n  async (params, { rejectWithValue }) => {\r\n    params[\"flat_mode\"] = true\r\n    // console.log(\"GET INIT MEMBER-OF START...\")\r\n    if (isUserLoggedIn() !== null) {\r\n      const userMember =\r\n        (await JSON.parse(localStorage.getItem(\"userData\")).member_of) ?? []\r\n\r\n      if (userMember.length > 0) {\r\n        // userMember.unshift(initSelectData)\r\n        let fetchState = false\r\n        if (userMember.some((e) => e.children_count > 0)) {\r\n          fetchState = true\r\n        }\r\n\r\n        if (fetchState) {\r\n          const response = await useJwt.ssoAxiosInterceptor.get(\"/api/unit\", {\r\n            params\r\n          })\r\n          // response.data.data.unshift(initSelectData)\r\n          // console.log(\"GET INIT MEMBER-OF SUCCESS\")\r\n          return {\r\n            params,\r\n            data: response.data.data,\r\n            total: response.data.total\r\n          }\r\n        } else {\r\n          // console.log(\"GET INIT MEMBER-OF SUCCESS\")\r\n          return { data: userMember }\r\n        }\r\n      } else {\r\n        try {\r\n          const response = await useJwt.ssoAxiosInterceptor.get(\"/api/unit\", {\r\n            params\r\n          })\r\n          // response.data.data.unshift(initSelectData)\r\n          // console.log(\"GET INIT MEMBER-OF SUCCESS\")\r\n          return {\r\n            params,\r\n            data: response.data.data,\r\n            total: response.data.total\r\n          }\r\n        } catch (error) {\r\n          // console.error(\"GET INIT MEMBER-OF FAILED!!!\")\r\n          return rejectWithValue(error.response.data)\r\n        }\r\n      }\r\n    }\r\n  }\r\n)\r\n\r\nexport const getUnit = createAsyncThunk(\"Units/getUnit\", async (id) => {\r\n  const response = await axios.get(`/api/unit/${id}`)\r\n  // console.log(response)\r\n  return response.data.data\r\n})\r\n\r\nexport const addUnit = createAsyncThunk(\r\n  \"Units/addUnit\",\r\n  async (unit, { dispatch, getState }) => {\r\n    await axios.post(\"/api/unit\", unit)\r\n    await dispatch(getUnits(getState().units.params))\r\n    await dispatch(getAllUnit())\r\n    return unit\r\n  }\r\n)\r\n\r\nexport const deleteUnit = createAsyncThunk(\r\n  \"Units/deleteUnit\",\r\n  async (id, { dispatch, getState }) => {\r\n    await axios.delete(\"/apps/unit\", { id })\r\n    await dispatch(getUnits(getState().units.params))\r\n    await dispatch(getAllUnit())\r\n    return id\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const MyUnitsSlice = createSlice({\r\n  name: \"Units\",\r\n  initialState: {\r\n    crudTitle: \"Unit\",\r\n\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    //SHARED\r\n    dataDropdown: [],\r\n    selectedUnit: {},\r\n    selectedUnitMulti: []\r\n  },\r\n  reducers: {\r\n    setUnitSelected: (state, action) => {\r\n      // console.log(action)\r\n      console.log(\"setUnitSelected\")\r\n      return { ...state, selectedUnit: action.payload }\r\n    },\r\n    resetAll: (state) => {\r\n      // state.errorSummary = null\r\n      // state.dataSummary = []\r\n      // state.error = null\r\n      state.data = []\r\n      state.dataDropdown = []\r\n      state.total = 1\r\n      state.selectedUnit = null\r\n      state.selectedUnitMulti = null\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(setUnitSelectedDropdown.fulfilled, (state, action) => {\r\n        // state.selectedUnit = action.payload\r\n        console.log(\"setUnitSelectedDropdown\")\r\n        return { ...state, selectedUnit: action.payload }\r\n        // console.log(state.selectedUnit)\r\n        // state.selectedUnit = { ...state.selectedUnit, ...action.payload }\r\n      })\r\n      .addCase(getUnits.pending, (state) => {\r\n        // console.log(\"pending\")\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getUnits.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n\r\n        if (action.payload?.data) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: item.name\r\n          }))\r\n          // console.log(state.dataDropdown)\r\n          state.dataDropdown.unshift(initSelectData)\r\n          if (action.payload?.total) {\r\n            state.total = action.payload.total\r\n          }\r\n          state.selectedUnit = state.dataDropdown[0]\r\n        }\r\n      })\r\n      .addCase(getUnits.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.message\r\n      })\r\n\r\n      .addCase(getUnit.fulfilled, (state, action) => {\r\n        state.selectedUnit = action.payload\r\n      })\r\n  }\r\n})\r\n\r\n// export const { setUnitSelected, resetAll } = UnitsSlice.actions\r\n\r\nexport default MyUnitsSlice.reducer\r\n"],"sourceRoot":""}