{"version":3,"sources":["views/apps/menu/modal/index.js","views/apps/menu/icons/feather.js","views/apps/menu/icons/material.js","views/apps/menu/Table.js","../../src/mounts.js","../../src/index.js","@core/components/breadcrumbs/index.js"],"names":["CustomLabel","htmlFor","className","size","ModalAddEdit","show","setShow","detailPage","formState","setFormState","currentData","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","useState","setLoadingText","useForm","control","setError","handleSubmit","setValue","errors","is_separator","isSeparator","setIsSeparator","iconCategory","setIconCategory","icon","setIcon","canvasPlacement","setCanvasPlacement","canvasOpen","setCanvasOpen","toggleCanvasStart","handleReset","resetSelectedData","isOpen","toggle","blocking","isLoadingAddEdit","isLoadingDetail","loader","pageTitle","title","onSubmit","data","parent_id","value","id_app","Object","values","every","field","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","key","length","type","is_app_header","postData","md","xs","for","defaultValue","selectedData","name","render","invalid","Ripple","outline","onClick","renderIcon","marginTop","defaultChecked","onChange","target","checked","changeSeparator","dataDropdown","filter","el","theme","selectThemeColors","isDisabled","options","map","item","label","classnames","classNamePrefix","routePath","description","direction","event","FeatherIcons","IconsArr","query","setQuery","filteredArr","setFilteredArr","active","setActive","Icons","push","sm","placeholder","e","val","arr","toLowerCase","includes","handleFilter","justifyContent","dataToRender","IconTag","text","customName","handleIconCardClick","placement","replace","trim","renderIcons","IconsComponentsArr","filteredComponentsArr","setFilteredComponentsArr","split","join","substring","useEffect","console","log","material","setIconsComponents","arrComponents","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","searchTerm","selectedRow","handleDeleteSelected","ability","AbilityContext","userData","invoices","getUserData","xl","width","can","sessionStorage","getItem","caret","getInvoice","rpt_name","output_type","dataYear","print","as_attachment","par_UNITKEY","par_SAMPLE","List","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","showModal","setShowModal","handleCloseModal","revivalBack","neutralizeBack","handleDelete","a","fire","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","countSelectedCopy","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","columns","center","sortable","sortField","selector","row","cell","preventDefault","rowData","detailFromGrid","setDataById","tableColumns","useMemo","isLoading","column","sx","bgcolor","dark","light","animation","height","getAlwaysGrid","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","keys","some","k","Array","fill","subHeaderComponent","parseInt","currentTarget","mounts","getter","swal","noop","extractReactParams","reactParams","otherParams","mountKeys","mount","React","domElement","ReactDOM","unrender","_main","this","__mountedDomElements","__params","superDidOpen","superDidDestroy","didOpen","popup","didDestroy","update","argsToParams","args","params","forEach","ParentSwal","BreadCrumbs","mb","subtitle","tag","to","index","Wrapper","link","Link","Fragment","isLastItem"],"mappings":"yYAgDMA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,eAAC,IAAD,CAAOC,UAAU,mBAAmBD,QAASA,EAA7C,UACE,sBAAMC,UAAU,mBAAhB,SACE,cAAC,IAAD,CAAOC,KAAM,OAEf,sBAAMD,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAGC,KAAM,WAyiBFC,UAniBM,SAAC,GAOf,IAAD,cANJC,EAMI,EANJA,KACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aAEI,IADJC,mBACI,MADU,KACV,EACIC,EAAMC,cAAND,EACAE,EAAOC,cAAPD,GACFE,EAAWC,cACXC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,gBACnCC,EAAWC,qBAAWC,KAAtBF,OACR,EAAsCG,mBAAS,eAA/C,mBAAoBC,GAApB,WACA,EAMIC,YAAQ,IALVC,EADF,EACEA,QACAC,EAFF,EAEEA,SAEAC,GAJF,EAGEC,SAHF,EAIED,cACaE,EALf,EAKEvB,UAAauB,OAGf,EAAsCP,mBAASd,EAAYsB,cAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCV,mBAAS,WAAjD,qBAAOW,GAAP,MAAqBC,GAArB,MACA,GAAwBZ,mBAAQ,OAACd,QAAD,IAACA,OAAD,EAACA,EAAa2B,MAA9C,qBAAOA,GAAP,MAAaC,GAAb,MAEA,GAA8Cd,mBAAS,SAAvD,qBAAOe,GAAP,MAAwBC,GAAxB,MACA,GAAoChB,oBAAS,GAA7C,qBAAOiB,GAAP,MAAmBC,GAAnB,MACMC,GAAoB,WACxBP,GAAgB,WAChBI,GAAmB,SACnBE,IAAeD,KAkLXG,GAAc,WAClB7B,EAAS8B,gCA6BX,OACE,eAAC,IAAD,CACEC,OAAQzC,EACR0C,OAAQ,WACNH,KACAtC,GAASD,IAEXH,UAAU,iCANZ,UAQE,eAAC,IAAD,CACE8C,SAAU/B,EAAMgC,kBAAoBhC,EAAMiC,gBAC1CC,OAAQ,cAAC,IAAD,IAFV,UAIE,cAAC,IAAD,CACEjD,UAAU,iBACV6C,OAAQ,WACNH,KACAtC,GAASD,MAGb,eAAC,IAAD,CAAWH,UAAU,qBAArB,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAIA,UAAU,OAAd,UAC0BS,EAAT,SAAdH,EAAyB,OAAY,WADxC,IACqDG,EAAEyC,gBAExC,SAAd5C,GACC,oBAAGN,UAAU,OAAb,UACGS,EAAE,cADL,IACqBD,EAAcC,EAAED,EAAY2C,OAAS,SAI9D,cAAC,IAAD,CACEC,SAEMzB,EADU,SAAdrB,EApNY,SAAC+C,GAerB,GAbFA,EAAI,aAAmBtB,EACvBsB,EAAI,KAAWlB,GAEXkB,EAAKC,YACHD,EAAKC,UAAUC,OAAS,KAC1BF,EAAI,OAAaA,EAAKC,UAAUE,OAChCH,EAAI,UAAgB,MAEpBA,EAAI,UAAgBA,EAAKC,UAAUC,OAMnCE,OAAOC,OAAOL,GAAMM,OAAM,SAACC,GACzB,OAAiB,OAAVA,MAEa,OAAtBP,EAAI,UAEJ,GAAKtB,GAAqC,KAAtBsB,EAAI,UAStB9B,EAAe,GAAD,OAAId,EAAE,YAAN,YAAqBA,EAAEyC,aAAvB,YAAqCzC,EAAE,UAAvC,UACdI,EAASgD,kBAAQR,IAAOS,MAAK,SAACC,GAEG,cAA3BA,EAAIC,KAAKC,eACX7D,GAASD,GACT+D,IAAMC,QAAN,UAAiB1D,EAAE,wBAAnB,YAA8CA,EAAEyC,cAAc,CAC5DkB,MAAO,CACLC,QAAS,OACTC,MAAOnD,EAAOgD,QAAQI,KACtBC,OAAO,aAAD,OAAerD,EAAOgD,QAAQI,OAEtCE,UAAW,CACTC,QAASvD,EAAOgD,QAAQI,QAGxBlE,GACFQ,EAAS8D,sBAAYhE,KAEa,aAA3BoD,EAAIC,KAAKC,eAClBC,IAAMU,MAAMb,EAAIc,QAAQC,QAAS,CAC/BV,MAAO,CACLC,QAAS,OACTC,MAAOnD,EAAO4D,OAAOR,KACrBC,OAAO,aAAD,OAAerD,EAAO4D,OAAOR,OAErCE,UAAW,CACTC,QAASvD,EAAO4D,OAAOR,gBAlC/B,IAAK,IAAMS,KAAO3B,EAAM,CAAC,IAAD,EACJ,OAAdA,EAAK2B,IAAuC,KAAtB,UAAA3B,EAAK2B,UAAL,eAAWC,SACnCvD,EAASsD,EAAK,CACZE,KAAM,gBAsCd,IAAK,IAAMF,KAAO3B,EAAM,CAAC,IAAD,EACI,KAAtB,UAAAA,EAAK2B,UAAL,eAAWC,SACbvD,EAASsD,EAAK,CACZE,KAAM,aAUI,SAAC7B,GAErB,GACEI,OAAOC,OAAOL,GAAMM,OAAM,SAACC,GACzB,OAAiB,OAAVA,KAGT,GAAK7B,GAAqC,KAAtBsB,EAAI,UAStB9B,EAAe,GAAD,OAAId,EAAE,kBAAD,OAAmByC,gBAIjC1C,EAAY2E,cAGf9B,EAAI,UAAgB,KAFpBA,EAAI,UAAgB7C,EAAYG,GAKlC0C,EAAI,OAAa7C,EAAYgD,OAC7BH,EAAI,aAAmBtB,EACvBsB,EAAI,KAAWlB,GAGftB,EAASuE,mBAAS/B,IAAOS,MAAK,SAACC,GAEE,cAA3BA,EAAIC,KAAKC,eACX7D,GAASD,GACT+D,IAAMC,QAAN,UAAiB1D,EAAE,wBAAnB,YAA8CA,EAAEyC,cAAc,CAC5DkB,MAAO,CACLC,QAAS,OACTC,MAAOnD,EAAOgD,QAAQI,KACtBC,OAAO,aAAD,OAAerD,EAAOgD,QAAQI,OAEtCE,UAAW,CACTC,QAASvD,EAAOgD,QAAQI,QAGxBlE,GACFQ,EAAS8D,sBAAYhE,KAEa,aAA3BoD,EAAIC,KAAKC,eAClBC,IAAMU,MAAMb,EAAIc,QAAQC,QAAS,CAC/BV,MAAO,CACLC,QAAS,OACTC,MAAOnD,EAAO4D,OAAOR,KACrBC,OAAO,aAAD,OAAerD,EAAO4D,OAAOR,OAErCE,UAAW,CACTC,QAASvD,EAAO4D,OAAOR,gBAhD/B,IAAK,IAAMS,KAAO3B,EAAM,CAAC,IAAD,EACJ,OAAdA,EAAK2B,IAAuC,KAAtB,UAAA3B,EAAK2B,UAAL,eAAWC,SACnCvD,EAASsD,EAAK,CACZE,KAAM,gBAoDd,IAAK,IAAMF,KAAO3B,EAAM,CAAC,IAAD,EACJ,OAAdA,EAAK2B,IAAuC,KAAtB,UAAA3B,EAAK2B,UAAL,eAAWC,SACnCvD,EAASsD,EAAK,CACZE,KAAM,cAoER,SAOE,eAAC,IAAD,CAAKlF,UAAU,aAAf,UACE,eAAC,IAAD,CAAKqF,GAAI,EAAGC,GAAI,EAAhB,UACE,eAAC,IAAD,CAAOtF,UAAU,aAAauF,IAAI,QAAlC,UACG9E,EAAE,SACH,sBAAMT,UAAU,cAAhB,kBAEF,cAAC,IAAD,CACEwF,aAAY,oBAAEzE,EAAM0E,oBAAR,aAAE,EAAoBtC,aAAtB,QAA+B,GAC3C1B,QAASA,EACTd,GAAG,QACH+E,KAAK,QACLC,OAAQ,gBAAG/B,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEE5D,UACE6B,EAAOsB,MACH,0BACA,eAENxC,GAAG,QACHiF,QAAS/D,EAAOsB,QAAS,YAM/BpB,GACA,eAAC,IAAD,CAAKsD,GAAI,EAAGC,GAAI,EAAhB,UACE,eAAC,IAAD,CAAOtF,UAAU,aAAauF,IAAI,OAAlC,UACG9E,EAAE,QACH,sBAAMT,UAAU,cAAhB,kBAEF,8BACE,cAAC,IAAO6F,OAAR,CACE7F,UAAU,iBACV8F,SAAO,EACPxB,MAAM,UACNrE,KAAK,KACL8F,QAzRO,WACzB7D,GAAgB,WAChBI,GAAmB,UACnBE,IAAeD,KAiRC,SAOGyD,qBAAW7D,GAAM,aAwB1B,eAAC,IAAD,CAAKkD,GAAI,EAAGC,GAAI,EAAhB,UACE,cAAC,IAAD,CAAOtF,UAAU,aAAauF,IAAI,eAAlC,SACG9E,EAAE,eAEL,sBACE2D,MAAO,CAAE6B,UAAW,OACpBjG,UAAU,iCAFZ,UAIE,cAAC,IAAD,CACEkF,KAAK,SACLgB,eAAgBnE,EAChBoE,SAAU,SAAC9C,IA3IL,SAACA,GAEvBrB,EAAeqB,EAAK+C,OAAOC,SACvBhD,EAAK+C,OAAOC,QAyIEC,CAAgBjD,IAElB1C,GAAG,eACH+E,KAAK,iBAEP,cAAC5F,EAAD,CAAaC,QAAQ,uBAIzB,eAAC,IAAD,CAAKsF,GAAI,EAAGC,GAAI,GAAhB,UACE,cAAC,IAAD,CAAOtF,UAAU,aAAauF,IAAI,YAAlC,SACG9E,EAAE,iBAEL,cAAC,IAAD,CACE+E,aAAY,UACVzE,EAAMwF,aAAaC,QACjB,SAACC,GAAD,OACEA,EAAGlD,SACY,SAAdjD,EAAA,OACGE,QADH,IACGA,OADH,EACGA,EAAa8C,UADhB,OAEG9C,QAFH,IAEGA,OAFH,EAEGA,EAAaG,cANX,QAOL,GAEPc,QAASA,EACTd,GAAG,YACH+E,KAAK,YACLC,OAAQ,kBAAG/B,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEEjD,GAAG,YACH+F,MAAOC,IACPnB,aAAczE,EAAMwF,aAAaC,QAC/B,SAACC,GAAD,OACEA,EAAGlD,SACY,SAAdjD,EAAA,OACGE,QADH,IACGA,OADH,EACGA,EAAa8C,UADhB,OAEG9C,QAFH,IAEGA,OAFH,EAEGA,EAAaG,OAKrBiG,WAA0B,QAAdtG,EACZuG,QAAS9F,EAAMwF,aACZC,QAAO,SAACC,GAAD,aAAQA,EAAGlD,SAAH,UAAaxC,EAAM0E,oBAAnB,aAAa,EAAoB9E,OAChDmG,KAAI,SAACC,GAAD,mBAAC,eACDA,GADA,IAGHC,MAAOvG,EAAEsG,EAAK5D,YAElBnD,UAAWiH,IAAW,eAAgB,CACpC,aAAgD,QAAlC,UAAAlG,EAAM0E,oBAAN,eAAoBnC,aAEpC4D,gBAAgB,mBAMtBnF,GACA,eAAC,IAAD,CAAKsD,GAAI,EAAGC,GAAI,GAAhB,UACE,eAAC,IAAD,CAAOtF,UAAU,aAAauF,IAAI,UAAlC,UACG9E,EAAE,cACH,sBAAMT,UAAU,cAAhB,kBAEF,cAAC,IAAD,CACEwF,aAAY,oBAAEzE,EAAM0E,oBAAR,aAAE,EAAoB0B,iBAAtB,QAAmC,GAC/C1F,QAASA,EACTd,GAAG,YACH+E,KAAK,YACLC,OAAQ,gBAAG/B,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEE5D,UACE6B,EAAOsF,UACH,0BACA,eAENxG,GAAG,YACHiF,QAAS/D,EAAOsF,YAAa,WAOvC,eAAC,IAAD,CAAK9B,GAAI,GAAIC,GAAI,GAAjB,UACE,cAAC,IAAD,CAAOtF,UAAU,aAAauF,IAAI,cAAlC,SACG9E,EAAE,iBAEL,cAAC,IAAD,CACE+E,aAAY,oBAAEzE,EAAM0E,oBAAR,aAAE,EAAoB2B,mBAAtB,QAAqC,GACjD3F,QAASA,EACTd,GAAG,cACH+E,KAAK,cACLC,OAAQ,gBAAG/B,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEE5D,UAAU,eACVW,GAAG,uBAMX,eAAC,IAAD,CAAK2E,GAAI,GAAItF,UAAU,yBAAvB,UACE,cAAC,IAAD,CAAQkF,KAAK,SAASlF,UAAU,OAAOsE,MAAM,UAA7C,SACG7D,EAAE,YAEL,cAAC,IAAD,CACEyE,KAAK,QACLZ,MAAM,YACNwB,SAAO,EACPC,QAAS,WACPrD,KACAnC,EAAa,OACbH,GAAQ,IAPZ,SAUGK,EAAE,0BAQf,eAAC,IAAD,CACE4G,UAAWhF,GACXO,OAAQL,GACRM,OAAQJ,GAHV,UAKE,eAAC,IAAD,CAAiBzC,UAAU,iBAAiB6C,OAAQJ,GAApD,UACGhC,EAAE,UADL,IACiBA,EAAE,QACjB,cAAC,IAAOoF,OAAR,CACE7F,UAAU,YACVsE,MAAM,UACNwB,QAA0B,YAAjB7D,GACT8D,QAAS,SAACuB,GACRpF,GAAgB,YALpB,0BAUA,cAAC,IAAO2D,OAAR,CACEvB,MAAM,UACNwB,QAA0B,aAAjB7D,GACT8D,QAAS,SAACuB,GACRpF,GAAgB,aAJpB,8BAUF,cAAC,IAAD,CACElC,UAAWiH,IAAW,CACpB,2BACsB,UAApB5E,IAAmD,QAApBA,KAHrC,SAMoB,YAAjBJ,GACC,cAAC,UAAD,CAAcG,QAASA,GAASI,cAAeA,KAG/C,cAAC,UAAD,CAAeJ,QAASA,GAASI,cAAeA,e,mJChb7C+E,UArHM,SAAC,GAAgC,IAA9BnF,EAA6B,EAA7BA,QAASI,EAAoB,EAApBA,cACzBgF,EAAW,GAGjB,EAA0BlG,mBAAS,IAAnC,mBAAOmG,EAAP,KAAcC,EAAd,OACkCpG,mBAAS,IAD3C,mBACGqG,EADH,KACgBC,EADhB,OAEwBtG,mBAAS,MAFjC,mBAEGuG,EAFH,KAEWC,EAFX,KAIA,IAAK,IAAM9C,KAAO+C,EAChBP,EAASQ,KAAKhD,GAEhB,IAAQvE,EAAMC,cAAND,EA0ER,OACE,eAAC,WAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKwH,GAAG,KAAR,SACE,qBAAKjI,UAAU,wCAAf,SACE,eAAC,IAAD,CAAYA,UAAU,yBAAtB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAcC,KAAM,OAEtB,cAAC,IAAD,CACEiI,YAAazH,EAAE,mBACf0F,SAAU,SAACgC,IApFJ,SAACC,GACpB,IAAMC,EAAM,GACRD,EAAInD,QACNuC,EAAShB,QAAO,SAACrE,GACXA,EAAKmG,cAAcC,SAASH,EAAIE,gBAClCD,EAAIL,KAAK7F,MAIfyF,EAAe,GAAD,OAAKS,IA4ELG,CAAaL,EAAE/B,OAAO7C,OACtBmE,EAASS,EAAE/B,OAAO7C,mBAO9B,qBACEvD,UAAU,mBACVoE,MAAO,CACLqE,eAAgB,UAElB9H,GAAG,kBALL,SA7DgB,WAClB,IAAM+H,EAAejB,EAAMxC,OAAS0C,EAAcH,EAClD,OAAIkB,EAAazD,OACRyD,EAAa5B,KAAI,SAAC3E,GACvB,IAAMwG,EAAUZ,EAAM5F,GACtB,OACE,eAAC,WAAD,WACE,cAAC,kBAAD,CAAiByG,KAAI,WAAMzG,EAAN,OAArB,SACE,cAAC,IAAD,CACExB,GAAIwB,EACJnC,UAAWiH,IACT,kDACA,CACEY,OAAQA,IAAW1F,IAGvB4D,QAAS,kBApCK,SAAC5D,GAC3B,IAAM0G,EAAU,kBAAc1G,GAC9BC,EAAQyG,GACRf,EAAU3F,GAcVK,GAAc,GAmBasG,CAAoB3G,IARrC,SAUE,eAAC,IAAD,WACE,qBAAKnC,UAAU,eAAf,SACE,cAAC2I,EAAD,MAEF,mBAAG3I,UAAU,oCAAb,SAAkDmC,WAIxD,cAAC,IAAD,CAAqB4G,UAAU,MAAM3C,OAAQjE,EAA7C,SACGA,EAAK6G,QAAQ,WAAY,OAAOC,WArBtB9G,MA4BjB,qBAAKnC,UAAU,yDAAf,SACE,oBAAIA,UAAU,OAAd,SAAsBS,EAAE,uBAiCzByI,U,oICsEM3B,UAxLM,SAAC,GAAgC,IAA9BnF,EAA6B,EAA7BA,QAASI,EAAoB,EAApBA,cACzBgF,EAAW,GACX2B,EAAqB,GAE3B,EAA0B7H,mBAAS,IAAnC,mBAAOmG,EAAP,KAAcC,EAAd,OACkCpG,mBAAS,IAD3C,mBACgBsG,GADhB,aAEsDtG,mBAAS,IAF/D,mBAEG8H,EAFH,KAE0BC,EAF1B,OAGwB/H,mBAAS,MAHjC,mBAGGuG,EAHH,KAGWC,EAHX,KAIA,EAAsCxG,mBAAS,eAA/C,mBAAoBC,GAApB,WACQd,EAAMC,cAAND,EA+CR,IAAMqI,EAAsB,SAAC3G,GAE3B,IAPyB6C,EAOnB6D,EAAU,oBAPS7D,EAOwB7C,EANpC6C,EAAIgE,QAAQ,WAAY,OACvBM,MAAM,KAAKC,KAAK,KAAKjB,eAKoBkB,UAAU,IACjEpH,EAAQyG,GACRf,EAAU3F,GACVK,GAAc,IA+CVzB,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAK,eACpCJ,EAAWC,cA2CjB,OAzCA2I,qBAAU,WAER,GADAC,QAAQC,IAAI5I,EAAMsC,KAAKuG,SAAS3E,QACG,IAA/BlE,EAAMsC,KAAKuG,SAAS3E,OAAc,CAEpC1D,EAAe,GAAD,OAAId,EAAE,gBAAN,YAAyBA,EAAE,WAFL,eAIzBuE,GACT,GAAIA,EAAIuD,SAAS,YAAa,CAC5Bf,EAASQ,KAAKhD,GAEd,IAAM2D,EAAUZ,EAAM/C,GACtBmE,EAAmBnB,KACjB,eAAC,WAAD,WACE,cAAC,IAAD,CACErH,GAAIqE,EACJhF,UAAWiH,IACT,kDACA,CACEY,OAAQA,IAAW7C,IAGvBe,QAAS,kBAAM+C,EAAoB9D,IARrC,SAUE,eAAC,IAAD,WACE,qBAAKhF,UAAU,eAAf,SACE,cAAC2I,EAAD,MAEF,mBAAG3I,UAAU,oCAAb,SAAkDgF,SAGtD,cAAC,IAAD,CAAqB+D,UAAU,MAAM3C,OAAQpB,EAA7C,SACGA,EAAIgE,QAAQ,WAAY,OAAOC,WAnBrBjE,MANrB,IAAK,IAAMA,KAAO+C,EAAQ,EAAf/C,GA+BXnE,EAASgJ,YAAmB,CAAED,SAAUT,QAEzC,IAGD,eAAC,WAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKlB,GAAG,KAAR,SACE,qBAAKjI,UAAU,wCAAf,SACE,eAAC,IAAD,CAAYA,UAAU,yBAAtB,UACE,cAAC,IAAD,IAGA,cAAC,IAAD,CACEkI,YAAazH,EAAE,mBACf0F,SAAU,SAACgC,IAxJJ,SAACC,GACpB,IAAMC,EAAM,GACNyB,EAAgB,GAClB1B,EAAInD,QACNuC,EAAShB,QAAO,SAACrE,GACf,GAAIA,EAAKmG,cAAcC,SAASH,EAAIE,eAAgB,CAClDD,EAAIL,KAAK7F,GAET,IAAMwG,EAAUZ,EAAM5F,GACtB2H,EAAc9B,KACZ,eAAC,WAAD,WACE,cAAC,IAAD,CACErH,GAAIwB,EACJnC,UAAWiH,IACT,kDACA,CACEY,OAAQA,IAAW1F,IAGvB4D,QAAS,kBAAM+C,EAAoB3G,IARrC,SAUE,eAAC,IAAD,WACE,qBAAKnC,UAAU,eAAf,SACE,cAAC2I,EAAD,MAEF,mBAAG3I,UAAU,oCAAb,SAAkDmC,SAGtD,cAAC,IAAD,CAAqB4G,UAAU,MAAM3C,OAAQjE,EAA7C,SACGA,EAAK6G,QAAQ,WAAY,OAAOC,WAnBtB9G,QA0BvByF,EAAe,GAAD,OAAKS,IACnBgB,EAAyB,GAAD,OAAKS,IAoHftB,CAAaL,EAAE/B,OAAO7C,OACtBmE,EAASS,EAAE/B,OAAO7C,mBAO9B,qBACEvD,UAAU,mBACVoE,MAAO,CACLqE,eAAgB,UAElB9H,GAAG,kBALL,SAOG8G,EAAMxC,OAASmE,EAAwBrI,EAAMsC,KAAKuG,gB,oYChHrDG,EAASC,IAAiBC,KAG1BC,EAAoBC,sBAAW,SAACC,EAAOC,GAAR,OACnC,qBAAKrK,UAAU,aAAf,SACE,cAAC,IAAD,aAAOkF,KAAK,WAAWmF,IAAKA,GAASD,SAKnCE,EAAe,SAAC,GAShB,EARJvJ,MAQK,IAPLwJ,EAOI,EAPJA,cACAC,EAMI,EANJA,cACAC,EAKI,EALJA,YACAjC,EAII,EAJJA,aACAkC,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAC,EACI,EADJA,qBAEQnK,EAAMC,cAAND,EACFoK,EAAUzJ,qBAAW0J,KACrBjK,EAAWC,cAEXiK,GADe/J,aAAY,SAACC,GAAD,OAAWA,EAAM+J,YACjCC,eAEjB,OACE,qBAAKjL,UAAU,wDAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKkL,GAAG,IAAIlL,UAAU,gCAAtB,SACE,sBAAKA,UAAU,kCAAf,UACE,uBAAOD,QAAQ,gBAAf,SAAgCU,EAAE,UAClC,eAAC,IAAD,CACET,UAAU,QACVkF,KAAK,SACLvE,GAAG,gBACH4C,MAAOkH,EACPtE,SAAUqE,EACVpG,MAAO,CAAE+G,MAAO,QANlB,UAQE,wBAAQ5H,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAEF,uBAAOxD,QAAQ,gBAAf,SAAgCU,EAAE,kBAGtC,eAAC,IAAD,CACEyK,GAAG,IACHlL,UAAU,sJAFZ,WAIc,OAAX2K,QAAW,IAAXA,OAAA,EAAAA,EAAa1F,QAAS,GACvB4F,EAAQO,IAAI,SAAUC,eAAeC,QAAQ,sBAC3C,qBAAKtL,UAAU,8CAAf,SACE,eAAC,IAAD,CACEA,UAAU,eACVsE,MAAM,SACNyB,QAAS6E,EAHX,UAKGnK,EAAE,UALL,IAKiBkK,EAAY1F,OAL7B,IAKsCxE,EAAE,YAAD,OAAayC,mBAGpD,KACJ,sBAAKlD,UAAU,8CAAf,UACE,wBAAOA,UAAU,OAAOD,QAAQ,iBAAhC,UACGU,EAAE,UADL,OAGA,cAAC,IAAD,CACEE,GAAG,iBACHX,UAAU,cACVkF,KAAK,OACL3B,MAAOmH,EACPvE,SAAU,SAACgC,GAAD,OAAOK,EAAaL,EAAE/B,OAAO7C,aAI3C,sBAAKvD,UAAU,iDAAf,UACE,eAAC,IAAD,CAAsBA,UAAU,OAAhC,UACE,eAAC,IAAD,CAAgBsE,MAAM,YAAYiH,OAAK,EAACzF,SAAO,EAA/C,UACE,cAAC,IAAD,CAAO9F,UAAU,uBACjB,sBAAMA,UAAU,eAAhB,SAAgCS,EAAE,eAEpC,eAAC,IAAD,WACE,eAAC,IAAD,CACET,UAAU,QACV+F,QAAS,kBACPlF,EACE2K,qBAAW,CACTC,SAAU,SACVC,YAAa,MACbC,SAAUZ,EAASY,SACnBC,OAAO,EACPC,eAAe,EACfC,YAAa,IACbC,WAAY,wCAXpB,UAgBE,cAAC,IAAD,CAAS/L,UAAU,uBACnB,sBAAMA,UAAU,eAAhB,SAAgCS,EAAE,cAEpC,eAAC,IAAD,CACET,UAAU,QACV+F,QAAS,kBACPlF,EACE2K,qBAAW,CACTC,SAAU,SACVC,YAAa,MACbC,SAAUZ,EAASY,SACnBG,YAAa,IACbC,WAAY,wCATpB,UAcE,cAAC,IAAD,CAAM/L,UAAU,uBAChB,sBAAMA,UAAU,eAAhB,oBAGF,eAAC,IAAD,CACEA,UAAU,QACV+F,QAAS,kBACPlF,EACE2K,qBAAW,CACTC,SAAU,SACVC,YAAa,MACbC,SAAUZ,EAASY,SACnBE,eAAe,EACfC,YAAa,IACbC,WAAY,wCAVpB,UAeE,cAAC,IAAD,CAAM/L,UAAU,uBAChB,sBAAMA,UAAU,eAAhB,sBAGF,eAAC,IAAD,CACEA,UAAU,QAEV+F,QAAS,kBACPlF,EACE2K,qBAAW,CACTC,SAAU,SACVC,YAAa,MACbC,SAAUZ,EAASY,SACnBE,eAAe,EACfC,YAAa,IACbC,WAAY,wCAXpB,UAgBE,cAAC,IAAD,CAAU/L,UAAU,uBACpB,sBAAMA,UAAU,eAAhB,0BAUL6K,EAAQO,IACP,OACAC,eAAeC,QAAQ,sBAEvB,eAAC,IAAD,CACEtL,UAAU,eACVsE,MAAM,UACNyB,QAASwE,EAHX,UAMG9J,EAAE,WANL,IAMkBA,EAAEyC,gBAElB,iBAyeD8I,UAjeF,WACX,IAAMnL,EAAWC,cACXC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,gBAEnCT,EAAMC,cAAND,EACFoK,EAAUzJ,qBAAW0J,KAEnB3J,EAAWC,qBAAWC,KAAtBF,OACR,EAA+BG,mBAAS,QAAxC,mBAAO2K,EAAP,KAAiBC,EAAjB,KACA,EAAoC5K,mBAAS,IAA7C,mBAAOoJ,EAAP,KAAmByB,EAAnB,KACA,EAAsC7K,mBAAS,GAA/C,mBAAO8K,EAAP,KAAoBC,EAApB,KACA,EAAwB/K,mBAAS,MAAjC,mBAAOgL,EAAP,KAAaC,EAAb,KACA,EAAsCjL,mBAAS,IAA/C,mBAAOmJ,EAAP,KAAoB+B,EAApB,KACA,EAAwClL,mBAAS,IAAjD,mBAAOmL,GAAP,KAAqBC,GAArB,KACA,GAA0CpL,oBAAS,GAAnD,qBAAOqL,GAAP,MAAsBC,GAAtB,MAEA,GAAsCtL,oBAAS,GAA/C,qBAAOuL,GAAP,MAAoBC,GAApB,MACA,GAA8BxL,oBAAS,GAAvC,qBAAOyL,GAAP,MAAgBC,GAAhB,MACA,GAAsC1L,mBAAS,eAA/C,qBAAoBC,IAApB,aACA,GAAkCD,oBAAS,GAA3C,qBAAO2L,GAAP,MAAkBC,GAAlB,MACA,GAAkC5L,mBAAS,MAA3C,qBAAOhB,GAAP,MAAkBC,GAAlB,MAuCM4M,GAAmB,WACvBL,IAAgBD,IAChBK,IAAcD,IACdG,eAGI7C,GAAgB,WAEpBhK,GAAa,OACbuM,IAAgBD,IAChBK,IAAcD,IACdI,YAAeF,KAGXG,GAAY,uCAAG,WAAO3M,GAAP,SAAA4M,EAAA,sEACExD,EAAOyD,KAAK,CAC/BrK,MAAM,GAAD,OAAK1C,EAAE,kBACZmI,KAAK,GAAD,OAAKnI,EAAE,+BAAP,YAAyCA,EAAEyC,aAA3C,KACJf,KAAM,UACNsL,kBAAkB,EAClBC,kBAAkB,GAAD,OAAKjN,EAAE,eAAP,YAAyBA,EAAEyC,aAA3B,KACjByK,iBAAiB,GAAD,OAAKlN,EAAE,WACvBmN,YAAa,CACXC,cAAe,kBACfC,aAAc,+BAEhBC,gBAAgB,IAZC,cAcRxK,QACThC,GAAe,GAAD,OAAId,EAAE,YAAN,iBAA0BA,EAAEyC,eAC1C8J,IAAW,GACXnM,EAASmN,qBAAWrN,IAAKmD,MAAK,SAACC,GAEE,cAA3BA,EAAIC,KAAKC,eACX+I,IAAW,GACX9I,IAAMC,QAAN,UAAiB1D,EAAE,wBAAnB,YAA8CA,EAAEyC,cAAc,CAC5DkB,MAAO,CACLC,QAAS,OACTC,MAAOnD,EAAOgD,QAAQI,KACtBC,OAAO,aAAD,OAAerD,EAAOgD,QAAQI,OAEtCE,UAAW,CACTC,QAASvD,EAAOgD,QAAQI,SAGQ,aAA3BR,EAAIC,KAAKC,gBAClB+I,IAAW,GACX9I,IAAMU,MAAMb,EAAIc,QAAQC,QAAS,CAC/BV,MAAO,CACLC,QAAS,OACTC,MAAOnD,EAAO4D,OAAOR,KACrBC,OAAO,aAAD,OAAerD,EAAO4D,OAAOR,OAErCE,UAAW,CACTC,QAASvD,EAAO4D,OAAOR,aAxCd,2CAAH,sDAgDZqG,GAAoB,uCAAG,8BAAA2C,EAAA,6DACrBU,EAAoBxB,GAAaxH,OADZ,SAEN8E,EAAOyD,KAAK,CAC/BrK,MAAM,GAAD,OAAK1C,EAAE,kBACZmI,KAAK,GAAD,OAAKnI,EAAE,mBAAP,YAA6BwN,EAA7B,YAAkDxN,EACpD,mDADE,KAGJ0B,KAAM,UACNsL,kBAAkB,EAClBC,kBAAkB,GAAD,OAAKjN,EAAE,eAAP,YAAyBwN,EAAzB,YAA8CxN,EAC7DyC,aADe,KAGjByK,iBAAiB,GAAD,OAAKlN,EAAE,WACvBmN,YAAa,CACXC,cAAe,kBACfC,aAAc,+BAEhBC,gBAAgB,IAjBS,cAmBhBxK,QACThC,GAAe,GAAD,OACTd,EAAE,YADO,YACQwN,EADR,iBACkCxN,EAAEyC,eAElD8J,IAAW,GACLtJ,EAAS+I,GAAa3F,KAAI,SAACyG,GAAD,OAAOA,EAAE5M,MAEzCE,EAASqN,gCAAsB,CAAEvN,GAAI+C,KAAWI,MAAK,SAACC,GAErB,cAA3BA,EAAIC,KAAKC,eACXyI,GAAgB,IAChBE,IAAkBD,IAClBK,IAAW,GACX9I,IAAMC,QAAN,UACK1D,EAAE,wBADP,YACkCwN,EADlC,YACuDxN,EAAEyC,cACvD,CACEkB,MAAO,CACLC,QAAS,OACTC,MAAOnD,EAAOgD,QAAQI,KACtBC,OAAO,aAAD,OAAerD,EAAOgD,QAAQI,OAEtCE,UAAW,CACTC,QAASvD,EAAOgD,QAAQI,SAIM,aAA3BR,EAAIC,KAAKC,gBAClB+I,IAAW,GACX9I,IAAMU,MAAMb,EAAIc,QAAQC,QAAS,CAC/BV,MAAO,CACLC,QAAS,OACTC,MAAOnD,EAAO4D,OAAOR,KACrBC,OAAO,aAAD,OAAerD,EAAO4D,OAAOR,OAErCE,UAAW,CACTC,QAASvD,EAAO4D,OAAOR,aAtDN,2CAAH,qDAwGpB4J,GAAaC,sBAAYC,KAZN,SAACC,GACxBzN,EACE0N,sBAAY,CACVtC,WACAuC,OAAQF,EACRhC,OACAmC,KAAMrC,EACNnH,OAAQwF,OAK4C,KAAM,IAiD1DiE,GAAoBN,uBAAY,SAACnN,GACrCyL,GAAgBzL,EAAMwL,gBACrB,IAEGkC,GAAU,CACd,CACEjJ,KAAMjF,EAAE,SACRmO,QAAQ,EACRC,UAAU,EAEVC,UAAW,QACXC,SAAU,SAACC,GAAD,OAASA,EAAI7L,OACvB8L,KAAM,SAACD,GAAD,OAASA,EAAI7L,QAErB,CACEuC,KAAMjF,EAAE,eACRmO,QAAQ,EACRC,UAAU,EAEVC,UAAW,cACXC,SAAU,SAACC,GAAD,OAASA,EAAI5H,aACvB6H,KAAM,SAACD,GAAD,OAASA,EAAI5H,cAErB,CACE1B,KAAMjF,EAAE,cACRmO,QAAQ,EACRC,UAAU,EAEVC,UAAW,YACXC,SAAU,SAACC,GAAD,OAASA,EAAI7H,WACvB8H,KAAM,SAACD,GAAD,OAASA,EAAI7H,YAErB,CACEzB,KAAMjF,EAAE,WACRmO,QAAQ,EACRzD,MAAO,QACP8D,KAAM,SAACD,GAAD,OACJ,sBAAKhP,UAAU,4BAAf,UACG6K,EAAQO,IACP,SACAC,eAAeC,QAAQ,sBAEvB,qCACE,cAAC,IAAOzF,OAAR,CACElF,GAAG,aACHX,UAAU,0BACVsE,MAAM,cACNyB,QAAS,SAACoC,GACRA,EAAE+G,iBACF5B,GAAa0B,EAAIrO,KANrB,SASE,cAAC,IAAD,CAAQV,KAAM,OAEhB,cAAC,IAAD,CAAqB8I,UAAU,OAAO3C,OAAO,aAA7C,SACG3F,EAAE,eAGL,KAEHoK,EAAQO,IACP,SACAC,eAAeC,QAAQ,sBAEvB,qCACE,cAAC,IAAOzF,OAAR,CACE7F,UAAU,0BACVsE,MAAM,YACN3D,GAAG,WACHoF,QAAS,SAACoC,GAjUL,IAACgH,EAkUJhH,EAAE+G,iBAlUEC,EAmUOH,EAlUzBzO,GAAa,QACR6O,kBAwBH7N,GAAe,GAAD,OACTd,EAAE,WADO,YACOA,EAAE,UADT,YACsBA,EAAE,QADxB,YACmCA,EAAEyC,eAEnD8J,IAAW,GACXnM,EAASwO,sBAAYF,IAAUrL,MAAK,WAClCkJ,IAAW,GACXE,IAAa,QA7Bf3L,GAAe,GAAD,OACTd,EAAE,WADO,YACOA,EAAE,UADT,YACsBA,EAAE,QADxB,YACmCA,EAAEyC,eAEnD8J,IAAW,GACXnM,EAAS8D,sBAAYwK,EAAQxO,KAAKmD,MAAK,SAACC,GACP,aAA3BA,EAAIC,KAAKC,eACX+I,IAAW,GACX9I,IAAMU,MAAMb,EAAIc,QAAQC,QAAS,CAC/BV,MAAO,CACLC,QAAS,OACTC,MAAOnD,EAAO4D,OAAOR,KACrBC,OAAO,aAAD,OAAerD,EAAO4D,OAAOR,OAErCE,UAAW,CACTC,QAASvD,EAAO4D,OAAOR,UAI3ByI,IAAW,GACXE,IAAa,SAuST,SASE,cAAC,IAAD,CAAOjN,KAAM,OAEf,cAAC,IAAD,CAAqB8I,UAAU,OAAO3C,OAAO,WAA7C,SACG3F,EAAE,aAGL,WAMN6O,GAAeC,mBACnB,kBACExO,EAAMyO,UACFb,GAAQ7H,KAAI,SAAC2I,GAAD,mBAAC,eACRA,GADO,IAEVZ,UAAU,EACVI,KAAM,SAACD,GAAD,OACJ,cAAC,IAAD,CACEU,GAAI,CAAEC,QAASxO,EAAOyO,KAAKC,OAC3BC,UAAU,OACV9P,UAA2B,YAAhByP,EAAO/J,KAAqB,OAAS,GAChDyF,MAAuB,YAAhBsE,EAAO/J,KAAqB,GAAK,OACxCqK,OAAQ,WAIdpB,GAAQ7H,KAAI,SAAC2I,GAAD,sBACPA,QAEX,CAAC1O,EAAMyO,UAAWb,KAuCpB,OAfAlF,qBAAU,YACkB,IAAtB1I,EAAMsC,KAAK4B,SAAkBlE,EAAMyO,WAAaQ,mBAClDzO,GAAe,GAAD,OAAId,EAAE,gBAAN,YAAyBA,EAAEyC,eACzCrC,EACE0N,sBAAY,CACVtC,WACAK,OACAkC,OAAQ9D,EACR+D,KAAMrC,EACNnH,OAAQwF,QAIb,CAAC5J,EAAUE,EAAMsC,KAAK4B,OAAQgH,EAAUK,EAAMF,IAG/C,eAAC,WAAD,WACE,cAAC,IAAD,CAAUtJ,SAAUiK,GAAS9J,OAAQ,cAAC,IAAD,IAArC,SACE,cAAC,IAAD,CAAMjD,UAAU,kBAAhB,SACE,qBAAKA,UAAU,kDAAf,SACE,cAAC,IAAD,CACEiQ,UAAQ,EACRC,WAAS,EACTC,YAAU,EACVC,YAAU,EACVC,YAAU,EACVC,kBAAgB,EAChBC,oBAAqBxP,EAAMyP,MAC3BC,oBAtLa,WACvB,IAAMC,EAAQC,OAAOC,KAAKC,KAAK9P,EAAMyP,MAAQ/F,IAE7C,OACE,cAAC,IAAD,CACEqG,cAAe,GACfC,UAAW,GACXC,UAAWN,GAAS,EACpBO,gBAAgB,SAChBC,UAA2B,IAAhB9E,EAAoBA,EAAc,EAAI,EACjD+E,aAAc,SAAC1C,GAAD,OA3EK,SAACA,GAExB5N,EACE0N,sBAAY,CACVtC,WACAK,OACAkC,OAAQ9D,EACRzF,OAAQwF,EACRgE,KAAMA,EAAK2C,SAAW,KAG1B/E,EAAeoC,EAAK2C,SAAW,GAgEHC,CAAiB5C,IACzC6C,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBACE,6DAqKIC,gBAAc,EACdC,qBAAsBpD,GACtBqD,yBAAuB,EAEvBC,kBAAmBrF,GACnBsF,wBAAyB/H,EACzBgI,gBAAiB,cAAC,IAAD,IAGjB9N,MAAO,CAAE,aAAc,SACvB+N,kBAAgB,EAChBC,gBAAc,EACdzD,QAASW,GACT+C,OApNO,SAAC5C,EAAQ6C,GAE1BpG,EAAWoG,GACX/F,EAAQkD,EAAOX,WAEfjO,EACE0N,sBAAY,CACVtC,WACAK,OACAkC,OAAQ9D,EACR+D,KAAMrC,EACNnH,OAAQwF,MA0MF8H,SAAU,cAAC,IAAD,IACVvS,UAAU,kBACVqD,KAlES,WACnB,IAAMmP,EAAU,CACdhE,OAAQ9D,GAEJ+H,EAAahP,OAAOiP,KAAKF,GAASG,MAAK,SAAUC,GACrD,OAAOJ,EAAQI,GAAG3N,OAAS,KAE7B,OAAKlE,EAAMyO,UAUFqD,MAAM,IAAIC,KAAK,IATlB/R,EAAMsC,KAAK4B,OAAS,EACflE,EAAMsC,KACkB,IAAtBtC,EAAMsC,KAAK4B,QAAgBwN,EAC7B,QADF,EAwDO/J,GACNqK,mBACE,cAACzI,EAAD,CACEvJ,MAAOA,EACP2J,WAAYA,EACZD,YAAaA,EACbjC,aAnOK,SAAClB,GAEpB6E,EAAc7E,GACd6G,GAAW7G,IAiOGkD,cAjQM,SAACrC,GAErB,IAAM5E,EAAQyP,SAAS7K,EAAE8K,cAAc1P,OACvC1C,EACE0N,sBAAY,CACVtC,WACAK,OACAkC,OAAQ9D,EACRzF,OAAQ1B,EACRkL,KAAMrC,KAGVI,EAAejJ,IAsPDgH,cAAeA,GACfI,YAAa8B,GACb7B,qBAAsBA,aAUjCqC,IACC,cAAC,UAAD,CACE3M,UAAWA,GACXH,KAAM8M,GACN7M,QAASmK,GACTlK,YAAY,EACZE,aAAcA,U,+QCjvBX2S,EAAS,CACpB,CACElO,IADF,QAEEmO,OAAQC,YAAI,OAAIA,eAElB,CACEpO,IADF,OAEEmO,OAAQC,YAAI,OAAIA,uBAElB,CACEpO,IADF,oBAEEmO,OAAQC,YAAI,OAAIA,uBAElB,CACEpO,IADF,iBAEEmO,OAAQC,YAAI,OAAIA,oBAElB,CACEpO,IADF,mBAEEmO,OAAQC,YAAI,OAAIA,sBAElB,CACEpO,IADF,SAEEmO,OAAQC,YAAI,OAAIA,gBAElB,CACEpO,IADF,kBAEEmO,OAAQC,YAAI,OAAIA,qBAElB,CACEpO,IADF,WAEEmO,OAAQC,YAAI,OAAIA,mDAElB,CACEpO,IADF,aAEEmO,OAAQC,YAAI,OAAIA,iBC/BdC,EAAO,aAEE,SAASrJ,EAAT,GAGb,SAASsJ,EAAT,GACE,IAAMC,EAAN,GACMC,EAAN,GACMC,EAAYP,OAAWQ,YAAK,OAAIA,EAAtC,OASA,OARAjQ,2BAA+B,YAAkB,aAAjB,EAAiB,KAAlB,EAAkB,KAC3CgQ,eAA2BE,yBAA/B,IACEJ,OACAC,UAEAA,UAGG,CAACD,EAAR,GAEF,SAAS5N,EAAT,KACElC,2BAAoC,YAAkB,aAAjB,EAAiB,KAAlB,EAAkB,KAE9CmQ,EADQV,QAAYQ,YAAK,OAAIA,QAAnC,KACmBA,OAAnB,GACAG,sBACAT,kCAIJ,SAASU,EAAT,GACEV,gCAAkCQ,YAChCC,uCAEFT,0BAGF,mEAAO,EAAP,qDAeEW,SAAK,KAAuB,WAC1BC,KAAKC,qBAAuB,GAC5BD,KAAKE,SAAWzQ,mBAAhB,GACA,MAAmC6P,EAAmBU,KAAtD,mBAAM,EAAN,KAAM,EAAN,KACMG,EAAeX,WAArB,EACMY,EAAkBZ,cAAxB,EACA,OAAO,EAAP,uCACE/P,OAAA,YAA+B,CAC7B4Q,QAASC,YACP3O,EAAO,EAAPA,GACAwO,MAEFI,WAAYD,YACVF,KACAN,WA7BV,oBAmCEU,SAAM,GACJ/Q,cAAcuQ,KAAdvQ,YACAqQ,QACA,MAAmCR,EAAmBU,KAAtD,mBAAM,EAAN,KAAM,EAAN,KACA,6CACArO,EAAOqO,KAAPrO,MAxCJ,2BACS8O,SAAY,GACjB,GAAId,yBAAqBe,EAArBf,KAAiCA,yBAAqBe,EAA1D,IAAoE,CAClE,IAAMC,EAAN,GAMA,MALC,CAAC,QAAS,OAAQ,QAAQC,SAAQ,mBACjC,IAAIF,OACFC,KAAeD,EAAfC,OAGGA,EAEP,OAAOE,eAAP,OAXC,EAAP,CAAO,G,+ICgCMC,IAnDK,SAAC1K,GACnB,IAAQ3J,EAAMC,cAAND,EAEA4C,EAA8B+G,EAA9B/G,KAAMF,EAAwBiH,EAAxBjH,MAAO4R,EAAiB3K,EAAjB2K,GAAIC,EAAa5K,EAAb4K,SAqBzB,OACE,qBACEhV,UAAS,6CACP+U,GAAa,IAAPA,EAAN,aAAuBA,GAAO,QAFlC,SAKE,sBAAK/U,UAAU,sBAAf,UACE,sBAAKA,UAAU,SAAf,UACGmD,EACC,oBAAInD,UAAU,wCAAd,SAAuDmD,IAEvD,GAEF,qBAAKnD,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBiV,IAAI,KAApB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAczU,EAAE,YAlCrB4C,EAAKyD,KAAI,SAACC,EAAMoO,GACrB,IAAMC,EAAUrO,EAAKsO,KAAOC,IAAOC,WAC7BC,EAAanS,EAAK4B,OAAS,IAAMkQ,EACvC,OACE,cAAC,IAAD,CACEF,IAAI,KAEJpN,QAAS2N,EACTxV,UAAWiH,IAAW,CAAE,gBAAiBuO,IAJ3C,SAME,cAACJ,EAAD,2BAAcrO,EAAKsO,KAAO,CAAEH,GAAInO,EAAKsO,MAAS,IAA9C,aACGtO,EAAK5D,UALHgS,cAkCP,qBAAKnV,UAAU,SAAf,gBAAyBgV,QAAzB,IAAyBA,IAAY,Y","file":"static/js/138.dfc89508.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\nimport { Fragment, useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport { Check, X } from \"react-feather\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  Offcanvas,\n  OffcanvasHeader,\n  OffcanvasBody\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors, sortedObject } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById\n} from \"../store\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\nimport classnames from \"classnames\"\nimport { TextareaAutosize } from \"@mui/material\"\nimport { renderIcon } from \"../store/my_menu\"\nimport IconsFeather from \"../icons/feather\"\nimport IconsMaterial from \"../icons/material\"\n\nconst CustomLabel = ({ htmlFor }) => {\n  return (\n    <Label className=\"form-check-label\" htmlFor={htmlFor}>\n      <span className=\"switch-icon-left\">\n        <Check size={14} />\n      </span>\n      <span className=\"switch-icon-right\">\n        <X size={14} />\n      </span>\n    </Label>\n  )\n}\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState,\n  currentData = null\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const {\n    control,\n    setError,\n    setValue,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const [isSeparator, setIsSeparator] = useState(currentData.is_separator)\n  const [iconCategory, setIconCategory] = useState(\"feather\")\n  const [icon, setIcon] = useState(currentData?.icon)\n\n  const [canvasPlacement, setCanvasPlacement] = useState(\"start\")\n  const [canvasOpen, setCanvasOpen] = useState(false)\n  const toggleCanvasStart = () => {\n    setIconCategory(\"feather\")\n    setCanvasPlacement(\"start\")\n    setCanvasOpen(!canvasOpen)\n  }\n\n  const toggleCanvasBottom = () => {\n    setIconCategory(\"feather\")\n    setCanvasPlacement(\"bottom\")\n    setCanvasOpen(!canvasOpen)\n  }\n\n  const countChanges = (data) => {\n    // if (formState === \"edit\") {\n    //   const storeData = { ...sortedObject(store.selectedData) }\n    //   delete storeData[\"id\"]\n    //   for (let key in storeData) {\n    //     if (!(key in data)) delete storeData[key]\n    //   }\n    //   // console.log(JSON.stringify(sortedObject(storeData)))\n    //   // console.log(JSON.stringify(sortedObject(data)))\n    //   return (\n    //     JSON.stringify(sortedObject(storeData)) !==\n    //     JSON.stringify(sortedObject(data))\n    //   )\n    // } else {\n    //   return true\n    // }\n\n    return true\n  }\n\n  const updateDataToApi = (data) => {\n    // console.log(data)\n    data[\"is_separator\"] = isSeparator\n    data[\"icon\"] = icon\n    // console.log(data)\n    if (data.parent_id) {\n      if (data.parent_id.value >= 9000) {\n        data[\"id_app\"] = data.parent_id.id_app\n        data[\"parent_id\"] = null\n      } else {\n        data[\"parent_id\"] = data.parent_id.value\n      }\n    }\n    // console.log(data)\n    if (countChanges(data)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null\n        }) ||\n        data[\"parent_id\"] === null\n      ) {\n        if (!isSeparator && data[\"routePath\"] === \"\") {\n          for (const key in data) {\n            if (data[key] !== null && data[key]?.length === 0) {\n              setError(key, {\n                type: \"manual\"\n              })\n            }\n          }\n        } else {\n          setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n          dispatch(putData(data)).then((res) => {\n            // console.log(res)\n            if (res.meta.requestStatus === \"fulfilled\") {\n              setShow(!show)\n              toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n                style: {\n                  padding: \"16px\",\n                  color: colors.success.main,\n                  border: `1px solid ${colors.success.main}`\n                },\n                iconTheme: {\n                  primary: colors.success.main\n                }\n              })\n              if (detailPage) {\n                dispatch(getDataById(id))\n              }\n            } else if (res.meta.requestStatus === \"rejected\") {\n              toast.error(res.payload.message, {\n                style: {\n                  padding: \"16px\",\n                  color: colors.danger.main,\n                  border: `1px solid ${colors.danger.main}`\n                },\n                iconTheme: {\n                  primary: colors.danger.main\n                }\n              })\n            }\n          })\n        }\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = (data) => {\n    // console.log(data)\n    if (\n      Object.values(data).every((field) => {\n        return field !== null\n      })\n    ) {\n      if (!isSeparator && data[\"routePath\"] === \"\") {\n        for (const key in data) {\n          if (data[key] !== null && data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      } else {\n        setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n\n        // console.log(currentData, data)\n\n        if (!currentData.is_app_header) {\n          data[\"parent_id\"] = currentData.id\n        } else {\n          data[\"parent_id\"] = null\n        }\n\n        data[\"id_app\"] = currentData.id_app\n        data[\"is_separator\"] = isSeparator\n        data[\"icon\"] = icon\n        // console.log(data)\n\n        dispatch(postData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      }\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key]?.length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  const changeSeparator = (data) => {\n    // console.log(data.target.checked)\n    setIsSeparator(data.target.checked)\n    if (data.target.checked) {\n    }\n  }\n\n  // const changeParentId = (data) => {\n  //   console.log(data)\n\n  //   if (data.is_app_header) {\n  //     setValue(\"parent_id\", { value: null })\n  //   } else {\n  //     setValue(\"parent_id\", data)\n  //   }\n\n  //   // if (data?.routePath) {\n  //   //   setValue(\"parent_id\", data.id)\n  //   //   setValue(\"routePath\", `${data?.routePath}/`)\n  //   // }\n  // }\n\n  // useEffect(() => {\n  //   console.log(store.dataDropdown)\n  // }, [])\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\n            </h2>\n            {formState !== \"edit\" && (\n              <p className=\"mb-1\">\n                {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\n              </p>\n            )}\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              <Col md={9} xs={7}>\n                <Label className=\"form-label\" for=\"title\">\n                  {t(\"Title\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.title ?? \"\"}\n                  control={control}\n                  id=\"title\"\n                  name=\"title\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.title\n                          ? \"form-control is-invalid\"\n                          : \"form-control\"\n                      }\n                      id=\"title\"\n                      invalid={errors.title && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              {!isSeparator && (\n                <Col md={1} xs={2}>\n                  <Label className=\"form-label\" for=\"icon\">\n                    {t(\"Icon\")}\n                    <span className=\"text-danger\">*</span>\n                  </Label>\n                  <div>\n                    <Button.Ripple\n                      className=\"btn-icon w-100\"\n                      outline\n                      color=\"primary\"\n                      size=\"sm\"\n                      onClick={toggleCanvasBottom}\n                    >\n                      {renderIcon(icon, \"14\")}\n                    </Button.Ripple>\n                  </div>\n                  {/* <Controller\n                    defaultValue={store.selectedData?.icon ?? \"\"}\n                    control={control}\n                    id=\"icon\"\n                    name=\"icon\"\n                    render={({ field }) => (\n                      <Input\n                        {...field}\n                        className={\n                          errors.icon\n                            ? \"form-control is-invalid\"\n                            : \"form-control\"\n                        }\n                        id=\"icon\"\n                        invalid={errors.icon && true}\n                      />\n                    )}\n                  /> */}\n                </Col>\n              )}\n\n              <Col md={2} xs={3}>\n                <Label className=\"form-label\" for=\"is_separator\">\n                  {t(\"Separator\")}\n                </Label>\n                <div\n                  style={{ marginTop: \"5px\" }}\n                  className=\"form-switch form-check-primary\"\n                >\n                  <Input\n                    type=\"switch\"\n                    defaultChecked={isSeparator}\n                    onChange={(data) => {\n                      changeSeparator(data)\n                    }}\n                    id=\"icon-primary\"\n                    name=\"icon-primary\"\n                  />\n                  <CustomLabel htmlFor=\"icon-primary\" />\n                </div>\n              </Col>\n\n              <Col md={6} xs={12}>\n                <Label className=\"form-label\" for=\"parent_id\">\n                  {t(\"Parent Menu\")}\n                </Label>\n                <Controller\n                  defaultValue={\n                    store.dataDropdown.filter(\n                      (el) =>\n                        el.value ===\n                        (formState === \"edit\"\n                          ? currentData?.parent_id\n                          : currentData?.id)\n                    ) ?? \"\"\n                  }\n                  control={control}\n                  id=\"parent_id\"\n                  name=\"parent_id\"\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      id=\"parent_id\"\n                      theme={selectThemeColors}\n                      defaultValue={store.dataDropdown.filter(\n                        (el) =>\n                          el.value ===\n                          (formState === \"edit\"\n                            ? currentData?.parent_id\n                            : currentData?.id)\n                      )}\n                      // onChange={(data) => {\n                      //   changeParentId(data)\n                      // }}\n                      isDisabled={formState === \"add\"}\n                      options={store.dataDropdown\n                        .filter((el) => el.value !== store.selectedData?.id)\n                        .map((item) => ({\n                          ...item,\n                          // id_app: item.id_app,\n                          label: t(item.title)\n                        }))}\n                      className={classnames(\"react-select\", {\n                        \"is-invalid\": store.selectedData?.parent_id === null\n                      })}\n                      classNamePrefix=\"select\"\n                    />\n                  )}\n                />\n              </Col>\n\n              {!isSeparator && (\n                <Col md={6} xs={12}>\n                  <Label className=\"form-label\" for=\"subject\">\n                    {t(\"Route Path\")}\n                    <span className=\"text-danger\">*</span>\n                  </Label>\n                  <Controller\n                    defaultValue={store.selectedData?.routePath ?? \"\"}\n                    control={control}\n                    id=\"routePath\"\n                    name=\"routePath\"\n                    render={({ field }) => (\n                      <Input\n                        {...field}\n                        className={\n                          errors.routePath\n                            ? \"form-control is-invalid\"\n                            : \"form-control\"\n                        }\n                        id=\"routePath\"\n                        invalid={errors.routePath && true}\n                      />\n                    )}\n                  />\n                </Col>\n              )}\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"description\">\n                  {t(\"Description\")}\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.description ?? \"\"}\n                  control={control}\n                  id=\"description\"\n                  name=\"description\"\n                  render={({ field }) => (\n                    <TextareaAutosize\n                      {...field}\n                      className=\"form-control\"\n                      id=\"description\"\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n\n      <Offcanvas\n        direction={canvasPlacement}\n        isOpen={canvasOpen}\n        toggle={toggleCanvasStart}\n      >\n        <OffcanvasHeader className=\"mb-1 mt-1 me-1\" toggle={toggleCanvasStart}>\n          {t(\"Select\")} {t(\"Icon\")}\n          <Button.Ripple\n            className=\"ms-2 me-2\"\n            color=\"primary\"\n            outline={iconCategory !== \"feather\"}\n            onClick={(event) => {\n              setIconCategory(\"feather\")\n            }}\n          >\n            Feather Icon\n          </Button.Ripple>\n          <Button.Ripple\n            color=\"primary\"\n            outline={iconCategory !== \"material\"}\n            onClick={(event) => {\n              setIconCategory(\"material\")\n            }}\n          >\n            Material Icon\n          </Button.Ripple>\n        </OffcanvasHeader>\n        <OffcanvasBody\n          className={classnames({\n            \"my-auto mx-0 flex-grow-0\":\n              canvasPlacement === \"start\" || canvasPlacement === \"end\"\n          })}\n        >\n          {iconCategory === \"feather\" ? (\n            <IconsFeather setIcon={setIcon} setCanvasOpen={setCanvasOpen} />\n          ) : (\n            // <IconsFeather setIcon={setIcon} setCanvasOpen={setCanvasOpen} />\n            <IconsMaterial setIcon={setIcon} setCanvasOpen={setCanvasOpen} />\n          )}\n          {/* <Button\n            color=\"primary\"\n            onClick={toggleCanvasStart}\n            className={classnames({\n              \"mb-1\": canvasPlacement === \"start\" || canvasPlacement === \"end\",\n              \"me-1\": canvasPlacement === \"top\" || canvasPlacement === \"bottom\"\n            })}\n            {...(canvasPlacement === \"start\" || canvasPlacement === \"end\"\n              ? { block: true }\n              : {})}\n          >\n            Continue\n          </Button>\n          <Button\n            outline\n            color=\"secondary\"\n            onClick={toggleCanvasStart}\n            {...(canvasPlacement === \"start\" || canvasPlacement === \"end\"\n              ? { block: true }\n              : {})}\n          >\n            Cancel\n          </Button> */}\n        </OffcanvasBody>\n      </Offcanvas>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n","// ** React Imports\r\nimport { Fragment, useState } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport classnames from \"classnames\"\r\nimport toast from \"react-hot-toast\"\r\nimport * as Icons from \"react-feather\"\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\r\nimport { useTranslation } from \"react-i18next\"\r\n// ** Custom Components\r\nimport Avatar from \"@components/avatar\"\r\nimport Breadcrumbs from \"@components/breadcrumbs\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  CardBody,\r\n  InputGroup,\r\n  InputGroupText,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"@styles/base/pages/ui-feather.scss\"\r\n\r\nconst FeatherIcons = ({ setIcon, setCanvasOpen }) => {\r\n  const IconsArr = []\r\n\r\n  // ** States\r\n  const [query, setQuery] = useState([]),\r\n    [filteredArr, setFilteredArr] = useState([]),\r\n    [active, setActive] = useState(null)\r\n\r\n  for (const key in Icons) {\r\n    IconsArr.push(key)\r\n  }\r\n  const { t } = useTranslation()\r\n  const handleFilter = (val) => {\r\n    const arr = []\r\n    if (val.length) {\r\n      IconsArr.filter((icon) => {\r\n        if (icon.toLowerCase().includes(val.toLowerCase())) {\r\n          arr.push(icon)\r\n        }\r\n      })\r\n    }\r\n    setFilteredArr([...arr])\r\n  }\r\n\r\n  const handleIconCardClick = (icon) => {\r\n    const customName = `feather:${icon}`\r\n    setIcon(customName)\r\n    setActive(icon)\r\n    // toast(() => (\r\n    //   <div className=\"d-flex\">\r\n    //     <div className=\"me-1\">\r\n    //       <Avatar size=\"sm\" color=\"success\" icon={<Icons.Check size={12} />} />\r\n    //     </div>\r\n    //     <div className=\"d-flex flex-column\">\r\n    //       <h6 className=\"toast-title\">Icon Name Copied! 📋</h6>\r\n    //       <span role=\"img\" aria-label=\"toast-text\">\r\n    //         {icon}\r\n    //       </span>\r\n    //     </div>\r\n    //   </div>\r\n    // ))\r\n    setCanvasOpen(false)\r\n  }\r\n\r\n  const renderIcons = () => {\r\n    const dataToRender = query.length ? filteredArr : IconsArr\r\n    if (dataToRender.length) {\r\n      return dataToRender.map((icon) => {\r\n        const IconTag = Icons[icon]\r\n        return (\r\n          <Fragment key={icon}>\r\n            <CopyToClipboard text={`<${icon} />`}>\r\n              <Card\r\n                id={icon}\r\n                className={classnames(\r\n                  \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n                  {\r\n                    active: active === icon\r\n                  }\r\n                )}\r\n                onClick={() => handleIconCardClick(icon)}\r\n              >\r\n                <CardBody>\r\n                  <div className=\"icon-wrapper\">\r\n                    <IconTag />\r\n                  </div>\r\n                  <p className=\"icon-name text-truncate mb-0 mt-1\">{icon}</p>\r\n                </CardBody>\r\n              </Card>\r\n            </CopyToClipboard>\r\n            <UncontrolledTooltip placement=\"top\" target={icon}>\r\n              {icon.replace(/([A-Z])/g, \" $1\").trim()}\r\n            </UncontrolledTooltip>\r\n          </Fragment>\r\n        )\r\n      })\r\n    } else {\r\n      return (\r\n        <div className=\"d-flex align-items-center justify-content-center w-100\">\r\n          <h4 className=\"mb-0\">{t(\"No Icons Found!\")}</h4>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <div className=\"icon-search-wrapper mt-0 mb-2 mx-auto\">\r\n            <InputGroup className=\"input-group-merge mb-1\">\r\n              <InputGroupText>\r\n                <Icons.Search size={14} />\r\n              </InputGroupText>\r\n              <Input\r\n                placeholder={t(\"Search icons...\")}\r\n                onChange={(e) => {\r\n                  handleFilter(e.target.value)\r\n                  setQuery(e.target.value)\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div\r\n        className=\"d-flex flex-wrap\"\r\n        style={{\r\n          justifyContent: \"center\"\r\n        }}\r\n        id=\"icons-container\"\r\n      >\r\n        {renderIcons()}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default FeatherIcons\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport classnames from \"classnames\"\r\n// import * as Icons from \"react-feather\"\r\nimport * as Icons from \"@mui/icons-material\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  CardBody,\r\n  InputGroup,\r\n  InputGroupText,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"@styles/base/pages/ui-feather.scss\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setIconsComponents } from \"../../../../redux/icons\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nconst FeatherIcons = ({ setIcon, setCanvasOpen }) => {\r\n  const IconsArr = []\r\n  const IconsComponentsArr = []\r\n  // ** States\r\n  const [query, setQuery] = useState([]),\r\n    [filteredArr, setFilteredArr] = useState([]),\r\n    [filteredComponentsArr, setFilteredComponentsArr] = useState([]),\r\n    [active, setActive] = useState(null)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const { t } = useTranslation()\r\n\r\n  const handleFilter = (val) => {\r\n    const arr = []\r\n    const arrComponents = []\r\n    if (val.length) {\r\n      IconsArr.filter((icon) => {\r\n        if (icon.toLowerCase().includes(val.toLowerCase())) {\r\n          arr.push(icon)\r\n\r\n          const IconTag = Icons[icon]\r\n          arrComponents.push(\r\n            <Fragment key={icon}>\r\n              <Card\r\n                id={icon}\r\n                className={classnames(\r\n                  \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n                  {\r\n                    active: active === icon\r\n                  }\r\n                )}\r\n                onClick={() => handleIconCardClick(icon)}\r\n              >\r\n                <CardBody>\r\n                  <div className=\"icon-wrapper\">\r\n                    <IconTag />\r\n                  </div>\r\n                  <p className=\"icon-name text-truncate mb-0 mt-1\">{icon}</p>\r\n                </CardBody>\r\n              </Card>\r\n              <UncontrolledTooltip placement=\"top\" target={icon}>\r\n                {icon.replace(/([A-Z])/g, \" $1\").trim()}\r\n              </UncontrolledTooltip>\r\n            </Fragment>\r\n          )\r\n        }\r\n      })\r\n    }\r\n    setFilteredArr([...arr])\r\n    setFilteredComponentsArr([...arrComponents])\r\n  }\r\n\r\n  function camelToUnderscore(key) {\r\n    let result = key.replace(/([A-Z])/g, \" $1\")\r\n    return result.split(\" \").join(\"_\").toLowerCase()\r\n  }\r\n\r\n  const handleIconCardClick = (icon) => {\r\n    // console.log(icon)\r\n    const customName = `material:${camelToUnderscore(icon).substring(1)}`\r\n    setIcon(customName)\r\n    setActive(icon)\r\n    setCanvasOpen(false)\r\n  }\r\n\r\n  const renderIcons = () => {\r\n    // console.log(IconsArr)\r\n    const dataToRender = query.length ? filteredArr : IconsArr\r\n    const componentsToRender = query.length\r\n      ? filteredComponentsArr\r\n      : IconsComponentsArr\r\n    if (dataToRender.length) {\r\n      // return dataToRender.map((icon) => {\r\n      //   const IconTag = Icons[icon]\r\n      //   return (\r\n      //     <Fragment key={icon}>\r\n      //       <Card\r\n      //         id={icon}\r\n      //         className={classnames(\r\n      //           \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n      //           {\r\n      //             active: active === icon\r\n      //           }\r\n      //         )}\r\n      //         onClick={() => handleIconCardClick(icon)}\r\n      //       >\r\n      //         <CardBody>\r\n      //           <div className=\"icon-wrapper\">\r\n      //             <IconTag />\r\n      //           </div>\r\n      //           <p className=\"icon-name text-truncate mb-0 mt-1\">{icon}</p>\r\n      //         </CardBody>\r\n      //       </Card>\r\n      //       <UncontrolledTooltip placement=\"top\" target={icon}>\r\n      //         {icon.replace(/([A-Z])/g, \" $1\").trim()}\r\n      //       </UncontrolledTooltip>\r\n      //     </Fragment>\r\n      //   )\r\n      // })\r\n      return componentsToRender\r\n    } else {\r\n      return (\r\n        <div className=\"d-flex align-items-center justify-content-center w-100\">\r\n          <h4 className=\"mb-0\">{t(\"No Icons Found!\")}</h4>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const store = useSelector((state) => state[\"icons_store\"])\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    console.log(store.data.material.length)\r\n    if (store.data.material.length === 0) {\r\n      // console.log(store.data.material)\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(\"Icons\")}`)\r\n\r\n      for (const key in Icons) {\r\n        if (key.includes(\"Outlined\")) {\r\n          IconsArr.push(key)\r\n\r\n          const IconTag = Icons[key]\r\n          IconsComponentsArr.push(\r\n            <Fragment key={key}>\r\n              <Card\r\n                id={key}\r\n                className={classnames(\r\n                  \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n                  {\r\n                    active: active === key\r\n                  }\r\n                )}\r\n                onClick={() => handleIconCardClick(key)}\r\n              >\r\n                <CardBody>\r\n                  <div className=\"icon-wrapper\">\r\n                    <IconTag />\r\n                  </div>\r\n                  <p className=\"icon-name text-truncate mb-0 mt-1\">{key}</p>\r\n                </CardBody>\r\n              </Card>\r\n              <UncontrolledTooltip placement=\"top\" target={key}>\r\n                {key.replace(/([A-Z])/g, \" $1\").trim()}\r\n              </UncontrolledTooltip>\r\n            </Fragment>\r\n          )\r\n        }\r\n      }\r\n      dispatch(setIconsComponents({ material: IconsComponentsArr }))\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <div className=\"icon-search-wrapper mt-0 mb-2 mx-auto\">\r\n            <InputGroup className=\"input-group-merge mb-1\">\r\n              <InputGroupText>\r\n                {/* <Icons.Search size={14} /> */}\r\n              </InputGroupText>\r\n              <Input\r\n                placeholder={t(\"Search icons...\")}\r\n                onChange={(e) => {\r\n                  handleFilter(e.target.value)\r\n                  setQuery(e.target.value)\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div\r\n        className=\"d-flex flex-wrap\"\r\n        style={{\r\n          justifyContent: \"center\"\r\n        }}\r\n        id=\"icons-container\"\r\n      >\r\n        {query.length ? filteredComponentsArr : store.data.material}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default FeatherIcons\r\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n  forwardRef\n} from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData\n} from \"./store\"\nimport { getInvoice } from \"../../invoices/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport debounce from \"lodash.debounce\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid,\n  Copy,\n  Slack,\n  User,\n  Settings,\n  Database,\n  Edit2,\n  MoreVertical,\n  Trash2,\n  Archive,\n  Eye,\n  CheckCircle,\n  CheckSquare,\n  Check,\n  Square\n} from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Badge,\n  UncontrolledTooltip,\n  CardText\n} from \"reactstrap\"\n\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { Skeleton } from \"@mui/material\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\n\nconst MySwal = withReactContent(Swal)\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className=\"form-check\">\n    <Input type=\"checkbox\" ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({\n  store,\n  toggleSidebar,\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm,\n  selectedRow,\n  handleDeleteSelected\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n  const dispatch = useDispatch()\n  const storeInvoice = useSelector((state) => state.invoices)\n  const userData = getUserData()\n\n  return (\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\n            <Input\n              className=\"mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: \"5rem\" }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </Input>\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\n          </div>\n        </Col>\n        <Col\n          xl=\"8\"\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\n        >\n          {selectedRow?.length > 0 &&\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n              <Button\n                className=\"delete-users\"\n                color=\"danger\"\n                onClick={handleDeleteSelected}\n              >\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\n              </Button>\n            </div>\n          ) : null}\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className=\"d-flex align-items-center table-header-actions\">\n            <UncontrolledDropdown className=\"me-1\">\n              <DropdownToggle color=\"secondary\" caret outline>\n                <Share className=\"font-small-4 me-50\" />\n                <span className=\"align-middle\">{t(\"Export\")}</span>\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"pdf\",\n                        dataYear: userData.dataYear,\n                        print: true,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <Printer className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\n                </DropdownItem>\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"pdf\",\n                        dataYear: userData.dataYear,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <File className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">PDF</span>\n                </DropdownItem>\n\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"xls\",\n                        dataYear: userData.dataYear,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <Grid className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">Excel</span>\n                </DropdownItem>\n\n                <DropdownItem\n                  className=\"w-100\"\n                  // onClick={() => downloadCSV(store.data)}\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"csv\",\n                        dataYear: userData.dataYear,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <FileText className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">CSV</span>\n                </DropdownItem>\n\n                {/* <DropdownItem className=\"w-100\">\n                  <Copy className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">Copy</span>\n                </DropdownItem> */}\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            {ability.can(\n              \"post\",\n              sessionStorage.getItem(\"current_page_perm\")\n            ) ? (\n              <Button\n                className=\"add-new-user\"\n                color=\"primary\"\n                onClick={toggleSidebar}\n                // onClick={handleAdd}\n              >\n                {t(\"Add New\")} {t(pageTitle)}\n              </Button>\n            ) : null}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst List = () => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  const { colors } = useContext(ThemeColors)\n  const [sort_dir, setSortDir] = useState(\"desc\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sort, setSort] = useState(null)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [selectedRows, setSelectedRows] = useState([])\n  const [toggleCleared, setToggleCleared] = useState(false)\n\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n\n  const handleEdit = (rowData) => {\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        setLoading(false)\n        setShowModal(true)\n      })\n    }\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const toggleSidebar = () => {\n    // console.log(\"here\")\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const handleDeleteSelected = async () => {\n    const countSelectedCopy = selectedRows.length\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\n        \"selected data. Deleted data cannot be recovered\"\n      )}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\n        pageTitle\n      )}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\n      )\n      setLoading(true)\n      const values = selectedRows.map((a) => a.id)\n      // console.log(values)\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setSelectedRows([])\n          setToggleCleared(!toggleCleared)\n          setLoading(false)\n          toast.success(\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\n            {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            }\n          )\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /////PAGINATION SERVERSIDE\n  const handlePagination = (page) => {\n    // console.log(\"handlePagination\")\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const handlePerPage = (e) => {\n    // console.log(\"handlePerPage\")\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: value,\n        page: currentPage\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  const handleDebounceFn = (inputValue) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        search: inputValue,\n        sort,\n        page: currentPage,\n        length: rowsPerPage\n      })\n    )\n  }\n\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\n\n  const handleFilter = (event) => {\n    // console.log(\"handleFilter\")\n    setSearchTerm(event)\n    debounceFn(event)\n  }\n\n  const handleSort = (column, sortDirection) => {\n    // console.log(\"handleSort\")\n    setSortDir(sortDirection)\n    setSort(column.sortField)\n    // console.log(column.sortField, sortDirection)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage\n      })\n    )\n  }\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        containerClassName={\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\n        }\n      />\n    )\n  }\n  /////PAGINATION SERVERSIDE\n\n  const handleRowSelected = useCallback((state) => {\n    setSelectedRows(state.selectedRows)\n  }, [])\n\n  const columns = [\n    {\n      name: t(\"Title\"),\n      center: false,\n      sortable: true,\n      // minWidth: \"400px\",\n      sortField: \"title\",\n      selector: (row) => row.title,\n      cell: (row) => row.title\n    },\n    {\n      name: t(\"Description\"),\n      center: false,\n      sortable: true,\n      // minWidth: \"400px\",\n      sortField: \"description\",\n      selector: (row) => row.description,\n      cell: (row) => row.description\n    },\n    {\n      name: t(\"Route Path\"),\n      center: false,\n      sortable: true,\n      // minWidth: \"400px\",\n      sortField: \"routePath\",\n      selector: (row) => row.routePath,\n      cell: (row) => row.routePath\n    },\n    {\n      name: t(\"Actions\"),\n      center: true,\n      width: \"140px\",\n      cell: (row) => (\n        <div className=\"column-action text-center\">\n          {ability.can(\n            \"delete\",\n            sessionStorage.getItem(\"current_page_perm\")\n          ) ? (\n            <>\n              <Button.Ripple\n                id=\"btn-delete\"\n                className=\"btn-icon rounded-circle\"\n                color=\"flat-danger\"\n                onClick={(e) => {\n                  e.preventDefault()\n                  handleDelete(row.id)\n                }}\n              >\n                <Trash2 size={16} />\n              </Button.Ripple>\n              <UncontrolledTooltip placement=\"left\" target=\"btn-delete\">\n                {t(\"Delete\")}\n              </UncontrolledTooltip>\n            </>\n          ) : null}\n\n          {ability.can(\n            \"update\",\n            sessionStorage.getItem(\"current_page_perm\")\n          ) ? (\n            <>\n              <Button.Ripple\n                className=\"btn-icon rounded-circle\"\n                color=\"flat-info\"\n                id=\"btn-edit\"\n                onClick={(e) => {\n                  e.preventDefault()\n                  handleEdit(row)\n                }}\n              >\n                <Edit2 size={16} />\n              </Button.Ripple>\n              <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\n                {t(\"Edit\")}\n              </UncontrolledTooltip>\n            </>\n          ) : null}\n        </div>\n      )\n    }\n  ]\n\n  const tableColumns = useMemo(\n    () =>\n      store.isLoading\n        ? columns.map((column) => ({\n            ...column,\n            sortable: false,\n            cell: (row) => (\n              <Skeleton\n                sx={{ bgcolor: colors.dark.light }}\n                animation=\"wave\"\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\n                height={40}\n              />\n            )\n          }))\n        : columns.map((column) => ({\n            ...column\n          })),\n    [store.isLoading, columns]\n  )\n\n  const dataToRender = () => {\n    const filters = {\n      search: searchTerm\n    }\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    if (!store.isLoading) {\n      if (store.data.length > 0) {\n        return store.data\n      } else if (store.data.length === 0 && isFiltered) {\n        return []\n      } else {\n        // console.log(store.allData)\n        // return store.allData.slice(0, rowsPerPage)\n      }\n    } else {\n      return Array(10).fill({})\n    }\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(\n        getDataList({\n          sort_dir,\n          sort,\n          search: searchTerm,\n          page: currentPage,\n          length: rowsPerPage\n        })\n      )\n    }\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\n\n  return (\n    <Fragment>\n      <UILoader blocking={loading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <DataTable\n              noHeader\n              subHeader\n              sortServer\n              responsive\n              pagination\n              paginationServer\n              paginationTotalRows={store.total}\n              paginationComponent={CustomPagination}\n              selectableRows\n              onSelectedRowsChange={handleRowSelected}\n              selectableRowsHighlight\n              // onRowClicked={handleRowSelected}\n              clearSelectedRows={toggleCleared}\n              selectableRowsComponent={BootstrapCheckbox}\n              noDataComponent={<NoDataDisplay />}\n              // fixedHeader\n              // fixedHeaderScrollHeight=\"600px\"\n              style={{ \"min-height\": \"400px\" }}\n              highlightOnHover\n              pointerOnHover\n              columns={tableColumns}\n              onSort={handleSort}\n              sortIcon={<ChevronDown />}\n              className=\"react-dataTable\"\n              data={dataToRender()}\n              subHeaderComponent={\n                <CustomHeader\n                  store={store}\n                  searchTerm={searchTerm}\n                  rowsPerPage={rowsPerPage}\n                  handleFilter={handleFilter}\n                  handlePerPage={handlePerPage}\n                  toggleSidebar={toggleSidebar}\n                  selectedRow={selectedRows}\n                  handleDeleteSelected={handleDeleteSelected}\n                />\n              }\n            />\n          </div>\n        </Card>\n\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n","export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent (ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams (params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map(mount => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n  function render (swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find(mount => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      ReactDOM.render(value, domElement)\n      swal.__mountedDomElements.push(domElement)\n    })\n  }\n\n  function unrender (swal) {\n    swal.__mountedDomElements.forEach(domElement => {\n      ReactDOM.unmountComponentAtNode(domElement)\n    })\n    swal.__mountedDomElements = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params, mixinParams) {\n      this.__mountedDomElements = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams)\n            superDidOpen(popup)\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        }),\n      )\n    }\n\n    update (params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n","// ** React Imports\nimport { Fragment } from \"react\"\nimport { Link } from \"react-router-dom\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from \"react-feather\"\nimport { useTranslation } from \"react-i18next\"\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from \"reactstrap\"\n\nconst BreadCrumbs = (props) => {\n  const { t } = useTranslation()\n  // ** Props\n  const { data, title, mb, subtitle } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={`content-header-left col-md-9 col-8 ${\n        mb || mb === 0 ? `mb-${mb}` : \"mb-2\"\n      }`}\n    >\n      <div className=\"row breadcrumbs-top\">\n        <div className=\"col-12\">\n          {title ? (\n            <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n          ) : (\n            \"\"\n          )}\n          <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n            <Breadcrumb>\n              <BreadcrumbItem tag=\"li\">\n                <Link to=\"/\">{t(\"Home\")}</Link>\n              </BreadcrumbItem>\n              {renderBreadCrumbs()}\n            </Breadcrumb>\n          </div>\n        </div>\n        <div className=\"col-12\">{subtitle ?? \"\"}</div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n"],"sourceRoot":""}