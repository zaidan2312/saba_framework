{"version":3,"sources":["views/dashboard/widgets/WidgetTrainingTask.js","@core/components/ui-loader/index.js","@core/components/avatar-group/index.js","assets/images/illustration/email.svg","../node_modules/@mui/icons-material/EventAvailableOutlined.js"],"names":["params","pagination","clickable","autoplay","delay","disableOnInteraction","WidgetTrainingTask","_ref","hideCardTitle","id_user","t","useTranslation","store","useSelector","state","dynamicStore","dispatch","dynamic_temp_state","useDispatch","storeName","useEffect","_store$pageData$store","_store$pageData$store2","_store$pageData$store3","pageData","data","length","isLoading","getDataList","endpointName","baseUrl","type","Id_AttendingState","_store$pageData$store4","_store$pageData$store5","_store$pageData$store6","_store$pageData$store7","_store$pageData$store8","_store$pageData$store9","calendarStrings","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","toUpperCaseFilter","d","toUpperCase","renderAvatarGroup","_data$length","avatarData","map","item","i","_item$PhotoPath","name","concat","FirstName","LastName","title","replaceAll","placement","img","PhotoPath","require","default","imgHeight","imgWidth","remainCount","push","meta","_jsx","AvatarGroup","Col","lg","xs","children","_jsxs","Card","style","minHeight","CardHeader","className","EventAvailableOutlinedIcon","CardTitle","tag","UILoader","blocking","loader","Loader","CardBody","isManager","Swiper","_objectSpread","row","_row$TrainingData","_row$TrainingData2","_row$TrainingData3","_row$TrainingData4","_row$TrainingData5","_row$TrainingData6","_row$TrainingData7","_row$TrainingData8","_row$TrainingData9","_row$TrainingData10","_row$TrainingData11","SwiperSlide","src","TrainingData","Image","illustration","height","Moment","filter","format","StartDate","Name","CardText","Description","Avatar","color","icon","Calendar","size","calendar","IsOnline","Video","LinkRef","MapPin","Address","Employee","Id_Training","props","_classnames","overlayColor","Tag","classnames","_defineProperty","Fragment","backgroundColor","defaultProps","Spinner","id","split","join","linkUrl","ItemTag","Element","undefined","initials","content","Link","to","_interopRequireDefault","Object","defineProperty","exports","value","_createSvgIcon","_jsxRuntime","_default","jsx"],"mappings":"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","file":"static/js/130.4a7255c8.chunk.js","sourcesContent":["import Avatar from \"@components/avatar\"\r\nimport AvatarGroup from \"@components/avatar-group\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport illustration from \"@src/assets/images/illustration/email.svg\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\nimport { getDataList } from \"@src/shared/dynamic_pages/store\"\r\nimport \"moment-timezone\"\r\nimport \"moment/locale/id\"\r\nimport { useEffect } from \"react\"\r\nimport { Calendar, MapPin, Video } from \"react-feather\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Moment from \"react-moment\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardText,\r\n  CardTitle,\r\n  Col\r\n} from \"reactstrap\"\r\n\r\nimport EventAvailableOutlinedIcon from \"@mui/icons-material/EventAvailableOutlined\"\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\"\r\nconst params = {\r\n  // navigation: true\r\n  pagination: {\r\n    clickable: true\r\n  },\r\n  autoplay: {\r\n    delay: 7500,\r\n    disableOnInteraction: false\r\n  }\r\n}\r\n\r\nconst WidgetTrainingTask = ({ hideCardTitle = false, id_user = null }) => {\r\n  const { t } = useTranslation()\r\n  // const store = useSelector((state) => state[storeName])\r\n  const store = useSelector((state) => state.dynamicStore)\r\n  const dynamicTempState = useSelector((state) => state.dynamic_temp_state)\r\n  const dispatch = useDispatch()\r\n\r\n  const storeName = \"TrainingEmployee_task\"\r\n  const endpointName = \"TrainingEmployee/assignment\"\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !store.pageData[storeName] ||\r\n      (store.pageData[storeName]?.data?.length === 0 &&\r\n        !store.pageData[storeName]?.isLoading)\r\n    ) {\r\n      dispatch(\r\n        getDataList({\r\n          storeName: storeName,\r\n          endpointName: endpointName,\r\n          baseUrl: \"hr\",\r\n          type: \"to_me\",\r\n          Id_AttendingState: 1\r\n        })\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  const calendarStrings = {\r\n    lastDay: \"[Yesterday]\",\r\n    sameDay: \"[Today]\",\r\n    nextDay: \"[Tomorrow]\",\r\n    lastWeek: \"[last] dddd\",\r\n    nextWeek: \"dddd\",\r\n    sameElse: \"L\"\r\n  }\r\n\r\n  const toUpperCaseFilter = (d) => {\r\n    return d.toUpperCase()\r\n  }\r\n\r\n  const renderAvatarGroup = (data) => {\r\n    if (data) {\r\n      const minCount = 10\r\n      const avatarData = data.map((item, i) => {\r\n        let name = `${item?.FirstName} ${item?.LastName}`\r\n        if (i <= minCount) {\r\n          return {\r\n            title: `${name.replaceAll(\".\", \"\")}`,\r\n            placement: \"bottom\",\r\n            img:\r\n              item?.PhotoPath ??\r\n              require(\"@src/assets/images/avatars/avatar-blank.png\").default,\r\n            imgHeight: 33,\r\n            imgWidth: 33\r\n          }\r\n        }\r\n      })\r\n      const remainCount = (data.length ?? 0) - minCount\r\n      if (remainCount > 0 && avatarData) {\r\n        avatarData.push({\r\n          meta: `+${remainCount}`\r\n        })\r\n      } else {\r\n        avatarData.push({\r\n          meta: `${avatarData.length} ${t(\"Employee ready to attend\")}`\r\n        })\r\n      }\r\n      return <AvatarGroup data={avatarData} />\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  {\r\n    return store.pageData[storeName]?.isLoading ? (\r\n      <Col lg=\"12\" xs=\"12\">\r\n        <Card style={{ minHeight: \"200px\" }}>\r\n          <CardHeader>\r\n            <div className=\"d-flex align-items-center\">\r\n              <EventAvailableOutlinedIcon className=\"user-timeline-title-icon me-1\" />\r\n              <CardTitle tag=\"h4\">{t(\"Training Task\")}</CardTitle>\r\n            </div>\r\n          </CardHeader>\r\n          <UILoader blocking={true} loader={<Loader />}>\r\n            <CardBody></CardBody>\r\n          </UILoader>\r\n        </Card>\r\n      </Col>\r\n    ) : store.pageData[storeName]?.data?.length > 0 ? (\r\n      <Col lg=\"12\" xs=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            <div className=\"d-flex align-items-center\">\r\n              <EventAvailableOutlinedIcon className=\"user-timeline-title-icon me-1\" />\r\n              {!store.pageData[storeName]?.data[0]?.isManager ? (\r\n                <CardTitle tag=\"h4\">{t(\"My Training Task\")}</CardTitle>\r\n              ) : (\r\n                <CardTitle tag=\"h4\">{t(\"Me & Staff Training Task\")}</CardTitle>\r\n              )}\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody className=\"px-0 pb-0 \">\r\n            <Swiper {...params}>\r\n              {store.pageData[storeName]?.data.map((row) => {\r\n                return (\r\n                  <SwiperSlide key={`swiper_${row.Id_Training}`}>\r\n                    <Card className=\"card-developer-meetup  cursor-pointer\">\r\n                      <div className=\"meetup-img-wrapper rounded-top text-center\">\r\n                        <img\r\n                          src={\r\n                            row?.TrainingData?.Image\r\n                              ? row.TrainingData.Image\r\n                              : illustration\r\n                          }\r\n                          height=\"170\"\r\n                        />\r\n                      </div>\r\n                      <CardBody>\r\n                        <div className=\"meetup-header d-flex align-items-center\">\r\n                          <div className=\"meetup-day\">\r\n                            <h6 className=\"mb-0\">\r\n                              <Moment filter={toUpperCaseFilter} format=\"ddd\">\r\n                                {row?.TrainingData?.StartDate}\r\n                              </Moment>\r\n                            </h6>\r\n                            <h3 className=\"mb-0\">\r\n                              <Moment format=\"DD\">\r\n                                {row?.TrainingData?.StartDate}\r\n                              </Moment>\r\n                            </h3>\r\n                          </div>\r\n                          <div className=\"my-auto text-truncate\">\r\n                            <CardTitle tag=\"h4\" className=\"mb-25\">\r\n                              {row?.TrainingData?.Name}\r\n                            </CardTitle>\r\n                            <CardText className=\"mb-0\">\r\n                              {row?.TrainingData?.Description}\r\n                            </CardText>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"d-flex\">\r\n                          <Avatar\r\n                            color=\"light-primary\"\r\n                            className=\"rounded me-1\"\r\n                            icon={<Calendar size={18} />}\r\n                          />\r\n                          <div>\r\n                            {/* <h6 className=\"mb-0\">Sat, May 25, 2020</h6>\r\n                                <small>10:AM to 6:PM</small> */}\r\n                            <h6 className=\"mb-0\">\r\n                              {\r\n                                <Moment calendar={calendarStrings}>\r\n                                  {row?.TrainingData?.StartDate}\r\n                                </Moment>\r\n                              }\r\n                            </h6>\r\n                            <small>\r\n                              {\r\n                                <Moment format=\"[Start at] LT\">\r\n                                  {row?.TrainingData?.StartDate}\r\n                                </Moment>\r\n                              }\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                        {!row?.TrainingData?.IsOnline ? (\r\n                          <div className=\"d-flex mt-2\">\r\n                            <Avatar\r\n                              color=\"light-primary\"\r\n                              className=\"rounded me-1\"\r\n                              icon={<MapPin size={18} />}\r\n                            />\r\n                            <div>\r\n                              {/* <h6 className=\"mb-0\">Central Park</h6> */}\r\n                              <small>{row?.TrainingData?.Address}</small>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"d-flex mt-2\">\r\n                            <Avatar\r\n                              color=\"light-primary\"\r\n                              className=\"rounded me-1\"\r\n                              icon={<Video size={18} />}\r\n                            />\r\n                            <div>\r\n                              <h6 className=\"mb-0\">{t(\"Online Training\")}</h6>\r\n                              <small>\r\n                                {row?.TrainingData?.LinkRef\r\n                                  ? row?.TrainingData?.LinkRef\r\n                                  : \"The link will be sent before the event starts\"}\r\n                              </small>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        {renderAvatarGroup(row?.Employee)}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </SwiperSlide>\r\n                )\r\n              })}\r\n            </Swiper>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    ) : null\r\n  }\r\n}\r\n\r\nexport default WidgetTrainingTask\r\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Spinner } from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"./ui-loader.scss\"\r\n\r\nconst UILoader = (props) => {\r\n  const { children, blocking, loader, className, tag, overlayColor } = props\r\n\r\n  const Tag = tag\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames(\"ui-loader\", {\r\n        [className]: className,\r\n        show: blocking\r\n      })}\r\n    >\r\n      {children}\r\n      {blocking ? (\r\n        <Fragment>\r\n          <div\r\n            className=\"overlay\" /*eslint-disable */\r\n            {...(blocking && overlayColor\r\n              ? { style: { backgroundColor: overlayColor } }\r\n              : {})}\r\n            /*eslint-enable */\r\n          ></div>\r\n          <div className=\"loader\">{loader}</div>\r\n        </Fragment>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default UILoader\r\n\r\nUILoader.defaultProps = {\r\n  tag: \"div\",\r\n  blocking: false,\r\n  loader: <Spinner color=\"primary\" />\r\n}\r\n\r\nUILoader.propTypes = {\r\n  tag: Proptypes.string,\r\n  loader: Proptypes.any,\r\n  className: Proptypes.string,\r\n  overlayColor: Proptypes.string,\r\n  blocking: Proptypes.bool.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledTooltip } from \"reactstrap\"\r\n\r\n// ** Custom Components Imports\r\nimport Avatar from \"@components/avatar\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst AvatarGroup = (props) => {\r\n  // ** Props\r\n  const { data, tag, className } = props\r\n\r\n  // ** Conditional Tag\r\n  const Tag = tag ? tag : \"div\"\r\n\r\n  // ** Render Data\r\n  const renderData = () => {\r\n    return data.map((item, i) => {\r\n      let id = item?.id\r\n        ? `avatar_${i}_${item.id}`\r\n        : item.title.split(\" \").join(\"-\")\r\n      const linkUrl = item?.linkUrl\r\n      delete item?.linkUrl\r\n      const ItemTag = item.tag ? item.tag : \"div\"\r\n      const Element = (\r\n        <Fragment key={i}>\r\n          {/* {id ? (\r\n            <UncontrolledTooltip placement={item.placement} target={id}>\r\n              {item.title}\r\n            </UncontrolledTooltip>\r\n          ) : null} */}\r\n          {!item.meta ? (\r\n            item?.img ? (\r\n              <Avatar\r\n                tag={ItemTag}\r\n                className={classnames(\"pull-up\", {\r\n                  [item.className]: item.className\r\n                })}\r\n                {...(id ? { id: id } : {})}\r\n                {...item}\r\n                title={undefined}\r\n                meta={undefined}\r\n              />\r\n            ) : (\r\n              <Avatar\r\n                tag={ItemTag}\r\n                initials\r\n                className={classnames(\"pull-up\", {\r\n                  [item.className]: item.className\r\n                })}\r\n                {...(id ? { id: id } : {})}\r\n                color=\"light-primary\"\r\n                content={`${item.title}`}\r\n              />\r\n            )\r\n          ) : null}\r\n          {item.meta ? (\r\n            <ItemTag className=\"d-flex align-items-center ps-1\">\r\n              {item.meta}\r\n            </ItemTag>\r\n          ) : null}\r\n        </Fragment>\r\n      )\r\n      if (linkUrl) {\r\n        return (\r\n          <Link key={`avatar_${i}`} to={linkUrl}>\r\n            {Element}\r\n          </Link>\r\n        )\r\n      } else {\r\n        return Element\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames(\"avatar-group\", {\r\n        [className]: className\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default AvatarGroup\r\n\r\n// ** PropTypes\r\nAvatarGroup.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\r\n}\r\n","export default __webpack_public_path__ + \"static/media/email.6f4a4684.svg\";","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V9h14v10zM5 7V5h14v2H5zm5.56 10.46 5.93-5.93-1.06-1.06-4.87 4.87-2.11-2.11-1.06 1.06z\"\n}), 'EventAvailableOutlined');\n\nexports.default = _default;"],"sourceRoot":""}