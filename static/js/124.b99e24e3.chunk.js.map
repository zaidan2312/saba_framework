{"version":3,"sources":["views/apps/unit/modal/index.js","views/apps/unit/Table.js","../../src/mounts.js","../../src/index.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js"],"names":["ModalAddEdit","_ref","_store$selectedData$n","_store$selectedData","_store$selectedData$c","_store$selectedData2","show","setShow","detailPage","formState","setFormState","_ref$currentData","currentData","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","loadingText","setLoadingText","_useForm","useForm","control","setError","handleSubmit","errors","Loader","_jsxs","Fragment","children","_jsx","Spinner","CardText","className","sortedObject","unordered","Object","keys","sort","reduce","obj","key","handleReset","resetSelectedData","Modal","isOpen","toggle","UILoader","blocking","isLoadingAddEdit","isLoadingDetail","loader","ModalHeader","ModalBody","pageTitle","Form","onSubmit","data","storeData","_objectSpread","selectedData","JSON","stringify","countChanges","values","every","field","concat","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","_res$payload","error","payload","message","danger","_data$key","length","type","icon","depth","postData","console","log","_data$key2","Row","Col","md","xs","Label","for","Controller","defaultValue","name","render","_ref2","Input","invalid","code","_ref3","Button","outline","onClick","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","ability","AbilityContext","userData","invoices","getUserData","xl","htmlFor","value","onChange","width","can","sessionStorage","getItem","e","target","UncontrolledDropdown","DropdownToggle","caret","Share","DropdownMenu","DropdownItem","getInvoice","rpt_name","output_type","dataYear","print","as_attachment","par_UNITKEY","par_SAMPLE","Printer","File","Grid","FileText","List","sort_dir","setSortDir","setSearchTerm","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","setSort","_useState9","_useState10","setRowsPerPage","_useState11","_useState12","selectedRows","setSelectedRows","_useState13","_useState14","toggleCleared","setToggleCleared","_useState15","_useState16","sidebarOpen","setSidebarOpen","_useState17","_useState18","loading","setLoading","_useState19","_useState20","_useState21","_useState22","showModal","setShowModal","_useState23","_useState24","handleEdit","rowData","detailFromGrid","setDataById","handleCloseModal","revivalBack","neutralizeBack","handleDelete","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","sent","deleteData","stop","_x","apply","arguments","_callee2","countSelectedCopy","_context2","map","a","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","columns","_toConsumableArray","dynamicColumns","column","columnName","sortField","fieldName","center","sortable","selector","row","cell","dataFormat","includes","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","GlobalActionsTable","tableColumns","useMemo","isLoading","Skeleton","sx","bgcolor","dark","light","animation","height","useEffect","getAlwaysGrid","Card","DataTable","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","Number","Math","ceil","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","NoDataDisplay","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","ChevronDown","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget","mounts","getter","swal","getTitle","getHtmlContainer","getConfirmButton","getDenyButton","getCancelButton","getFooter","getCloseButton","getIcon","querySelector","getLoader","noop","ParentSwal","extractReactParams","params","reactParams","otherParams","mountKeys","mount","entries","forEach","React__default","isValidElement","_ref4","domElement","find","ReactDOM__default","__mountedDomElements","push","unrender","unmountComponentAtNode","_ParentSwal","_inherits","_class","_super","_createSuper","_classCallCheck","_createClass","mixinParams","_this","this","__params","assign","_extractReactParams","_extractReactParams2","superDidOpen","didOpen","superDidDestroy","didDestroy","_get","_getPrototypeOf","prototype","call","popup","_extractReactParams3","_extractReactParams4","args","index","undefined","argsToParams","arrayLikeToArray","module","exports","arr","isArray","__esModule","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","strings","raw","slice","freeze","defineProperties"],"mappings":"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","file":"static/js/124.b99e24e3.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [tgl1, setTgl1] = useState(null)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(store.selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload?.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      data[\"depth\"] = currentData.depth + 1\r\n      data[\"parent_id\"] = currentData.id\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n            {formState !== \"edit\" ? (\r\n              <p>\r\n                Setelah menambahkan data {t(\"Unit\")} baru, maka pastikan logout\r\n                dulu akun anda.\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"name\">\r\n                  {t(\"Name\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.name ?? \"\"}\r\n                  control={control}\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.name ? \"form-control is-invalid\" : \"form-control\"\r\n                      }\r\n                      id=\"name\"\r\n                      invalid={errors.name && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Code\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.code ?? \"\"}\r\n                  control={control}\r\n                  id=\"code\"\r\n                  name=\"code\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.code ? \"form-control is-invalid\" : \"form-control\"\r\n                      }\r\n                      id=\"code\"\r\n                      invalid={errors.code && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef\r\n} from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  dynamicColumns,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData\r\n} from \"./store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  CardText\r\n} from \"reactstrap\"\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Moment from \"moment\"\r\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\r\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">{t(\"Export\")}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        print: true,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"xls\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  // onClick={() => downloadCSV(store.data)}\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"csv\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n\r\n                {/* <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem> */}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            {ability.can(\r\n              \"post\",\r\n              sessionStorage.getItem(\"current_page_perm\")\r\n            ) ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = () => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n  }, [])\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderCell = (row, column) => {\r\n    const field = row[column.fieldName]\r\n    const dataFormat = column.dataFormat\r\n    if (dataFormat) {\r\n      if (dataFormat.includes(\":\")) {\r\n        const columnTypeFormat = dataFormat.split(\":\")\r\n        const columnType = columnTypeFormat[0]\r\n        const columnFormat = columnTypeFormat[1]\r\n        let columnFormated = row[column.fieldName]\r\n        if (columnType === \"date\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        if (columnType === \"datetime\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        return columnFormated\r\n      }\r\n    }\r\n    return row[column.fieldName]\r\n  }\r\n\r\n  const columns = [\r\n    ...dynamicColumns.map((column) => ({\r\n      name: column.columnName,\r\n      sortField: column.fieldName,\r\n      center: false,\r\n      sortable: true,\r\n      selector: (row) => row[column.fieldName],\r\n      cell: (row) => renderCell(row, column)\r\n    })),\r\n    {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <GlobalActionsTable\r\n          row={row}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) => (\r\n              <Skeleton\r\n                sx={{ bgcolor: colors.dark.light }}\r\n                animation=\"wave\"\r\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\r\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\r\n                height={40}\r\n              />\r\n            )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage\r\n        })\r\n      )\r\n    }\r\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent (ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams (params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map(mount => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n  function render (swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find(mount => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      ReactDOM.render(value, domElement)\n      swal.__mountedDomElements.push(domElement)\n    })\n  }\n\n  function unrender (swal) {\n    swal.__mountedDomElements.forEach(domElement => {\n      ReactDOM.unmountComponentAtNode(domElement)\n    })\n    swal.__mountedDomElements = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params, mixinParams) {\n      this.__mountedDomElements = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams)\n            superDidOpen(popup)\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        }),\n      )\n    }\n\n    update (params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nmodule.exports = _taggedTemplateLiteral, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}