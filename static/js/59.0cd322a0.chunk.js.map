{"version":3,"sources":["views/apps/user/index.js","@core/components/widgets/stats/StatsHorizontal.js"],"names":["UsersList","t","useTranslation","dispatch","useDispatch","store","useSelector","state","users","useEffect","dataSummary","length","isLoadingSummary","getSummaryData","className","lg","sm","color","statTitle","icon","size","renderStats","sx","bgcolor","animation","height","width","total_data","total_active","total_suspended","total_inactive","StatsHorizontal","cardColor","stats","countTextColor","countTextStyle","titleStyle","statsMargin","solidColor","cardStyle","titleOnTop","cardColorFix","style","inverse","classnames"],"mappings":"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","file":"static/js/59.0cd322a0.chunk.js","sourcesContent":["import { Fragment, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport { Skeleton } from \"@mui/material\"\nimport Table from \"./Table\"\nimport { Row, Col } from \"reactstrap\"\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\"\nimport { User, UserPlus, UserCheck, UserX } from \"react-feather\"\nimport \"@styles/react/apps/app-users.scss\"\nimport { getSummaryData } from \"@src/views/apps/user/store\"\n\nconst UsersList = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.users)\n\n  useEffect(() => {\n    if (store.dataSummary.length === 0 && !store.isLoadingSummary) {\n      dispatch(getSummaryData({}))\n    }\n  }, [dispatch, store.dataSummary.length])\n\n  return (\n    <div className=\"app-user-list\">\n      <Row>\n        <Col lg=\"3\" sm=\"6\">\n          <StatsHorizontal\n            color=\"primary\"\n            statTitle={t(\"Total Users\")}\n            icon={<User size={20} />}\n            renderStats={\n              store.isLoadingSummary ? (\n                <Skeleton\n                  sx={{ bgcolor: \"#eef2f8\" }}\n                  animation=\"wave\"\n                  height={25}\n                  width={40}\n                  className=\"fw-bolder mb-75\"\n                />\n              ) : (\n                <h3 className=\"fw-bolder mb-75\">\n                  {store.dataSummary.total_data}\n                </h3>\n              )\n            }\n          />\n        </Col>\n        <Col lg=\"3\" sm=\"6\">\n          <StatsHorizontal\n            color=\"success\"\n            statTitle={t(\"Active Users\")}\n            icon={<UserCheck size={20} />}\n            renderStats={\n              store.isLoadingSummary ? (\n                <Skeleton\n                  sx={{ bgcolor: \"#eef2f8\" }}\n                  animation=\"wave\"\n                  height={25}\n                  width={40}\n                  className=\"fw-bolder mb-75\"\n                />\n              ) : (\n                <h3 className=\"fw-bolder mb-75\">\n                  {store.dataSummary.total_active}\n                </h3>\n              )\n            }\n          />\n        </Col>\n        <Col lg=\"3\" sm=\"6\">\n          <StatsHorizontal\n            color=\"warning\"\n            statTitle={t(\"Pending Users\")}\n            icon={<UserX size={20} />}\n            renderStats={\n              store.isLoadingSummary ? (\n                <Skeleton\n                  sx={{ bgcolor: \"#eef2f8\" }}\n                  animation=\"wave\"\n                  height={25}\n                  width={40}\n                  className=\"fw-bolder mb-75\"\n                />\n              ) : (\n                <h3 className=\"fw-bolder mb-75\">\n                  {store.dataSummary.total_suspended}\n                </h3>\n              )\n            }\n          />\n        </Col>\n        <Col lg=\"3\" sm=\"6\">\n          <StatsHorizontal\n            color=\"danger\"\n            statTitle={t(\"Suspended Users\")}\n            icon={<UserPlus size={20} />}\n            renderStats={\n              store.isLoadingSummary ? (\n                <Skeleton\n                  sx={{ bgcolor: \"#eef2f8\" }}\n                  animation=\"wave\"\n                  height={25}\n                  width={40}\n                  className=\"fw-bolder mb-75\"\n                />\n              ) : (\n                <h3 className=\"fw-bolder mb-75\">\n                  {store.dataSummary.total_inactive}\n                </h3>\n              )\n            }\n          />\n        </Col>\n      </Row>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","// ** Third Party Components\nimport PropTypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from \"reactstrap\"\nimport { Fragment } from \"react\"\n\nconst StatsHorizontal = ({\n  icon,\n  color,\n  cardColor,\n  stats,\n  renderStats,\n  statTitle,\n  className,\n  countTextColor,\n  countTextStyle = {},\n  titleStyle = {},\n  statsMargin,\n  solidColor = false,\n  cardStyle = {},\n  titleOnTop = false\n}) => {\n  const cardColorFix = !solidColor ? `bg-light-${cardColor}` : `bg-${cardColor}`\n  return (\n    <Card\n      style={{ ...cardStyle }}\n      {...(cardColor ? { className: cardColorFix, inverse: true } : {})}\n    >\n      <CardBody className={className}>\n        {!titleOnTop ? (\n          <div className=\"d-flex justify-content-between align-items-center\">\n            {renderStats ? (\n              renderStats\n            ) : (\n              <Fragment>\n                <div>\n                  {renderStats ? (\n                    renderStats\n                  ) : (\n                    <h3\n                      className={classnames(\"fw-bolder\", {\n                        \"mb-0\": !statsMargin,\n                        [statsMargin]: statsMargin\n                      })}\n                      style={{\n                        color: countTextColor ?? \"#5e5873\",\n                        ...countTextStyle\n                      }}\n                    >\n                      {stats}\n                    </h3>\n                  )}\n\n                  <p style={{ ...titleStyle }} className=\"card-text\">\n                    {statTitle}\n                  </p>\n                </div>\n                <div\n                  className={`avatar avatar-stats p-50 m-0 ${\n                    color ? `bg-light-${color}` : \"bg-light-primary\"\n                  }`}\n                >\n                  <div className=\"avatar-content\">{icon}</div>\n                </div>\n              </Fragment>\n            )}\n          </div>\n        ) : (\n          <Fragment>\n            <div>\n              <p style={{ ...titleStyle }} className=\"card-text\">\n                {statTitle}\n              </p>\n            </div>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              {renderStats ? (\n                renderStats\n              ) : (\n                <Fragment>\n                  <div>\n                    {renderStats ? (\n                      renderStats\n                    ) : (\n                      <h3\n                        className={classnames(\"fw-bolder\", {\n                          \"mb-0\": !statsMargin,\n                          [statsMargin]: statsMargin\n                        })}\n                        style={{\n                          color: countTextColor ?? \"#5e5873\",\n                          ...countTextStyle\n                        }}\n                      >\n                        {stats}\n                      </h3>\n                    )}\n                  </div>\n                  <div\n                    className={`avatar avatar-stats p-50 m-0 ${\n                      color ? `bg-light-${color}` : \"bg-light-primary\"\n                    }`}\n                  >\n                    <div className=\"avatar-content\">{icon}</div>\n                  </div>\n                </Fragment>\n              )}\n            </div>\n          </Fragment>\n        )}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  color: PropTypes.string,\n  cardColor: PropTypes.string,\n  statTitle: PropTypes.string,\n  statsMargin: PropTypes.oneOf([\n    \"mb-0\",\n    \"mb-25\",\n    \"mb-50\",\n    \"mb-75\",\n    \"mb-1\",\n    \"mb-2\",\n    \"mb-3\",\n    \"mb-4\",\n    \"mb-5\"\n  ])\n}\n"],"sourceRoot":""}