{"version":3,"sources":["views/apps/role/index.js","views/apps/role/RoleCards.js","views/apps/role/DropDown.js","@core/components/ui-loader/index.js","@core/components/avatar-group/index.js","assets/images/illustration/faq-illustrations.svg"],"names":["List","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_defaultValue","lookupMode_onChange","lookupMode_isMulti","errorState","t","useTranslation","dispatch","useDispatch","store","useSelector","state","storeName","useEffect","getApiSummaryData","dataSummary","length","isLoadingSummary","getSummaryData","className","RoleCards","useState","showModal","setShowModal","modalType","setModalType","storePermission","apps_permission","permissionDropdown","setPermissionDropdown","permissionDropdownOld","setPermissionDropdownOld","description","setDescription","formState","setFormState","setLoading","setLoadingText","colors","useContext","ThemeColors","useForm","reset","control","setError","setValue","handleSubmit","errors","handleChangeChk","chkValue","index","field","permissionDropdownCopy","Object","assign","target","checked","handleAdd","a","data","isLoading","getDataListPermission","then","res","responseData","payload","arr4","arr3","dataDropdown","postDataToApi","values","every","pageTitle","onlyInA","right","compareFunction","b","id_permission","post","put","delete","get","filter","leftValue","some","rightValue","postData","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","error","message","danger","key","type","updateDataToApi","permissionState","JSON","stringify","selectedData","title","countChanges","id","putData","icon","grid_mode","blocking","loader","map","item","xl","md","totalUsers","users","x","size","img","require","default","height","name","to","onClick","e","rowData","preventDefault","console","log","detailFromGrid","setDataById","getDataListRolePermission","filter_id_role","i","location","host","sm","src","illustration","alt","width","isOpen","onClosed","toggle","loading","tag","onSubmit","xs","for","defaultValue","render","placeholder","invalid","responsive","role","label","placement","onChange","event","outline","roleName","getAlwaysGrid","getDataList","theme","selectThemeColors","el","value","isMulti","options","classNamePrefix","UILoader","props","children","overlayColor","Tag","classnames","backgroundColor","defaultProps","AvatarGroup","split","join","linkUrl","ItemTag","Element","undefined","initials","content"],"mappings":"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","file":"static/js/40.df7523d8.chunk.js","sourcesContent":["import { Fragment, useEffect } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport DropDown from \"./DropDown\"\nimport RoleCards from \"./RoleCards\"\nimport { getApiSummaryData, getSummaryData, storeName } from \"./store\"\nimport \"./style.scss\"\n\nconst List = ({\n  lookupMode = false,\n  lookupMode_fieldName = \"\",\n  lookupMode_dropdown = false,\n  lookupMode_defaultValue,\n  lookupMode_onChange,\n  lookupMode_isMulti = false,\n  errorState = false\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  useEffect(() => {\n    if (\n      getApiSummaryData &&\n      store.dataSummary?.length === 0 &&\n      !store.isLoadingSummary\n    ) {\n      dispatch(getSummaryData({}))\n    }\n  }, [dispatch, store.dataSummary?.length > 0])\n\n  const colors = [\n    \"primary\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"info\",\n    \"secondary\"\n  ]\n\n  return !lookupMode_dropdown ? (\n    <Fragment>\n      <h3>{t(\"Roles List\")}</h3>\n      <p className=\"mb-2\">\n        {t(\n          \"A role provides access to predefined menus and features depending on the assigned role to an administrator that can have access to what he needs.\"\n        )}\n      </p>\n      <RoleCards />\n      {/* <h3 className=\"mt-50\">{t(\"Total users with their roles\")}</h3>\n      <p className=\"mb-2\">\n        {t(\n          \"Find all of your company’s administrator accounts and their associate roles.\"\n        )}\n      </p>\n      <div className=\"app-user-list\">\n        <Table />\n      </div> */}\n    </Fragment>\n  ) : (\n    // <div className=\"app-user-list\">\n    //   {getApiSummaryData && (\n    //     <Row>\n    //       {store.dataSummary?.map((item, index) => {\n    //         return (\n    //           <Col>\n    //             <StatsHorizontal\n    //               color={colors[index]}\n    //               statTitle={`${t(item.title)}`}\n    //               icon={\n    //                 item.icon ? (\n    //                   <Icon\n    //                     baseClassName=\"material-icons-outlined\"\n    //                     fontSize=\"20\"\n    //                   >\n    //                     {item.icon}\n    //                   </Icon>\n    //                 ) : (\n    //                   <Icon\n    //                     baseClassName=\"material-icons-outlined\"\n    //                     fontSize=\"20\"\n    //                   >\n    //                     lightbulb\n    //                   </Icon>\n    //                 )\n    //               }\n    //               renderStats={\n    //                 store.isLoadingSummary ? (\n    //                   <Skeleton\n    //                     sx={{ bgcolor: \"#eef2f8\" }}\n    //                     animation=\"wave\"\n    //                     height={25}\n    //                     width={40}\n    //                     className=\"fw-bolder mb-75\"\n    //                   />\n    //                 ) : (\n    //                   <h3 className=\"fw-bolder mb-75\">\n    //                     {item.count_format ?? item.count}\n    //                   </h3>\n    //                 )\n    //               }\n    //             />\n    //           </Col>\n    //         )\n    //       })}\n    //     </Row>\n    //   )}\n    //   <Table />\n    // </div>\n    <DropDown\n      lookupMode_fieldName={lookupMode_fieldName}\n      lookupMode_onChange={lookupMode_onChange}\n      lookupMode_defaultValue={lookupMode_defaultValue}\n      lookupMode_isMulti={lookupMode_isMulti}\n      errorState={errorState}\n    />\n  )\n}\n\nexport default List\n","import { Fragment, useState, useEffect, useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Label,\r\n  Input,\r\n  Table,\r\n  Modal,\r\n  Button,\r\n  CardBody,\r\n  ModalBody,\r\n  ModalHeader,\r\n  FormFeedback,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  detailFromGrid,\r\n  setDataById,\r\n  postData,\r\n  putData\r\n} from \"./store\"\r\nimport { getDataList as getDataListPermission } from \"../../apps/permission/store\"\r\nimport { getDataList as getDataListRolePermission } from \"../../apps/role_permission/store\"\r\nimport { Copy, Info } from \"react-feather\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport AvatarGroup from \"@components/avatar-group\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport illustration from \"@src/assets/images/illustration/faq-illustrations.svg\"\r\nimport toast from \"react-hot-toast\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\nimport UILoader from \"@components/ui-loader\"\r\n\r\nconst RoleCards = () => {\r\n  // ** States\r\n  const { t } = useTranslation()\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [modalType, setModalType] = useState(`${t(\"Add New\")}`)\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const storePermission = useSelector((state) => state.apps_permission)\r\n  const [permissionDropdown, setPermissionDropdown] = useState([])\r\n  const [permissionDropdownOld, setPermissionDropdownOld] = useState([])\r\n  const [description, setDescription] = useState(\"\")\r\n  const [formState, setFormState] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const handleEdit = (rowData) => {\r\n    // e.preventDefault()\r\n    setDescription(rowData.title)\r\n    console.log(rowData)\r\n    setFormState(\"edit\")\r\n    setModalType(`${t(\"Edit\")}`)\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then((x) => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n      dispatch(\r\n        getDataListRolePermission({\r\n          filter_id_role: rowData.id\r\n        })\r\n      ).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          // console.log(storePermission.dataDropdown)\r\n          // console.log(res.payload.data)\r\n          // const fillPermission = [\r\n          //   ...res.payload.data,\r\n          //   ...storePermission.dataDropdown\r\n          // ]\r\n          let responseData = [...res.payload.data]\r\n          let arr3 = storePermission.dataDropdown.map((item, i) =>\r\n            Object.assign({}, item, responseData[i])\r\n          )\r\n          let arr4 = storePermission.dataDropdown.map((item, i) =>\r\n            Object.assign({}, item, responseData[i])\r\n          )\r\n          // console.log(arr3)\r\n\r\n          setPermissionDropdown(arr3)\r\n          setPermissionDropdownOld(arr4)\r\n        }\r\n      })\r\n    } else {\r\n      setLoading(true)\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      dispatch(setDataById(rowData)).then((x) => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleChangeChk = (chkValue, index, field) => {\r\n    // console.log(chkValue.target.checked)\r\n    // console.log(field)\r\n    let permissionDropdownCopy = Object.assign([], permissionDropdown)\r\n    // console.log(permissionDropdownCopy)\r\n    permissionDropdownCopy[index][field] = chkValue.target.checked\r\n    setPermissionDropdown(permissionDropdownCopy)\r\n  }\r\n\r\n  const handleAdd = async () => {\r\n    setFormState(\"add\")\r\n    setModalType(`${t(\"Add New\")}`)\r\n    if (storePermission.data.length === 0 && !storePermission.isLoading) {\r\n      setLoading(true)\r\n      await dispatch(getDataListPermission({})).then((res) => {\r\n        let responseData = [...res.payload.data]\r\n        let arr3 = responseData\r\n        let arr4 = responseData\r\n        setPermissionDropdown(arr3)\r\n        setPermissionDropdownOld(arr4)\r\n\r\n        setShowModal(true)\r\n        setLoading(false)\r\n      })\r\n    } else {\r\n      let arr3 = [...storePermission.dataDropdown]\r\n      let arr4 = [...storePermission.dataDropdown]\r\n      setPermissionDropdown(arr3)\r\n      setPermissionDropdownOld(arr4)\r\n\r\n      setShowModal(true)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.description.length) {\r\n      // setShowModal(false)\r\n      formState === \"edit\" ? updateDataToApi(data) : postDataToApi(data)\r\n    } else {\r\n      setError(\"description\", {\r\n        type: \"manual\"\r\n      })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      const isSameData = (a, b) =>\r\n        a.id_permission === b.id_permission &&\r\n        a.post === b.post &&\r\n        a.put === b.put &&\r\n        a.delete === b.delete &&\r\n        a.get === b.get\r\n\r\n      const onlyInLeft = (left, right, compareFunction) =>\r\n        left.filter(\r\n          (leftValue) =>\r\n            !right.some((rightValue) => compareFunction(leftValue, rightValue))\r\n        )\r\n      const onlyInA = onlyInLeft(\r\n        permissionDropdown,\r\n        permissionDropdownOld,\r\n        isSameData\r\n      )\r\n      if (onlyInA.length > 0) {\r\n        data[\"role_permission\"] = onlyInA\r\n      }\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShowModal(false)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      // console.log(JSON.stringify(permissionDropdownOld))\r\n      // console.log(JSON.stringify(permissionDropdown))\r\n      const permissionState =\r\n        JSON.stringify(permissionDropdownOld) !==\r\n        JSON.stringify(permissionDropdown)\r\n      return store.selectedData.title !== data.description || permissionState\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n      const isSameData = (a, b) =>\r\n        a.id === b.id &&\r\n        a.id_permission === b.id_permission &&\r\n        a.post === b.post &&\r\n        a.put === b.put &&\r\n        a.delete === b.delete &&\r\n        a.get === b.get\r\n\r\n      const onlyInLeft = (left, right, compareFunction) =>\r\n        left.filter(\r\n          (leftValue) =>\r\n            !right.some((rightValue) => compareFunction(leftValue, rightValue))\r\n        )\r\n      const onlyInA = onlyInLeft(\r\n        permissionDropdown,\r\n        permissionDropdownOld,\r\n        isSameData\r\n      )\r\n      if (onlyInA.length > 0) {\r\n        data[\"role_permission\"] = onlyInA\r\n      }\r\n      // console.log(data)\r\n      dispatch(putData(data)).then((res) => {\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShowModal(false)\r\n          toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const onReset = () => {\r\n    setShowModal(false)\r\n    reset({ roleName: \"\" })\r\n  }\r\n\r\n  const handleModalClosed = () => {\r\n    setModalType(`${t(\"Add New\")}`)\r\n    setValue(\"roleName\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      storePermission.dataDropdown.length === 0 &&\r\n      !storePermission.isLoading\r\n    ) {\r\n      dispatch(getDataListPermission({ grid_mode: true }))\r\n    }\r\n  }, [dispatch, storePermission.dataDropdown.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={store.isLoadingSummary} loader={<Loader />}>\r\n        <Row>\r\n          {store.dataSummary.map((item, index) => {\r\n            return (\r\n              <Col key={index} xl={4} md={6}>\r\n                <Card>\r\n                  <CardBody>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <span>{`Total ${item.totalUsers} users`}</span>\r\n                      {item?.users?.length > 0 ? (\r\n                        <AvatarGroup\r\n                          data={item.users.map((x) => ({\r\n                            size: x.size,\r\n                            title: x.title,\r\n                            id: x.id,\r\n                            img:\r\n                              x?.img !== null\r\n                                ? x.img\r\n                                : require(`@src/assets/images/avatars/avatar-blank.png`)\r\n                                    .default\r\n                          }))}\r\n                        />\r\n                      ) : (\r\n                        <div style={{ height: \"30px\" }} className=\"\"></div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between align-items-end mt-1 pt-25\">\r\n                      <div className=\"role-heading  text-truncate\">\r\n                        <h4 className=\"fw-bolder mb-0\">{item.title ?? \"-\"}</h4>\r\n                        <div>\r\n                          <small className=\"fw-bolder\">\r\n                            {item.name ?? \"-\"}\r\n                          </small>\r\n                        </div>\r\n                        <Link\r\n                          to=\"/\"\r\n                          className=\"role-edit-modal\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleEdit(item)\r\n                          }}\r\n                        >\r\n                          <small className=\"fw-bolder\">\r\n                            {t(\"Edit\")} {t(\"Role\")}\r\n                          </small>\r\n                        </Link>\r\n                      </div>\r\n                      <Link\r\n                        to=\"\"\r\n                        className=\"text-body\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                      >\r\n                        {/* <Copy className=\"font-medium-5\" /> */}\r\n                      </Link>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            )\r\n          })}\r\n          {location.host === \"admin.insaba.co.id\" && (\r\n            <Col xl={4} md={6}>\r\n              <Card>\r\n                <Row className=\"mb-2\">\r\n                  <Col sm={5}>\r\n                    <div className=\"d-flex align-items-end justify-content-center h-100\">\r\n                      <img\r\n                        className=\"img-fluid mt-2\"\r\n                        src={illustration}\r\n                        alt=\"Image\"\r\n                        width={85}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  (\r\n                  <Col sm={7}>\r\n                    <CardBody className=\"text-sm-end text-center ps-sm-0\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className=\"text-nowrap mb-1\"\r\n                        onClick={() => {\r\n                          handleAdd()\r\n                        }}\r\n                      >\r\n                        {t(\"Add New Role\")}{\" \"}\r\n                      </Button>\r\n                      <p className=\"mb-0\">\r\n                        {t(\"Add a new role, if it does not exist\")}\r\n                      </p>\r\n                    </CardBody>\r\n                  </Col>\r\n                  )\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n\r\n        {showModal && (\r\n          <Modal\r\n            isOpen={showModal}\r\n            onClosed={handleModalClosed}\r\n            toggle={() => setShowModal(!showModal)}\r\n            className=\"modal-dialog-centered modal-xl\"\r\n          >\r\n            {/* <UILoader\r\n              blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n              loader={<Loader />}\r\n            > */}\r\n            <ModalHeader\r\n              className=\"bg-transparent\"\r\n              toggle={() => setShowModal(!showModal)}\r\n            ></ModalHeader>\r\n            {!store.loading && (\r\n              <ModalBody className=\"px-5 pb-5\">\r\n                <div className=\"text-center mb-4\">\r\n                  <h1>\r\n                    {modalType} {t(\"Role\")}\r\n                  </h1>\r\n                  <p>\r\n                    {formState === \"edit\"\r\n                      ? `${t(\"Set role name and permissions\")}`\r\n                      : t(\"Create new role\")}\r\n                  </p>\r\n                </div>\r\n                <Row tag=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                  <Col xs={12}>\r\n                    <Label className=\"form-label\" for=\"description\">\r\n                      {t(\"Role Name\")}\r\n                    </Label>\r\n                    <Controller\r\n                      name=\"description\"\r\n                      control={control}\r\n                      defaultValue={description}\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          {...field}\r\n                          id=\"description\"\r\n                          placeholder={t(\"Enter role name\")}\r\n                          invalid={errors.description && true}\r\n                        />\r\n                      )}\r\n                    />\r\n                    {errors.description && (\r\n                      <FormFeedback>\r\n                        {t(\"Please enter a valid role name\")}\r\n                      </FormFeedback>\r\n                    )}\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <h4 className=\"mt-2 pt-50\">{t(\"Role Permissions\")}</h4>\r\n                    <Table className=\"table-flush-spacing\" responsive>\r\n                      <tbody>\r\n                        {/* <tr>\r\n                      <td className=\"text-nowrap fw-bolder\">\r\n                        <span className=\"me-50\">\r\n                          {\" \"}\r\n                          {t(\"Administrator Access\")}\r\n                        </span>\r\n                        <Info size={14} id=\"info-tooltip\" />\r\n                        <UncontrolledTooltip\r\n                          placement=\"top\"\r\n                          target=\"info-tooltip\"\r\n                        >\r\n                          {t(\"Allows a full access to the system\")}\r\n                        </UncontrolledTooltip>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"form-check\">\r\n                          <Input type=\"checkbox\" id=\"select-all\" />\r\n                          <Label className=\"form-check-label\" for=\"select-all\">\r\n                            {t(\"Select All\")}\r\n                          </Label>\r\n                        </div>\r\n                      </td>\r\n                    </tr> */}\r\n                        {permissionDropdown.map((role, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td className=\"text-nowrap fw-bolder\">\r\n                                <span className=\"me-50\"> {role.label}</span>\r\n                                <Info size={14} id={`info_${role.id}`} />\r\n                                <UncontrolledTooltip\r\n                                  placement=\"top\"\r\n                                  target={`info_${role.id}`}\r\n                                >\r\n                                  {t(role.description)}\r\n                                </UncontrolledTooltip>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"d-flex\">\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.get}\r\n                                      type=\"checkbox\"\r\n                                      id={`read-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"get\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`read-${role.id}`}\r\n                                    >\r\n                                      {t(\"Read\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.post}\r\n                                      type=\"checkbox\"\r\n                                      id={`write-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"post\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`write-${role.id}`}\r\n                                    >\r\n                                      {t(\"Create\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.put}\r\n                                      type=\"checkbox\"\r\n                                      id={`create-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"put\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`create-${role.id}`}\r\n                                    >\r\n                                      {t(\"Update\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check\">\r\n                                    <Input\r\n                                      checked={role.delete}\r\n                                      type=\"checkbox\"\r\n                                      id={`delete-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"delete\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`delete-${role.id}`}\r\n                                    >\r\n                                      {t(\"Delete\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        })}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Col>\r\n                  <Col className=\"text-center mt-2\" xs={12}>\r\n                    <Button type=\"submit\" color=\"primary\" className=\"me-1\">\r\n                      {t(\"Submit\")}\r\n                    </Button>\r\n                    <Button type=\"reset\" outline onClick={onReset}>\r\n                      {t(\"Cancel\")}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n            )}\r\n            {/* </UILoader> */}\r\n          </Modal>\r\n        )}\r\n      </UILoader>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RoleCards\r\n","import { Fragment, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport \"./style.scss\"\nimport { selectThemeColors } from \"@utils\"\nimport classnames from \"classnames\"\nimport Select from \"react-select\"\n\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\n\nconst List = ({\n  lookupMode_fieldName = \"\",\n  lookupMode_isMulti = false,\n  lookupMode_onChange,\n  lookupMode_defaultValue,\n  errorState\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const onChangeInput = (e) => {\n    return lookupMode_onChange(e.value, lookupMode_fieldName)\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      dispatch(getDataList({}))\n    }\n  }, [dispatch, store.data.length])\n\n  return (\n    <Fragment>\n      <Select\n        theme={selectThemeColors}\n        defaultValue={\n          !lookupMode_isMulti\n            ? store.dataDropdown.filter(\n                (el) => el.value === lookupMode_defaultValue\n              )\n            : lookupMode_defaultValue\n        }\n        isMulti={lookupMode_isMulti}\n        // onChange={lookupMode_onChange}\n        onChange={onChangeInput}\n        options={store.dataDropdown}\n        className=\"react-select\"\n        classNamePrefix=\"select\"\n      />\n    </Fragment>\n  )\n}\n\nexport default List\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Spinner } from \"reactstrap\"\n\n// ** Styles\nimport \"./ui-loader.scss\"\n\nconst UILoader = (props) => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag\n      className={classnames(\"ui-loader\", {\n        [className]: className,\n        show: blocking\n      })}\n    >\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className=\"overlay\" /*eslint-disable */\n            {...(blocking && overlayColor\n              ? { style: { backgroundColor: overlayColor } }\n              : {})}\n            /*eslint-enable */\n          ></div>\n          <div className=\"loader\">{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: \"div\",\n  blocking: false,\n  loader: <Spinner color=\"primary\" />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { UncontrolledTooltip } from \"reactstrap\"\n\n// ** Custom Components Imports\nimport Avatar from \"@components/avatar\"\nimport { Link } from \"react-router-dom\"\n\nconst AvatarGroup = (props) => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Conditional Tag\n  const Tag = tag ? tag : \"div\"\n\n  // ** Render Data\n  const renderData = () => {\n    return data.map((item, i) => {\n      let id = item?.id\n        ? `avatar_${i}_${item.id}`\n        : item.title.split(\" \").join(\"-\")\n      const linkUrl = item?.linkUrl\n      delete item?.linkUrl\n      const ItemTag = item.tag ? item.tag : \"div\"\n      const Element = (\n        <Fragment key={i}>\n          {/* {id ? (\n            <UncontrolledTooltip placement={item.placement} target={id}>\n              {item.title}\n            </UncontrolledTooltip>\n          ) : null} */}\n          {!item.meta ? (\n            item?.img ? (\n              <Avatar\n                tag={ItemTag}\n                className={classnames(\"pull-up\", {\n                  [item.className]: item.className\n                })}\n                {...(id ? { id: id } : {})}\n                {...item}\n                title={undefined}\n                meta={undefined}\n              />\n            ) : (\n              <Avatar\n                tag={ItemTag}\n                initials\n                className={classnames(\"pull-up\", {\n                  [item.className]: item.className\n                })}\n                {...(id ? { id: id } : {})}\n                color=\"light-primary\"\n                content={`${item.title}`}\n              />\n            )\n          ) : null}\n          {item.meta ? (\n            <ItemTag className=\"d-flex align-items-center ps-1\">\n              {item.meta}\n            </ItemTag>\n          ) : null}\n        </Fragment>\n      )\n      if (linkUrl) {\n        return (\n          <Link key={`avatar_${i}`} to={linkUrl}>\n            {Element}\n          </Link>\n        )\n      } else {\n        return Element\n      }\n    })\n  }\n\n  return (\n    <Tag\n      className={classnames(\"avatar-group\", {\n        [className]: className\n      })}\n    >\n      {renderData()}\n    </Tag>\n  )\n}\n\nexport default AvatarGroup\n\n// ** PropTypes\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n}\n","export default __webpack_public_path__ + \"static/media/faq-illustrations.f8c4ea78.svg\";"],"sourceRoot":""}