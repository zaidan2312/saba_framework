{"version":3,"sources":["views/apps/permission_endpoint/modal/index.js","views/apps/permission_endpoint/Table.js","../../src/mounts.js","../../src/index.js"],"names":["ModalAddEdit","_ref","show","setShow","detailPage","formState","setFormState","t","useTranslation","id","useParams","colors","useContext","ThemeColors","_useState","useState","_useState2","_slicedToArray","setLoadingText","dispatch","useDispatch","allStore","useSelector","state","_useState3","_useState4","dynamicComponents","setDynamicComponents","_useState5","_useState6","formDatas","_useState7","_useState8","formDatasError","setFormDatasError","_useForm","useForm","setError","control","handleSubmit","handleReset","errors","resetSelectedData","handleChangeInputs","value","fieldName","isMulti","arguments","length","undefined","Array","isArray","index","indexOf","splice","push","_objectSpread","_defineProperty","useEffect","componentsImport","dynamicFormRelation","dynamicForm","filter","el","type","_loop","i","_dynamicFormRelation$","_dynamicFormRelation$2","_allStore$storeName","_dynamicFormRelation$3","_dynamicFormRelation$4","path_name","replaceAll","MyComponent","lazy","concat","_jsx","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","isMultiSelection","lookupMode_onChange","lookupMode_defaultValue","isM2MDefValFromGrid","storeName","data","map","x","selectedData","lookupMode_isM2MDefValFromGrid","Modal","isOpen","toggle","className","children","_jsxs","UILoader","blocking","isLoadingAddEdit","isLoadingDetail","loader","Loader","ModalHeader","ModalBody","pageTitle","Form","onSubmit","storeData","sortedObject","key","JSON","stringify","countChanges","Object","values","every","field","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","_data$key","icon","postData","errorFields","assign","_formDatas$key","Row","item","includes","_item$fieldLabel","_formDatas$item$field","Col","md","xs","Label","for","fieldLabel","Suspense","fallback","textAlign","Button","outline","onClick","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","Input","CustomHeader","store","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","handleFiltersChange","lookupMode_defaultFilter","ability","AbilityContext","allState","invoices","getUserData","isLoading","getDataListPermission","xl","htmlFor","onChange","width","can","sessionStorage","getItem","e","target","name","title","List","_ref2","filtersCustomAdd","storeApp","apps_app","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","_useState9","_useState10","setRowsPerPage","_useState11","_useState12","selectedRows","setSelectedRows","_useState13","_useState14","filtersCustom","_useState15","_useState16","toggleCleared","setToggleCleared","_useState17","_useState18","sidebarOpen","setSidebarOpen","_useState19","_useState20","loading","setLoading","_useState21","_useState22","_useState23","_useState24","showModal","setShowModal","_useState25","_useState26","handleEdit","rowData","detailFromGrid","setDataById","getDataListApp","handleCloseModal","revivalBack","neutralizeBack","handleDelete","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","sent","deleteData","stop","_x","apply","_ref4","_callee2","countSelectedCopy","_context2","a","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","columns","_toConsumableArray","dynamicColumns","column","columnName","sortField","center","sortable","selector","row","cell","dataFormat","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","GlobalActionsTable","disabledAction","tableColumns","useMemo","_Fragment","Skeleton","sx","bgcolor","dark","light","animation","height","getAlwaysGrid","Fragment","Card","DataTable","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","Number","Math","ceil","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","NoDataDisplay","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","ChevronDown","filters","isFiltered","keys","some","k","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget","par_name","mounts","getter","swal","getTitle","getHtmlContainer","getConfirmButton","getDenyButton","getCancelButton","getFooter","getCloseButton","getIcon","querySelector","getLoader","noop","ParentSwal","extractReactParams","params","reactParams","otherParams","mountKeys","mount","entries","forEach","React__default","isValidElement","render","domElement","find","ReactDOM__default","__mountedDomElements","unrender","unmountComponentAtNode","_ParentSwal","_inherits","_class","_super","_createSuper","_classCallCheck","_createClass","mixinParams","_this","this","__params","_extractReactParams","_extractReactParams2","superDidOpen","didOpen","superDidDestroy","didDestroy","_get","_getPrototypeOf","prototype","call","popup","_extractReactParams3","_extractReactParams4","args","argsToParams"],"mappings":"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","file":"static/js/17.2e3fbf50.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport store, {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById,\r\n  dynamicForm\r\n} from \"../store\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\nimport { getDataList as getDataListApp } from \"../../app/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n// import List from \"../../menu\"\r\n// import {List as PermissionComponent} from \"../../permission\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const dispatch = useDispatch()\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicComponents, setDynamicComponents] = useState({})\r\n  const [formDatas, setFormDatas] = useState({})\r\n  const [formDatasError, setFormDatasError] = useState({})\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = () => {\r\n    if (countChanges(formDatas)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = () => {\r\n    if (\r\n      Object.values(formDatas).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(formDatas)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      // console.log(\"ERORR\")\r\n      // console.log(formDatas)\r\n      let errorFields = Object.assign({}, formDatasError)\r\n      for (let key in formDatas) {\r\n        // console.log(key, formDatas[key])\r\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\r\n          errorFields[key] = true\r\n        }\r\n      }\r\n      // console.log(errorFields)\r\n      setFormDatasError(errorFields)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\r\n    // console.log(value, fieldName, isMulti)\r\n    if (isMulti && !Array.isArray(value)) {\r\n      if (formDatas[fieldName]) {\r\n        const index = formDatas[fieldName].indexOf(value)\r\n        if (index !== -1) {\r\n          formDatas[fieldName].splice(index, 1)\r\n        } else {\r\n          formDatas[fieldName].push(value)\r\n        }\r\n      } else {\r\n        formDatas[fieldName] = [value]\r\n      }\r\n    } else {\r\n      formDatas[fieldName] = value\r\n    }\r\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // DYNAMIC IMPORT COMPONENTS\r\n    let componentsImport = {}\r\n    const dynamicFormRelation = dynamicForm.filter(function (el) {\r\n      return el.type === \"dropdown\" || el.type === \"table\"\r\n    })\r\n\r\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\r\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\r\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\r\n        \"id_\",\r\n        \"\"\r\n      )\r\n\r\n      formDatas[fieldName] = null\r\n      formDatasError[fieldName] = false\r\n      const MyComponent = lazy(() => import(`../../${path_name}`))\r\n      componentsImport[`${path_name}_comp`] = (\r\n        <MyComponent\r\n          lookupMode={true}\r\n          lookupMode_fieldName={fieldName}\r\n          lookupMode_dropdown={dynamicFormRelation[i][\"type\"] === \"dropdown\"}\r\n          lookupMode_isMulti={dynamicFormRelation[i].isMultiSelection ?? false}\r\n          lookupMode_onChange={handleChangeInputs}\r\n          lookupMode_defaultValue={\r\n            dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n              ? allStore[storeName].data.map((x) => x[fieldName])\r\n              : allStore[storeName]?.selectedData\r\n              ? allStore[storeName].selectedData[fieldName]\r\n              : \"\"\r\n          }\r\n          lookupMode_isM2MDefValFromGrid={\r\n            dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\r\n          }\r\n        />\r\n      )\r\n    }\r\n\r\n    setDynamicComponents(componentsImport)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={\r\n          allStore[storeName].isLoadingAddEdit ||\r\n          allStore[storeName].isLoadingDetail\r\n        }\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              {dynamicForm.map((item, index) => {\r\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\r\n                  const path_name = item.fieldName.replaceAll(\"id_\", \"\")\r\n                  return (\r\n                    <Col key={path_name} md={12} xs={12}>\r\n                      {item.type !== \"table\" && (\r\n                        <Label className=\"form-label\" for={item.fieldName}>\r\n                          {t(item.fieldLabel ?? \"\")}\r\n                        </Label>\r\n                      )}\r\n                      <Suspense fallback={<div>Loading...</div>}>\r\n                        <div\r\n                          className={\r\n                            !formDatasError[item.fieldName]\r\n                              ? \"dynamicForm_input\"\r\n                              : \"dynamicForm_input dynamicForm_input_invalid\"\r\n                          }\r\n                        >\r\n                          {dynamicComponents[`${path_name}_comp`]}\r\n                          {item?.isM2MDefValFromGrid &&\r\n                            formDatas[item.fieldName] && (\r\n                              <div\r\n                                style={{ textAlign: \"right\" }}\r\n                                className=\"text-primary\"\r\n                              >\r\n                                {formDatas[item.fieldName]?.length}{\" \"}\r\n                                {t(item.fieldLabel)} {t(\"Selected\")}\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </Suspense>\r\n                    </Col>\r\n                  )\r\n                }\r\n              })}\r\n\r\n              {/* <Col md={12} xs={12}>\r\n                <List lookupMode={true} lookupMode_isMulti={true} />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"id_permission\">\r\n                  {t(\"Permission\")}\r\n                </Label>\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                  {dynamicComponents[\"permission_comp\"]}\r\n                </Suspense>\r\n              </Col> */}\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef\r\n} from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  disabledAction\r\n} from \"./store\"\r\n\r\nimport { getDataList as getDataListApp } from \"../app/store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  CardText\r\n} from \"reactstrap\"\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Moment from \"moment\"\r\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\r\n\r\nimport { getDataList as getDataListPermission } from \"../permission/store\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected,\r\n  handleFiltersChange,\r\n  lookupMode,\r\n  lookupMode_defaultFilter\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const dispatch = useDispatch()\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  ////FILTER\r\n  const allState = useSelector((state) => state)\r\n\r\n  useEffect(() => {\r\n    if (\r\n      allState[\"apps_permission\"].data.length === 0 ||\r\n      !allState[\"apps_permission\"].isLoading\r\n    ) {\r\n      // console.log(dispatch({ type: \"api/permission/getDataList\", payload: {} }))\r\n      dispatch(getDataListPermission({}))\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          {!lookupMode && (\r\n            <div className=\"d-flex align-items-center w-100\">\r\n              <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n              <Input\r\n                className=\"mx-50\"\r\n                type=\"select\"\r\n                id=\"rows-per-page\"\r\n                value={rowsPerPage}\r\n                onChange={handlePerPage}\r\n                style={{ width: \"5rem\" }}\r\n              >\r\n                <option value=\"10\">10</option>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"50\">50</option>\r\n              </Input>\r\n              <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\r\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n          {!lookupMode_defaultFilter ? (\r\n            <div className=\"mt-50 width-200 me-1 mt-sm-0 mt-1\">\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                // value={role}\r\n                onChange={(e) =>\r\n                  handleFiltersChange(e.target.value, \"filter_id_permission\")\r\n                }\r\n              >\r\n                <option value=\"\">\r\n                  {t(\"Select\")} {t(\"Permission\")}\r\n                </option>\r\n                {allState[\"apps_permission\"].data.map((item, index) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.title}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            {ability.can(\r\n              \"post\",\r\n              sessionStorage.getItem(\"current_page_perm\")\r\n            ) ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = ({\r\n  filtersCustomAdd,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_dropdown,\r\n  lookupMode_isMulti,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue,\r\n  lookupMode_isM2MDefValFromGrid,\r\n  lookupMode_defaultFilter\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const storeApp = useSelector((state) => state.apps_app)\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n\r\n  const [filtersCustom, setFiltersCustom] = useState(\r\n    lookupMode_defaultFilter ?? {}\r\n  )\r\n\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        if (storeApp.data.length === 0 && !storeApp.isLoading) {\r\n          dispatch(getDataListApp({})).then((res) => {\r\n            setLoading(false)\r\n            setShowModal(true)\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleFiltersChange = (value, par_name) => {\r\n    // console.log(event)\r\n    // console.log(par_name)\r\n    filtersCustom[par_name] = parseInt(value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n  }, [])\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderCell = (row, column) => {\r\n    const field = row[column.fieldName]\r\n    const dataFormat = column.dataFormat\r\n    if (dataFormat) {\r\n      if (dataFormat.includes(\":\")) {\r\n        const columnTypeFormat = dataFormat.split(\":\")\r\n        const columnType = columnTypeFormat[0]\r\n        const columnFormat = columnTypeFormat[1]\r\n        let columnFormated = row[column.fieldName]\r\n        if (columnType === \"date\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        if (columnType === \"datetime\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        return columnFormated\r\n      }\r\n    }\r\n    return row[column.fieldName]\r\n  }\r\n\r\n  const columns = [\r\n    ...store.dynamicColumns.map((column) => ({\r\n      name: column.columnName,\r\n      sortField: column.fieldName,\r\n      center: false,\r\n      sortable: true,\r\n      selector: (row) => row[column.fieldName],\r\n      cell: (row) => renderCell(row, column)\r\n    })),\r\n    // {\r\n    //   name: t(\"App Name\"),\r\n    //   sortField: \"attributes\",\r\n    //   center: false,\r\n    //   sortable: true,\r\n    //   selector: (row) => row.attributes,\r\n    //   cell: (row) => row.attributes\r\n    // },\r\n    {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <GlobalActionsTable\r\n          disabledAction={disabledAction}\r\n          row={row}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) =>\r\n              column.name === \"Actions\" ? (\r\n                <>\r\n                  <Skeleton\r\n                    sx={{ bgcolor: colors.dark.light }}\r\n                    animation=\"wave\"\r\n                    className=\"ms-2 me-1\"\r\n                    width={30}\r\n                    height={40}\r\n                  />\r\n                  <Skeleton\r\n                    sx={{ bgcolor: colors.dark.light }}\r\n                    animation=\"wave\"\r\n                    width={30}\r\n                    height={40}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <Skeleton\r\n                  sx={{ bgcolor: colors.dark.light }}\r\n                  animation=\"wave\"\r\n                  width=\"100%\"\r\n                  height={40}\r\n                />\r\n              )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      store.data.length === 0 ||\r\n      (!store.isLoading && getAlwaysGrid) ||\r\n      lookupMode_defaultFilter\r\n    ) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage,\r\n          ...filtersCustom\r\n        })\r\n      )\r\n    }\r\n    // console.log(lookupMode_defaultFilter)\r\n  }, [dispatch, sort_dir, sort, currentPage, filtersCustom])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                  handleFiltersChange={handleFiltersChange}\r\n                  lookupMode={lookupMode}\r\n                  lookupMode_defaultFilter={lookupMode_defaultFilter}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent (ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams (params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map(mount => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n  function render (swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find(mount => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      ReactDOM.render(value, domElement)\n      swal.__mountedDomElements.push(domElement)\n    })\n  }\n\n  function unrender (swal) {\n    swal.__mountedDomElements.forEach(domElement => {\n      ReactDOM.unmountComponentAtNode(domElement)\n    })\n    swal.__mountedDomElements = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params, mixinParams) {\n      this.__mountedDomElements = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams)\n            superDidOpen(popup)\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        }),\n      )\n    }\n\n    update (params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n"],"sourceRoot":""}