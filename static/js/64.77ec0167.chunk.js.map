{"version":3,"sources":["views/apps/permission/DropDown.js"],"names":["List","lookupMode_fieldName","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","dispatch","errorState","useTranslation","t","useDispatch","store","useSelector","state","storeName","useEffect","data","length","isLoading","getAlwaysGrid","getDataList","theme","selectThemeColors","defaultValue","dataDropdown","filter","el","value","isMulti","onChange","e","options","className","classNamePrefix"],"mappings":"yIAAA,kFAqDeA,UA3CF,SAAC,GAMP,IAAD,IALJC,4BAKI,MALmB,GAKnB,MAJJC,0BAII,SAHJC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,wBAIMC,GAFF,EADJC,WAEcC,cAANC,EACSC,eACXC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,gBAY3C,OANAC,qBAAU,YACkB,IAAtBJ,EAAMK,KAAKC,SAAkBN,EAAMO,WAAaC,kBAClDb,EAASc,sBAAY,OAEtB,CAACd,EAAUK,EAAMK,KAAKC,SAGvB,cAAC,WAAD,UACE,cAAC,IAAD,CACEI,MAAOC,IACPC,aACGpB,EAIGE,EAHAM,EAAMa,aAAaC,QACjB,SAACC,GAAD,OAAQA,EAAGC,QAAUtB,KAI7BuB,QAASzB,EAET0B,SAvBgB,SAACC,GACrB,OAAO1B,EAAoB0B,EAAEH,MAAOzB,IAuBhC6B,QAASpB,EAAMa,aACfQ,UAAU,eACVC,gBAAgB,e","file":"static/js/64.77ec0167.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport \"./style.scss\"\nimport { selectThemeColors } from \"@utils\"\nimport classnames from \"classnames\"\nimport Select from \"react-select\"\n\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\n\nconst List = ({\n  lookupMode_fieldName = \"\",\n  lookupMode_isMulti = false,\n  lookupMode_onChange,\n  lookupMode_defaultValue,\n  errorState\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const onChangeInput = (e) => {\n    return lookupMode_onChange(e.value, lookupMode_fieldName)\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      dispatch(getDataList({}))\n    }\n  }, [dispatch, store.data.length])\n\n  return (\n    <Fragment>\n      <Select\n        theme={selectThemeColors}\n        defaultValue={\n          !lookupMode_isMulti\n            ? store.dataDropdown.filter(\n                (el) => el.value === lookupMode_defaultValue\n              )\n            : lookupMode_defaultValue\n        }\n        isMulti={lookupMode_isMulti}\n        // onChange={lookupMode_onChange}\n        onChange={onChangeInput}\n        options={store.dataDropdown}\n        className=\"react-select\"\n        classNamePrefix=\"select\"\n      />\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}