{"version":3,"sources":["views/apps/menu/icons/material.js"],"names":["FeatherIcons","_ref","setIcon","setCanvasOpen","IconsArr","IconsComponentsArr","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","setFilteredArr","_useState5","_useState6","filteredComponentsArr","setFilteredComponentsArr","_useState7","_useState8","active","setActive","_useState9","_useState10","setLoadingText","t","useTranslation","handleIconCardClick","icon","key","customName","concat","replace","split","join","toLowerCase","substring","store","useSelector","state","dispatch","useDispatch","useEffect","console","log","data","material","length","_loop","includes","push","IconTag","Icons","_jsxs","Fragment","children","_jsx","Card","id","className","classnames","onClick","CardBody","UncontrolledTooltip","placement","target","trim","setIconsComponents","Row","Col","sm","InputGroup","InputGroupText","Input","placeholder","onChange","e","val","arr","arrComponents","filter","handleFilter","value","style","justifyContent"],"mappings":"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","file":"static/js/64.f4514835.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport classnames from \"classnames\"\r\n// import * as Icons from \"react-feather\"\r\nimport * as Icons from \"@mui/icons-material\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  CardBody,\r\n  InputGroup,\r\n  InputGroupText,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"@styles/base/pages/ui-feather.scss\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setIconsComponents } from \"../../../../redux/icons\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nconst FeatherIcons = ({ setIcon, setCanvasOpen }) => {\r\n  const IconsArr = []\r\n  const IconsComponentsArr = []\r\n  // ** States\r\n  const [query, setQuery] = useState([]),\r\n    [filteredArr, setFilteredArr] = useState([]),\r\n    [filteredComponentsArr, setFilteredComponentsArr] = useState([]),\r\n    [active, setActive] = useState(null)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const { t } = useTranslation()\r\n\r\n  const handleFilter = (val) => {\r\n    const arr = []\r\n    const arrComponents = []\r\n    if (val.length) {\r\n      IconsArr.filter((icon) => {\r\n        if (icon.toLowerCase().includes(val.toLowerCase())) {\r\n          arr.push(icon)\r\n\r\n          const IconTag = Icons[icon]\r\n          arrComponents.push(\r\n            <Fragment key={icon}>\r\n              <Card\r\n                id={icon}\r\n                className={classnames(\r\n                  \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n                  {\r\n                    active: active === icon\r\n                  }\r\n                )}\r\n                onClick={() => handleIconCardClick(icon)}\r\n              >\r\n                <CardBody>\r\n                  <div className=\"icon-wrapper\">\r\n                    <IconTag />\r\n                  </div>\r\n                  <p className=\"icon-name text-truncate mb-0 mt-1\">{icon}</p>\r\n                </CardBody>\r\n              </Card>\r\n              <UncontrolledTooltip placement=\"top\" target={icon}>\r\n                {icon.replace(/([A-Z])/g, \" $1\").trim()}\r\n              </UncontrolledTooltip>\r\n            </Fragment>\r\n          )\r\n        }\r\n      })\r\n    }\r\n    setFilteredArr([...arr])\r\n    setFilteredComponentsArr([...arrComponents])\r\n  }\r\n\r\n  function camelToUnderscore(key) {\r\n    let result = key.replace(/([A-Z])/g, \" $1\")\r\n    return result.split(\" \").join(\"_\").toLowerCase()\r\n  }\r\n\r\n  const handleIconCardClick = (icon) => {\r\n    // console.log(icon)\r\n    const customName = `material:${camelToUnderscore(icon).substring(1)}`\r\n    setIcon(customName)\r\n    setActive(icon)\r\n    setCanvasOpen(false)\r\n  }\r\n\r\n  const renderIcons = () => {\r\n    // console.log(IconsArr)\r\n    const dataToRender = query.length ? filteredArr : IconsArr\r\n    const componentsToRender = query.length\r\n      ? filteredComponentsArr\r\n      : IconsComponentsArr\r\n    if (dataToRender.length) {\r\n      // return dataToRender.map((icon) => {\r\n      //   const IconTag = Icons[icon]\r\n      //   return (\r\n      //     <Fragment key={icon}>\r\n      //       <Card\r\n      //         id={icon}\r\n      //         className={classnames(\r\n      //           \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n      //           {\r\n      //             active: active === icon\r\n      //           }\r\n      //         )}\r\n      //         onClick={() => handleIconCardClick(icon)}\r\n      //       >\r\n      //         <CardBody>\r\n      //           <div className=\"icon-wrapper\">\r\n      //             <IconTag />\r\n      //           </div>\r\n      //           <p className=\"icon-name text-truncate mb-0 mt-1\">{icon}</p>\r\n      //         </CardBody>\r\n      //       </Card>\r\n      //       <UncontrolledTooltip placement=\"top\" target={icon}>\r\n      //         {icon.replace(/([A-Z])/g, \" $1\").trim()}\r\n      //       </UncontrolledTooltip>\r\n      //     </Fragment>\r\n      //   )\r\n      // })\r\n      return componentsToRender\r\n    } else {\r\n      return (\r\n        <div className=\"d-flex align-items-center justify-content-center w-100\">\r\n          <h4 className=\"mb-0\">{t(\"No Icons Found!\")}</h4>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const store = useSelector((state) => state[\"icons_store\"])\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    console.log(store.data.material.length)\r\n    if (store.data.material.length === 0) {\r\n      // console.log(store.data.material)\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(\"Icons\")}`)\r\n\r\n      for (const key in Icons) {\r\n        if (key.includes(\"Outlined\")) {\r\n          IconsArr.push(key)\r\n\r\n          const IconTag = Icons[key]\r\n          IconsComponentsArr.push(\r\n            <Fragment key={key}>\r\n              <Card\r\n                id={key}\r\n                className={classnames(\r\n                  \"icon-card cursor-pointer text-center mb-2 mx-50\",\r\n                  {\r\n                    active: active === key\r\n                  }\r\n                )}\r\n                onClick={() => handleIconCardClick(key)}\r\n              >\r\n                <CardBody>\r\n                  <div className=\"icon-wrapper\">\r\n                    <IconTag />\r\n                  </div>\r\n                  <p className=\"icon-name text-truncate mb-0 mt-1\">{key}</p>\r\n                </CardBody>\r\n              </Card>\r\n              <UncontrolledTooltip placement=\"top\" target={key}>\r\n                {key.replace(/([A-Z])/g, \" $1\").trim()}\r\n              </UncontrolledTooltip>\r\n            </Fragment>\r\n          )\r\n        }\r\n      }\r\n      dispatch(setIconsComponents({ material: IconsComponentsArr }))\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <div className=\"icon-search-wrapper mt-0 mb-2 mx-auto\">\r\n            <InputGroup className=\"input-group-merge mb-1\">\r\n              <InputGroupText>\r\n                {/* <Icons.Search size={14} /> */}\r\n              </InputGroupText>\r\n              <Input\r\n                placeholder={t(\"Search icons...\")}\r\n                onChange={(e) => {\r\n                  handleFilter(e.target.value)\r\n                  setQuery(e.target.value)\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div\r\n        className=\"d-flex flex-wrap\"\r\n        style={{\r\n          justifyContent: \"center\"\r\n        }}\r\n        id=\"icons-container\"\r\n      >\r\n        {query.length ? filteredComponentsArr : store.data.material}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default FeatherIcons\r\n"],"sourceRoot":""}