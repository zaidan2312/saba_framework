{"version":3,"sources":["router/Router.js","App.js","views/apps/unit/store/my_unit.js"],"names":["Error","lazy","Maintenance","Login","NotAuthorized","PublicPage","Router","loading","layout","useLayout","allRoutes","getRoutes","getHomeRoute","user","getUserData","getHomeRouteForLoggedInUser","role_name","routes","useRoutes","path","index","element","replace","to","BlankLayout","children","clientId","meta","publicRoute","initBlank","store","getState","my_menu","dataMyMenu","length","iconList","Object","keys","Icons","filter","key","map","icon","library","add","App","dispatch","useDispatch","effectRan","useRef","navigate","useNavigate","pingServers","a","serversList","JSON","parse","sessionStorage","getItem","Promise","all","url","fetch","method","response","ok","console","error","useEffect","isUserLoggedIn","window","location","pathname","timer","handleVisibilityChange","datetime","Date","document","hidden","localStorage","setItem","clearInterval","lastTimeStr","timestamp","parseInt","lastTime","diffInSeconds","Math","abs","getTime","log","getMyNotifications","unread_count","then","res","payload","count","count_unread","countFix","title","replaceAll","setInterval","addEventListener","removeEventListener","replacePrimaryColor","primaryColorBe","styleElements","head","querySelectorAll","rgbColor","hex","r","substring","g","b","hexToRgb","rgbColorReplacer","rgbaColorReplacer","forEach","styleElement","textContent","current","navigator","onLine","getDomainInfo","requestStatus","Swal","fire","text","confirmButtonText","customClass","confirmButton","result","isConfirmed","reload","logoResp","app","logo","favicon","unit","unit_app_attributes","getElementById","href","primaryColor","setting","elementSelect","documentElement","style","setTimeout","setProperty","getAppMenu","getUnits","indexOf","search","enable_registration","fallback","initSelectData","value","label","setUnitSelectedDropdown","createAsyncThunk","data","params","rejectWithValue","member_of","userMember","fetchState","some","e","children_count","useJwt","ssoAxiosInterceptor","get","total","getUnit","id","axios","addUnit","post","units","getAllUnit","deleteUnit","delete","MyUnitsSlice","createSlice","name","initialState","crudTitle","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","dataDropdown","selectedUnit","selectedUnitMulti","reducers","setUnitSelected","state","action","resetAll","extraReducers","builder","addCase","fulfilled","pending","item","unshift","rejected","message"],"mappings":"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","file":"static/js/196.0c164cc0.chunk.js","sourcesContent":["// ** Router imports\nimport { lazy, useEffect, useState, Suspense } from \"react\"\n\n// ** Router imports\nimport { useRoutes, Navigate } from \"react-router-dom\"\n\n// ** Layouts\nimport BlankLayout from \"@layouts/BlankLayout\"\n\n// ** Hooks Imports\nimport { useLayout } from \"@hooks/useLayout\"\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from \"../utility/Utils\"\n\n// ** GetRoutes\nimport { getRoutes } from \"./routes\"\n\nimport { GoogleOAuthProvider } from \"@react-oauth/google\"\nimport Spinner from \"../@core/components/spinner/Fallback-spinner\"\n// ** Components\nconst Error = lazy(() => import(\"../views/pages/misc/Error\"))\nconst Maintenance = lazy(() => import(\"../views/pages/misc/Maintenance\"))\nconst Login = lazy(() => import(\"../views/pages/authentication/Login\"))\nconst NotAuthorized = lazy(() => import(\"../views/pages/misc/NotAuthorized\"))\n\nconst PublicPage = lazy(() => import(\"@src/shared/public_pages\"))\n\nimport { store } from \"../redux/store\"\n\nconst Router = ({ loading }) => {\n  // ** Hooks\n  const { layout } = useLayout()\n  const allRoutes = getRoutes(layout)\n\n  const getHomeRoute = () => {\n    const user = getUserData()\n    if (user) {\n      return getHomeRouteForLoggedInUser(user.role_name)\n    } else {\n      return \"/login\"\n    }\n  }\n\n  const routes = useRoutes([\n    {\n      path: \"/\",\n      index: true,\n      element: <Navigate replace to={getHomeRoute()} />\n    },\n    {\n      path: \"/login\",\n      element: <BlankLayout />,\n      children: [\n        {\n          path: \"/login\",\n          element: (\n            <GoogleOAuthProvider clientId=\"1096092734184-n0tcl5abejf0s0r2t4fmoi3qf4fhen76.apps.googleusercontent.com\">\n              <Login />{\" \"}\n            </GoogleOAuthProvider>\n          )\n        }\n      ]\n    },\n    {\n      path: \"/error\",\n      element: <BlankLayout />,\n      children: [{ path: \"/error\", element: <Error /> }]\n    },\n    {\n      path: \"/public/:pageId\",\n      element: <PublicPage />,\n      meta: {\n        publicRoute: true,\n        layout: \"blank\"\n      }\n    },\n    {\n      path: \"/public/:moduleId/:pageId\",\n      element: <PublicPage />,\n      meta: {\n        publicRoute: true,\n        layout: \"blank\"\n      }\n    },\n    {\n      path: \"*\",\n      element: <BlankLayout />,\n      // children: [{ path: \"*\", element: <Error /> }]\n      children: [{ path: \"*\", element: <Spinner /> }]\n    },\n    ...allRoutes\n  ])\n\n  const initBlank = useRoutes([\n    {\n      path: \"/\",\n      index: true,\n      element: <Navigate replace to={getHomeRoute()} />\n    },\n    {\n      path: \"/login\",\n      element: <BlankLayout />,\n      children: [\n        {\n          path: \"/login\",\n          element: (\n            <GoogleOAuthProvider clientId=\"1096092734184-n0tcl5abejf0s0r2t4fmoi3qf4fhen76.apps.googleusercontent.com\">\n              <Login />{\" \"}\n            </GoogleOAuthProvider>\n          )\n        }\n      ]\n    },\n    {\n      path: \"/auth/not-auth\",\n      element: <BlankLayout />,\n      children: [{ path: \"/auth/not-auth\", element: <NotAuthorized /> }]\n    },\n    {\n      path: \"/error\",\n      element: <BlankLayout />,\n      children: [{ path: \"/error\", element: <Maintenance /> }]\n    },\n    {\n      path: \"/public/:pageId\",\n      element: <PublicPage />,\n      meta: {\n        publicRoute: true,\n        layout: \"blank\"\n      }\n    },\n    {\n      path: \"/public/:moduleId/:pageId\",\n      element: <PublicPage />,\n      meta: {\n        publicRoute: true,\n        layout: \"blank\"\n      }\n    },\n    {\n      path: \"*\",\n      element: <BlankLayout />,\n      // children: [{ path: \"*\", element: <Error /> }]\n      children: [{ path: \"*\", element: <Spinner /> }]\n    },\n    ...allRoutes\n  ])\n\n  if (store.getState()?.my_menu.dataMyMenu.length > 0) {\n    return routes\n  } else {\n    return initBlank\n  }\n}\n\nexport default Router\n","import React, { useEffect, Suspense, useRef, useState } from \"react\"\nimport \"@nosferatu500/react-sortable-tree/style.css\"\nimport { useNavigate } from \"react-router-dom\"\nimport Router from \"./router/Router\"\nimport Spinner from \"./@core/components/spinner/Fallback-spinner\"\nimport { store } from \"./redux/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getDomainInfo } from \"@store/domainInfo\"\nimport { getMyNotifications } from \"@store/notifications\"\nimport { isUserLoggedIn } from \"@utils\"\nimport { getAppMenu } from \"@src/views/apps/menu/store/my_menu\"\nimport { getUnits } from \"@src/views/apps/unit/store/my_unit\"\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport * as Icons from \"@fortawesome/free-solid-svg-icons\"\nimport Swal from \"sweetalert2\"\nconst iconList = Object.keys(Icons)\n  .filter((key) => key !== \"fas\" && key !== \"prefix\")\n  .map((icon) => Icons[icon])\n\nlibrary.add(...iconList)\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const effectRan = useRef(false)\n  const navigate = useNavigate()\n\n  function getFaviconEl() {\n    return document.getElementById(\"favicon\")\n  }\n\n  async function pingServers() {\n    let serversList = JSON.parse(sessionStorage.getItem(\"serversList\") ?? \"[]\")\n    await Promise.all(\n      serversList?.map(async (url) => {\n        try {\n          const response = await fetch(url, { method: \"HEAD\" })\n          // console.log(lo)\n          return response.ok\n        } catch (error) {\n          console.error(error)\n          // return false\n        }\n      })\n    )\n  }\n\n  useEffect(() => {\n    if (isUserLoggedIn() !== null && window.location.pathname !== \"/error\") {\n      const timeToFetch = 15 //in seconds\n      let timer = null\n\n      const handleVisibilityChange = () => {\n        const datetime = new Date()\n        if (document.hidden) {\n          localStorage.setItem(\"inactive\", Date.parse(datetime) / 1000)\n          clearInterval(timer)\n        } else {\n          const lastTimeStr = localStorage.getItem(\"inactive\")\n          const timestamp = parseInt(lastTimeStr, 10)\n          const lastTime = new Date(timestamp * 1000)\n          const diffInSeconds =\n            Math.abs(datetime.getTime() - lastTime.getTime()) / 1000\n          if (diffInSeconds >= timeToFetch) {\n            console.log(\n              `Fetching data after ${diffInSeconds} seconds of inactivity`\n            )\n            store\n              .dispatch(getMyNotifications({ unread_count: 1 }))\n              .then((res) => {\n                if (res?.payload) {\n                  const count = res?.payload[0]?.count_unread ?? 0\n                  if (count) {\n                    const countFix =\n                      count > 0 && count <= 20 ? `(${count})` : \"(20+)\"\n                    document.title = `${countFix} ${document.title.replaceAll(\n                      countFix,\n                      \"\"\n                    )}`\n                    pingServers()\n                  }\n                }\n              })\n          } else {\n            timer = setInterval(() => {\n              const diffInSeconds =\n                Math.abs(datetime.getTime() - lastTime.getTime()) / 1000\n              if (diffInSeconds >= timeToFetch) {\n                console.log(\n                  `Fetching data after ${diffInSeconds} seconds of inactivity`\n                )\n                store\n                  .dispatch(getMyNotifications({ unread_count: 1 }))\n                  .then((res) => {\n                    if (res?.payload) {\n                      const count = res?.payload[0]?.count_unread ?? 0\n                      if (count) {\n                        const countFix =\n                          count > 0 && count <= 20 ? `(${count})` : \"(20+)\"\n                        document.title = `${countFix} ${document.title.replaceAll(\n                          countFix,\n                          \"\"\n                        )}`\n                      }\n                      pingServers()\n                    }\n                  })\n                clearInterval(timer)\n              }\n            }, 1000)\n          }\n        }\n      }\n\n      document.addEventListener(\"visibilitychange\", handleVisibilityChange)\n\n      return () => {\n        clearInterval(timer)\n        document.removeEventListener(\"visibilitychange\", handleVisibilityChange)\n      }\n    }\n  }, [])\n\n  function hexToRgb(hex) {\n    // Hilangkan tanda '#' jika ada\n    hex = hex.replace(\"#\", \"\")\n\n    // Ubah nilai warna dari format hex menjadi format RGB\n    const r = parseInt(hex.substring(0, 2), 16)\n    const g = parseInt(hex.substring(2, 4), 16)\n    const b = parseInt(hex.substring(4, 6), 16)\n\n    // Kembalikan nilai warna dalam format RGB\n    return `rgb(${r}, ${g}, ${b})`\n  }\n\n  const replacePrimaryColor = (primaryColorBe) => {\n    // Mendapatkan semua elemen <style> di dalam elemen <head>\n    const styleElements = document.head.querySelectorAll(\"style\")\n\n    const rgbColor = hexToRgb(primaryColorBe)\n\n    const rgbColorReplacer = rgbColor?.replace(\")\", \"\")\n    const rgbaColorReplacer = rgbColor?.replace(\")\", \"\")?.replace(\"rgb\", \"rgba\")\n\n    styleElements.forEach((styleElement) => {\n      styleElement.textContent = styleElement.textContent\n        .replace(\n          /:root\\s*{\\s*--primary-color:\\s*#4186e0;\\s*}/g,\n          `:root {--primary-color: ${primaryColorBe} !important;}`\n        )\n        .replace(/#4186e0/g, `${primaryColorBe}`)\n        .replace(/#3772be/g, `${primaryColorBe}`)\n        .replace(/#3e7fd5/g, `${primaryColorBe}`)\n        .replace(/#346bb3/g, `${primaryColorBe}`)\n        .replace(/rgb\\(65,\\s*134,\\s*224/g, `${rgbColorReplacer}`)\n        .replace(/rgba\\(65,\\s*134,\\s*224/g, `${rgbaColorReplacer}`)\n\n      // const styleSheet = styleElement.sheet\n\n      // // Mengambil aturan CSS dari StyleSheet\n      // const cssRules = styleSheet.cssRules || styleSheet.rules\n\n      // // Loop melalui setiap aturan CSS\n      // Array.from(cssRules).forEach((rule) => {\n      //   if (rule.cssText.includes(\"--primary-color: #4186e0;\")) {\n      //     const modifiedRule = rule.cssText.replace(\n      //       \"--primary-color: #4186e0;\",\n      //       `--primary-color: ${primaryColorBe} !;`\n      //     )\n      //     styleSheet.deleteRule(rule)\n      //     styleSheet.insertRule(modifiedRule, styleSheet.cssRules.length)\n      //   }\n      // })\n    })\n  }\n\n  useEffect(() => {\n    if (!effectRan.current) {\n      if (navigator.onLine) {\n        dispatch(getDomainInfo({})).then((res) => {\n          if (res?.meta?.requestStatus === \"rejected\") {\n            // console.error(res)\n            console.error(\"Not Registered\")\n            Swal.fire({\n              icon: \"error\",\n              title: \"Connection Failed!\",\n              text: \"There is a problem connecting to the server or this app is not yet registered with Saba Official.\",\n              confirmButtonText: \"Refresh\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            }).then((result) => {\n              if (result.isConfirmed) {\n                location.reload()\n              }\n            })\n          } else {\n            const logoResp = res.payload?.app?.logo\n            if (\n              logoResp?.favicon ||\n              res.payload?.unit?.unit_app_attributes?.favicon\n            ) {\n              const favicon = getFaviconEl()\n              favicon.href =\n                res.payload?.unit?.unit_app_attributes?.favicon ??\n                logoResp.favicon\n            }\n\n            const primaryColorBe =\n              res.payload?.unit?.unit_app_attributes?.layout?.primaryColor ??\n              res.payload?.app?.setting?.primaryColor\n            if (primaryColorBe) {\n              // const rootSelect = document.querySelector(\":root\")\n              const rootSelect = document.documentElement\n              const elementSelect = rootSelect.style\n\n              // Panggil fungsi untuk melakukan penggantian\n              setTimeout(() => {\n                replacePrimaryColor(primaryColorBe)\n              }, 600)\n\n              elementSelect.setProperty(\"--bs-primary-rgb\", `${primaryColorBe}`)\n              elementSelect.setProperty(\"--primary-color\", `${primaryColorBe}`)\n              // setTimeout(() => {\n              //   const navLinks = document.querySelectorAll(\".nav-link\")\n              //   // console.log(navLinks)\n              //   navLinks.forEach((element) => {\n              //     element.style.color = `${primaryColorBe}`\n              //   })\n              // }, 80)\n            }\n            if (window.location.pathname !== \"/error\") {\n              if (isUserLoggedIn() !== null) {\n                store.dispatch(getAppMenu({})).then((res) => {\n                  if (res?.meta?.requestStatus !== \"rejected\") {\n                    store.dispatch(getUnits({}))\n                    setTimeout(() => {\n                      store\n                        .dispatch(getMyNotifications({ unread_count: 1 }))\n                        .then((res) => {\n                          if (res?.payload) {\n                            const count = res?.payload[0]?.count_unread ?? 0\n                            if (count) {\n                              const countFix =\n                                count > 0 && count <= 20\n                                  ? `(${count})`\n                                  : \"(20+)\"\n                              document.title = `${countFix} ${document.title.replaceAll(\n                                countFix,\n                                \"\"\n                              )}`\n                            }\n                          }\n                        })\n                    }, 2000)\n                  } else {\n                    localStorage.setItem(\"lastUrl\", window.location.href)\n                    navigate(\"/error\")\n                  }\n                })\n              } else {\n                if (\n                  (window.location.pathname !== \"/login\" ||\n                    window.location.pathname?.indexOf(\"/public\") !== -1) &&\n                  window.location.pathname !== \"/reset-password\" &&\n                  window.location.pathname !== \"/forgot-password\" &&\n                  window.location.pathname !== \"/register\"\n                ) {\n                  navigate(\"/login\")\n                } else {\n                  if (window.location.pathname === \"/reset-password\") {\n                    navigate(window.location.pathname + window.location.search)\n                  } else if (window.location.pathname === \"/forgot-password\") {\n                    navigate(\"/forgot-password\")\n                  } else if (\n                    window.location.pathname === \"/register\" &&\n                    (res.payload?.app?.setting?.enable_registration ||\n                      res.payload?.unit?.unit_app_attributes\n                        ?.enable_registration)\n                  ) {\n                    navigate(\"/register\")\n                  } else {\n                    navigate(\"/login\")\n                  }\n                }\n              }\n            }\n          }\n        })\n      } else {\n        console.error(\"Offline\")\n        Swal.fire({\n          icon: \"error\",\n          title: \"Youre not connected to internet\",\n          text: \"Please check your connection to the internet.\",\n          confirmButtonText: \"Refresh\",\n          customClass: {\n            confirmButton: \"btn btn-primary\"\n          }\n        }).then((result) => {\n          if (result.isConfirmed) {\n            location.reload()\n          }\n        })\n      }\n    }\n\n    return () => {\n      effectRan.current = true\n    }\n  }, [])\n\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Router />\n    </Suspense>\n  )\n}\n\nexport default App\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport { useTranslation } from \"react-i18next\"\n// ** Axios Imports\n// import axios from \"axios\"\n// import useJwt.ssoAxiosInterceptor from \"../../../../shared/SsoAxiosInterceptorsss\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nimport { isUserLoggedIn, isAdminApp } from \"@utils\"\nimport { bool } from \"prop-types\"\n\nconst initSelectData = {\n  value: \"\",\n  label: \"Select Unit\"\n}\n\nexport const setUnitSelectedDropdown = createAsyncThunk(\n  \"Units/setUnitSelectedDropdown\",\n  (data) => {\n    // console.log(data)\n    return data\n  }\n)\n\nexport const getUnits = createAsyncThunk(\n  \"Units/getUnits\",\n  async (params, { rejectWithValue }) => {\n    params[\"flat_mode\"] = true\n    // console.log(\"GET INIT MEMBER-OF START...\")\n    if (isUserLoggedIn() !== null) {\n      const userMember =\n        (await JSON.parse(localStorage.getItem(\"userData\")).member_of) ?? []\n\n      if (userMember.length > 0) {\n        // userMember.unshift(initSelectData)\n        let fetchState = false\n        if (userMember.some((e) => e.children_count > 0)) {\n          fetchState = true\n        }\n\n        if (fetchState) {\n          const response = await useJwt.ssoAxiosInterceptor.get(\"/api/unit\", {\n            params\n          })\n          // response.data.data.unshift(initSelectData)\n          // console.log(\"GET INIT MEMBER-OF SUCCESS\")\n          return {\n            params,\n            data: response.data.data,\n            total: response.data.total\n          }\n        } else {\n          // console.log(\"GET INIT MEMBER-OF SUCCESS\")\n          return { data: userMember }\n        }\n      } else {\n        try {\n          const response = await useJwt.ssoAxiosInterceptor.get(\"/api/unit\", {\n            params\n          })\n          // response.data.data.unshift(initSelectData)\n          // console.log(\"GET INIT MEMBER-OF SUCCESS\")\n          return {\n            params,\n            data: response.data.data,\n            total: response.data.total\n          }\n        } catch (error) {\n          // console.error(\"GET INIT MEMBER-OF FAILED!!!\")\n          return rejectWithValue(error.response.data)\n        }\n      }\n    }\n  }\n)\n\nexport const getUnit = createAsyncThunk(\"Units/getUnit\", async (id) => {\n  const response = await axios.get(`/api/unit/${id}`)\n  // console.log(response)\n  return response.data.data\n})\n\nexport const addUnit = createAsyncThunk(\n  \"Units/addUnit\",\n  async (unit, { dispatch, getState }) => {\n    await axios.post(\"/api/unit\", unit)\n    await dispatch(getUnits(getState().units.params))\n    await dispatch(getAllUnit())\n    return unit\n  }\n)\n\nexport const deleteUnit = createAsyncThunk(\n  \"Units/deleteUnit\",\n  async (id, { dispatch, getState }) => {\n    await axios.delete(\"/apps/unit\", { id })\n    await dispatch(getUnits(getState().units.params))\n    await dispatch(getAllUnit())\n    return id\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const MyUnitsSlice = createSlice({\n  name: \"Units\",\n  initialState: {\n    crudTitle: \"Unit\",\n\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    //SHARED\n    dataDropdown: [],\n    selectedUnit: {},\n    selectedUnitMulti: []\n  },\n  reducers: {\n    setUnitSelected: (state, action) => {\n      // console.log(action)\n      console.log(\"setUnitSelected\")\n      return { ...state, selectedUnit: action.payload }\n    },\n    resetAll: (state) => {\n      // state.errorSummary = null\n      // state.dataSummary = []\n      // state.error = null\n      state.data = []\n      state.dataDropdown = []\n      state.total = 1\n      state.selectedUnit = null\n      state.selectedUnitMulti = null\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUnitSelectedDropdown.fulfilled, (state, action) => {\n        // state.selectedUnit = action.payload\n        console.log(\"setUnitSelectedDropdown\")\n        return { ...state, selectedUnit: action.payload }\n        // console.log(state.selectedUnit)\n        // state.selectedUnit = { ...state.selectedUnit, ...action.payload }\n      })\n      .addCase(getUnits.pending, (state) => {\n        // console.log(\"pending\")\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getUnits.fulfilled, (state, action) => {\n        state.status = \"succeeded\"\n        state.isLoading = false\n\n        if (action.payload?.data) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: item.name\n          }))\n          // console.log(state.dataDropdown)\n          state.dataDropdown.unshift(initSelectData)\n          if (action.payload?.total) {\n            state.total = action.payload.total\n          }\n          state.selectedUnit = state.dataDropdown[0]\n        }\n      })\n      .addCase(getUnits.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.message\n      })\n\n      .addCase(getUnit.fulfilled, (state, action) => {\n        state.selectedUnit = action.payload\n      })\n  }\n})\n\n// export const { setUnitSelected, resetAll } = UnitsSlice.actions\n\nexport default MyUnitsSlice.reducer\n"],"sourceRoot":""}