{"version":3,"sources":["views/apps/permission_menu/DropDown.js"],"names":["List","_ref","_store$selectedData","_ref$lookupMode_field","lookupMode_fieldName","_ref$lookupMode_isMul","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","dispatch","useTranslation","t","useDispatch","store","useSelector","state","storeName","useEffect","data","length","isLoading","getAlwaysGrid","getDataList","_jsx","Fragment","children","Select","theme","selectThemeColors","defaultValue","dataDropdown","filter","el","value","isMulti","onChange","e","options","className","classnames","selectedData","id","classNamePrefix"],"mappings":"uJAAA,4FAsDeA,UA5CF,SAAHC,GAKH,IAADC,EAAAC,EAAAF,EAJJG,4BAAoB,IAAAD,EAAG,GAAEA,EAAAE,EAAAJ,EACzBK,0BAAkB,IAAAD,GAAQA,EAC1BE,EAAmBN,EAAnBM,oBACAC,EAAuBP,EAAvBO,wBAGMC,GADQC,cAANC,EACSC,eACXC,EAAQC,aAAY,SAACC,GAAK,OAAKA,EAAMC,gBAY3C,OANAC,qBAAU,YACkB,IAAtBJ,EAAMK,KAAKC,SAAkBN,EAAMO,WAAaC,kBAClDZ,EAASa,sBAAY,OAEtB,CAACb,EAAUI,EAAMK,KAAKC,SAGvBI,cAACC,WAAQ,CAAAC,SACPF,cAACG,IAAM,CACLC,MAAOC,IACPC,aACGvB,EAIGE,EAHAK,EAAMiB,aAAaC,QACjB,SAACC,GAAE,OAAKA,EAAGC,QAAUzB,KAI7B0B,QAAS5B,EAET6B,SAvBgB,SAACC,GACrB,OAAO7B,EAAoB6B,EAAGhC,IAuB1BiC,QAASxB,EAAMiB,aACfQ,UAAWC,IAAW,eAAgB,CACpC,aAAyC,QAAT,QAAlBrC,EAAAW,EAAM2B,oBAAY,IAAAtC,OAAA,EAAlBA,EAAoBuC,MAEpCC,gBAAgB,e","file":"static/js/68.3b3a3963.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport \"./style.scss\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport classnames from \"classnames\"\r\nimport Select from \"react-select\"\r\n\r\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\r\n\r\nconst List = ({\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_isMulti = false,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const onChangeInput = (e) => {\r\n    return lookupMode_onChange(e, lookupMode_fieldName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      dispatch(getDataList({}))\r\n    }\r\n  }, [dispatch, store.data.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Select\r\n        theme={selectThemeColors}\r\n        defaultValue={\r\n          !lookupMode_isMulti\r\n            ? store.dataDropdown.filter(\r\n                (el) => el.value === lookupMode_defaultValue\r\n              )\r\n            : lookupMode_defaultValue\r\n        }\r\n        isMulti={lookupMode_isMulti}\r\n        // onChange={lookupMode_onChange}\r\n        onChange={onChangeInput}\r\n        options={store.dataDropdown}\r\n        className={classnames(\"react-select\", {\r\n          \"is-invalid\": store.selectedData?.id === null\r\n        })}\r\n        classNamePrefix=\"select\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}