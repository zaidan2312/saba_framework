{"version":3,"sources":["views/apps/role/RoleCards.js","@core/components/avatar-group/index.js","assets/images/illustration/faq-illustrations.svg"],"names":["RoleCards","t","useTranslation","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","_useState3","concat","_useState4","modalType","setModalType","dispatch","useDispatch","store","useSelector","state","storeName","storePermission","apps_permission","_useState5","_useState6","permissionDropdown","setPermissionDropdown","_useState7","_useState8","permissionDropdownOld","setPermissionDropdownOld","_useState9","_useState10","description","setDescription","_useState11","_useState12","formState","setFormState","_useState13","_useState14","setLoading","_useState15","_useState16","setLoadingText","colors","useContext","ThemeColors","_useForm","useForm","reset","control","setError","setValue","handleSubmit","errors","handleChangeChk","chkValue","index","field","permissionDropdownCopy","Object","assign","target","checked","handleAdd","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arr3","arr4","wrap","_context","prev","next","data","length","isLoading","getDataListPermission","then","res","responseData","_toConsumableArray","payload","dataDropdown","stop","apply","arguments","postDataToApi","values","every","pageTitle","onlyInA","right","compareFunction","a","b","id_permission","post","put","delete","get","filter","leftValue","some","rightValue","postData","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","error","message","danger","key","_data$key","type","updateDataToApi","permissionState","JSON","stringify","selectedData","title","countChanges","id","putData","icon","useEffect","grid_mode","_jsx","Fragment","children","_jsxs","UILoader","blocking","isLoadingSummary","loader","Loader","Row","dataSummary","map","item","_item$users","_item$title","_item$name","Col","xl","md","Card","CardBody","className","totalUsers","users","AvatarGroup","x","size","img","require","default","height","name","Link","to","onClick","e","rowData","preventDefault","console","log","detailFromGrid","setDataById","getDataListRolePermission","filter_id_role","i","location","host","sm","src","illustration","alt","width","Button","Modal","isOpen","onClosed","toggle","ModalHeader","loading","ModalBody","tag","onSubmit","xs","Label","for","Controller","defaultValue","render","_ref2","Input","_objectSpread","placeholder","invalid","FormFeedback","Table","responsive","role","label","Info","UncontrolledTooltip","placement","onChange","event","outline","roleName","props","Tag","classnames","_defineProperty","split","join","linkUrl","ItemTag","Element","Avatar","undefined","initials","content"],"mappings":"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","file":"static/js/141.ddfb3414.chunk.js","sourcesContent":["import { Fragment, useState, useEffect, useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Label,\r\n  Input,\r\n  Table,\r\n  Modal,\r\n  Button,\r\n  CardBody,\r\n  ModalBody,\r\n  ModalHeader,\r\n  FormFeedback,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  detailFromGrid,\r\n  setDataById,\r\n  postData,\r\n  putData\r\n} from \"./store\"\r\nimport { getDataList as getDataListPermission } from \"../../apps/permission/store\"\r\nimport { getDataList as getDataListRolePermission } from \"../../apps/role_permission/store\"\r\nimport { Copy, Info } from \"react-feather\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport AvatarGroup from \"@components/avatar-group\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport illustration from \"@src/assets/images/illustration/faq-illustrations.svg\"\r\nimport toast from \"react-hot-toast\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\nimport UILoader from \"@components/ui-loader\"\r\n\r\nconst RoleCards = () => {\r\n  // ** States\r\n  const { t } = useTranslation()\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [modalType, setModalType] = useState(`${t(\"Add New\")}`)\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const storePermission = useSelector((state) => state.apps_permission)\r\n  const [permissionDropdown, setPermissionDropdown] = useState([])\r\n  const [permissionDropdownOld, setPermissionDropdownOld] = useState([])\r\n  const [description, setDescription] = useState(\"\")\r\n  const [formState, setFormState] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const handleEdit = (rowData) => {\r\n    // e.preventDefault()\r\n    setDescription(rowData.title)\r\n    console.log(rowData)\r\n    setFormState(\"edit\")\r\n    setModalType(`${t(\"Edit\")}`)\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then((x) => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n      dispatch(\r\n        getDataListRolePermission({\r\n          filter_id_role: rowData.id\r\n        })\r\n      ).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          // console.log(storePermission.dataDropdown)\r\n          // console.log(res.payload.data)\r\n          // const fillPermission = [\r\n          //   ...res.payload.data,\r\n          //   ...storePermission.dataDropdown\r\n          // ]\r\n          let responseData = [...res.payload.data]\r\n          let arr3 = storePermission.dataDropdown.map((item, i) =>\r\n            Object.assign({}, item, responseData[i])\r\n          )\r\n          let arr4 = storePermission.dataDropdown.map((item, i) =>\r\n            Object.assign({}, item, responseData[i])\r\n          )\r\n          // console.log(arr3)\r\n\r\n          setPermissionDropdown(arr3)\r\n          setPermissionDropdownOld(arr4)\r\n        }\r\n      })\r\n    } else {\r\n      setLoading(true)\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      dispatch(setDataById(rowData)).then((x) => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleChangeChk = (chkValue, index, field) => {\r\n    // console.log(chkValue.target.checked)\r\n    // console.log(field)\r\n    let permissionDropdownCopy = Object.assign([], permissionDropdown)\r\n    // console.log(permissionDropdownCopy)\r\n    permissionDropdownCopy[index][field] = chkValue.target.checked\r\n    setPermissionDropdown(permissionDropdownCopy)\r\n  }\r\n\r\n  const handleAdd = async () => {\r\n    setFormState(\"add\")\r\n    setModalType(`${t(\"Add New\")}`)\r\n    if (storePermission.data.length === 0 && !storePermission.isLoading) {\r\n      setLoading(true)\r\n      await dispatch(getDataListPermission({})).then((res) => {\r\n        let responseData = [...res.payload.data]\r\n        let arr3 = responseData\r\n        let arr4 = responseData\r\n        setPermissionDropdown(arr3)\r\n        setPermissionDropdownOld(arr4)\r\n\r\n        setShowModal(true)\r\n        setLoading(false)\r\n      })\r\n    } else {\r\n      let arr3 = [...storePermission.dataDropdown]\r\n      let arr4 = [...storePermission.dataDropdown]\r\n      setPermissionDropdown(arr3)\r\n      setPermissionDropdownOld(arr4)\r\n\r\n      setShowModal(true)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.description.length) {\r\n      // setShowModal(false)\r\n      formState === \"edit\" ? updateDataToApi(data) : postDataToApi(data)\r\n    } else {\r\n      setError(\"description\", {\r\n        type: \"manual\"\r\n      })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      const isSameData = (a, b) =>\r\n        a.id_permission === b.id_permission &&\r\n        a.post === b.post &&\r\n        a.put === b.put &&\r\n        a.delete === b.delete &&\r\n        a.get === b.get\r\n\r\n      const onlyInLeft = (left, right, compareFunction) =>\r\n        left.filter(\r\n          (leftValue) =>\r\n            !right.some((rightValue) => compareFunction(leftValue, rightValue))\r\n        )\r\n      const onlyInA = onlyInLeft(\r\n        permissionDropdown,\r\n        permissionDropdownOld,\r\n        isSameData\r\n      )\r\n      if (onlyInA.length > 0) {\r\n        data[\"role_permission\"] = onlyInA\r\n      }\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShowModal(false)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      // console.log(JSON.stringify(permissionDropdownOld))\r\n      // console.log(JSON.stringify(permissionDropdown))\r\n      const permissionState =\r\n        JSON.stringify(permissionDropdownOld) !==\r\n        JSON.stringify(permissionDropdown)\r\n      return store.selectedData.title !== data.description || permissionState\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n      const isSameData = (a, b) =>\r\n        a.id === b.id &&\r\n        a.id_permission === b.id_permission &&\r\n        a.post === b.post &&\r\n        a.put === b.put &&\r\n        a.delete === b.delete &&\r\n        a.get === b.get\r\n\r\n      const onlyInLeft = (left, right, compareFunction) =>\r\n        left.filter(\r\n          (leftValue) =>\r\n            !right.some((rightValue) => compareFunction(leftValue, rightValue))\r\n        )\r\n      const onlyInA = onlyInLeft(\r\n        permissionDropdown,\r\n        permissionDropdownOld,\r\n        isSameData\r\n      )\r\n      if (onlyInA.length > 0) {\r\n        data[\"role_permission\"] = onlyInA\r\n      }\r\n      // console.log(data)\r\n      dispatch(putData(data)).then((res) => {\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShowModal(false)\r\n          toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const onReset = () => {\r\n    setShowModal(false)\r\n    reset({ roleName: \"\" })\r\n  }\r\n\r\n  const handleModalClosed = () => {\r\n    setModalType(`${t(\"Add New\")}`)\r\n    setValue(\"roleName\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      storePermission.dataDropdown.length === 0 &&\r\n      !storePermission.isLoading\r\n    ) {\r\n      dispatch(getDataListPermission({ grid_mode: true }))\r\n    }\r\n  }, [dispatch, storePermission.dataDropdown.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={store.isLoadingSummary} loader={<Loader />}>\r\n        <Row>\r\n          {store.dataSummary.map((item, index) => {\r\n            return (\r\n              <Col key={index} xl={4} md={6}>\r\n                <Card>\r\n                  <CardBody>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <span>{`Total ${item.totalUsers} users`}</span>\r\n                      {item?.users?.length > 0 ? (\r\n                        <AvatarGroup\r\n                          data={item.users.map((x) => ({\r\n                            size: x.size,\r\n                            title: x.title,\r\n                            id: x.id,\r\n                            img:\r\n                              x?.img !== null\r\n                                ? x.img\r\n                                : require(`@src/assets/images/avatars/avatar-blank.png`)\r\n                                    .default\r\n                          }))}\r\n                        />\r\n                      ) : (\r\n                        <div style={{ height: \"30px\" }} className=\"\"></div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between align-items-end mt-1 pt-25\">\r\n                      <div className=\"role-heading  text-truncate\">\r\n                        <h4 className=\"fw-bolder mb-0\">{item.title ?? \"-\"}</h4>\r\n                        <div>\r\n                          <small className=\"fw-bolder\">\r\n                            {item.name ?? \"-\"}\r\n                          </small>\r\n                        </div>\r\n                        <Link\r\n                          to=\"/\"\r\n                          className=\"role-edit-modal\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleEdit(item)\r\n                          }}\r\n                        >\r\n                          <small className=\"fw-bolder\">\r\n                            {t(\"Edit\")} {t(\"Role\")}\r\n                          </small>\r\n                        </Link>\r\n                      </div>\r\n                      <Link\r\n                        to=\"\"\r\n                        className=\"text-body\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                      >\r\n                        {/* <Copy className=\"font-medium-5\" /> */}\r\n                      </Link>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            )\r\n          })}\r\n          {location.host === \"admin.insaba.co.id\" && (\r\n            <Col xl={4} md={6}>\r\n              <Card>\r\n                <Row className=\"mb-2\">\r\n                  <Col sm={5}>\r\n                    <div className=\"d-flex align-items-end justify-content-center h-100\">\r\n                      <img\r\n                        className=\"img-fluid mt-2\"\r\n                        src={illustration}\r\n                        alt=\"Image\"\r\n                        width={85}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  (\r\n                  <Col sm={7}>\r\n                    <CardBody className=\"text-sm-end text-center ps-sm-0\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className=\"text-nowrap mb-1\"\r\n                        onClick={() => {\r\n                          handleAdd()\r\n                        }}\r\n                      >\r\n                        {t(\"Add New Role\")}{\" \"}\r\n                      </Button>\r\n                      <p className=\"mb-0\">\r\n                        {t(\"Add a new role, if it does not exist\")}\r\n                      </p>\r\n                    </CardBody>\r\n                  </Col>\r\n                  )\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n\r\n        {showModal && (\r\n          <Modal\r\n            isOpen={showModal}\r\n            onClosed={handleModalClosed}\r\n            toggle={() => setShowModal(!showModal)}\r\n            className=\"modal-dialog-centered modal-xl\"\r\n          >\r\n            {/* <UILoader\r\n              blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n              loader={<Loader />}\r\n            > */}\r\n            <ModalHeader\r\n              className=\"bg-transparent\"\r\n              toggle={() => setShowModal(!showModal)}\r\n            ></ModalHeader>\r\n            {!store.loading && (\r\n              <ModalBody className=\"px-5 pb-5\">\r\n                <div className=\"text-center mb-4\">\r\n                  <h1>\r\n                    {modalType} {t(\"Role\")}\r\n                  </h1>\r\n                  <p>\r\n                    {formState === \"edit\"\r\n                      ? `${t(\"Set role name and permissions\")}`\r\n                      : t(\"Create new role\")}\r\n                  </p>\r\n                </div>\r\n                <Row tag=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                  <Col xs={12}>\r\n                    <Label className=\"form-label\" for=\"description\">\r\n                      {t(\"Role Name\")}\r\n                    </Label>\r\n                    <Controller\r\n                      name=\"description\"\r\n                      control={control}\r\n                      defaultValue={description}\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          {...field}\r\n                          id=\"description\"\r\n                          placeholder={t(\"Enter role name\")}\r\n                          invalid={errors.description && true}\r\n                        />\r\n                      )}\r\n                    />\r\n                    {errors.description && (\r\n                      <FormFeedback>\r\n                        {t(\"Please enter a valid role name\")}\r\n                      </FormFeedback>\r\n                    )}\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <h4 className=\"mt-2 pt-50\">{t(\"Role Permissions\")}</h4>\r\n                    <Table className=\"table-flush-spacing\" responsive>\r\n                      <tbody>\r\n                        {/* <tr>\r\n                      <td className=\"text-nowrap fw-bolder\">\r\n                        <span className=\"me-50\">\r\n                          {\" \"}\r\n                          {t(\"Administrator Access\")}\r\n                        </span>\r\n                        <Info size={14} id=\"info-tooltip\" />\r\n                        <UncontrolledTooltip\r\n                          placement=\"top\"\r\n                          target=\"info-tooltip\"\r\n                        >\r\n                          {t(\"Allows a full access to the system\")}\r\n                        </UncontrolledTooltip>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"form-check\">\r\n                          <Input type=\"checkbox\" id=\"select-all\" />\r\n                          <Label className=\"form-check-label\" for=\"select-all\">\r\n                            {t(\"Select All\")}\r\n                          </Label>\r\n                        </div>\r\n                      </td>\r\n                    </tr> */}\r\n                        {permissionDropdown.map((role, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td className=\"text-nowrap fw-bolder\">\r\n                                <span className=\"me-50\"> {role.label}</span>\r\n                                <Info size={14} id={`info_${role.id}`} />\r\n                                <UncontrolledTooltip\r\n                                  placement=\"top\"\r\n                                  target={`info_${role.id}`}\r\n                                >\r\n                                  {t(role.description)}\r\n                                </UncontrolledTooltip>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"d-flex\">\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.get}\r\n                                      type=\"checkbox\"\r\n                                      id={`read-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"get\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`read-${role.id}`}\r\n                                    >\r\n                                      {t(\"Read\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.post}\r\n                                      type=\"checkbox\"\r\n                                      id={`write-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"post\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`write-${role.id}`}\r\n                                    >\r\n                                      {t(\"Create\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check me-3 me-lg-5\">\r\n                                    <Input\r\n                                      checked={role.put}\r\n                                      type=\"checkbox\"\r\n                                      id={`create-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"put\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`create-${role.id}`}\r\n                                    >\r\n                                      {t(\"Update\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div className=\"form-check\">\r\n                                    <Input\r\n                                      checked={role.delete}\r\n                                      type=\"checkbox\"\r\n                                      id={`delete-${role.id}`}\r\n                                      onChange={(event) => {\r\n                                        handleChangeChk(event, index, \"delete\")\r\n                                      }}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"form-check-label\"\r\n                                      for={`delete-${role.id}`}\r\n                                    >\r\n                                      {t(\"Delete\")}\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        })}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Col>\r\n                  <Col className=\"text-center mt-2\" xs={12}>\r\n                    <Button type=\"submit\" color=\"primary\" className=\"me-1\">\r\n                      {t(\"Submit\")}\r\n                    </Button>\r\n                    <Button type=\"reset\" outline onClick={onReset}>\r\n                      {t(\"Cancel\")}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n            )}\r\n            {/* </UILoader> */}\r\n          </Modal>\r\n        )}\r\n      </UILoader>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RoleCards\r\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledTooltip } from \"reactstrap\"\r\n\r\n// ** Custom Components Imports\r\nimport Avatar from \"@components/avatar\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst AvatarGroup = (props) => {\r\n  // ** Props\r\n  const { data, tag, className } = props\r\n\r\n  // ** Conditional Tag\r\n  const Tag = tag ? tag : \"div\"\r\n\r\n  // ** Render Data\r\n  const renderData = () => {\r\n    return data.map((item, i) => {\r\n      let id = item?.id\r\n        ? `avatar_${i}_${item.id}`\r\n        : item.title.split(\" \").join(\"-\")\r\n      const linkUrl = item?.linkUrl\r\n      delete item?.linkUrl\r\n      const ItemTag = item.tag ? item.tag : \"div\"\r\n      const Element = (\r\n        <Fragment key={i}>\r\n          {/* {id ? (\r\n            <UncontrolledTooltip placement={item.placement} target={id}>\r\n              {item.title}\r\n            </UncontrolledTooltip>\r\n          ) : null} */}\r\n          {!item.meta ? (\r\n            item?.img ? (\r\n              <Avatar\r\n                tag={ItemTag}\r\n                className={classnames(\"pull-up\", {\r\n                  [item.className]: item.className\r\n                })}\r\n                {...(id ? { id: id } : {})}\r\n                {...item}\r\n                title={undefined}\r\n                meta={undefined}\r\n              />\r\n            ) : (\r\n              <Avatar\r\n                tag={ItemTag}\r\n                initials\r\n                className={classnames(\"pull-up\", {\r\n                  [item.className]: item.className\r\n                })}\r\n                {...(id ? { id: id } : {})}\r\n                color=\"light-primary\"\r\n                content={`${item.title}`}\r\n              />\r\n            )\r\n          ) : null}\r\n          {item.meta ? (\r\n            <ItemTag className=\"d-flex align-items-center ps-1\">\r\n              {item.meta}\r\n            </ItemTag>\r\n          ) : null}\r\n        </Fragment>\r\n      )\r\n      if (linkUrl) {\r\n        return (\r\n          <Link key={`avatar_${i}`} to={linkUrl}>\r\n            {Element}\r\n          </Link>\r\n        )\r\n      } else {\r\n        return Element\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames(\"avatar-group\", {\r\n        [className]: className\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default AvatarGroup\r\n\r\n// ** PropTypes\r\nAvatarGroup.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\r\n}\r\n","export default __webpack_public_path__ + \"static/media/faq-illustrations.f8c4ea78.svg\";"],"sourceRoot":""}