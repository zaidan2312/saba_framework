{"version":3,"sources":["views/apps/endpoint/modal/index.js","views/apps/endpoint/index.js","views/apps/endpoint/Table.js","views/apps/endpoint/Tree.js","views/apps/endpoint/DropDown.js","@core/components/widgets/stats/StatsHorizontal.js","@core/components/breadcrumbs/index.js"],"names":["ModalAddEdit","_ref","show","setShow","detailPage","formState","setFormState","_ref$currentData","currentData","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","_useState","useState","_useState2","_slicedToArray","loadingText","setLoadingText","allStore","_useState3","_useState4","dynamicComponents","setDynamicComponents","_useState5","_useState6","formDatas","_useState7","_useState8","formDatasError","setFormDatasError","_useForm","useForm","setError","control","handleSubmit","Loader","errors","_jsxs","Fragment","children","_jsx","Spinner","CardText","className","handleReset","resetSelectedData","handleChangeInputs","value","fieldName","isMulti","arguments","length","undefined","index","indexOf","splice","push","_objectSpread","_defineProperty","useEffect","componentsImport","dynamicFormRelation","dynamicForm","_loop","i","fieldLabel","path_name","replaceAll","_dynamicFormRelation$","_dynamicFormRelation$2","_allStore$storeName","_dynamicFormRelation$3","_dynamicFormRelation$4","MyComponent","lazy","concat","Label","for","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","isMultiSelection","lookupMode_onChange","lookupMode_defaultValue","isM2MDefValFromGrid","data","map","x","selectedData","lookupMode_isM2MDefValFromGrid","_dynamicFormRelation$5","_allStore$storeName2","Input","defaultValue","onChange","e","_dynamicFormRelation$6","target","Modal","isOpen","toggle","UILoader","blocking","isLoadingAddEdit","isLoadingDetail","loader","ModalHeader","ModalBody","pageTitle","title","Form","onSubmit","storeData","sortedObject","key","JSON","stringify","countChanges","Object","values","every","field","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","_data$key","type","icon","postData","errorFields","assign","_formDatas$key","Row","item","_formDatas$item$field","_formDatas$item$field2","includes","Col","md","xs","Suspense","fallback","textAlign","Button","outline","onClick","List","_store$dataSummary2","_store$dataSummary3","_ref$lookupMode","_ref$lookupMode_field","_ref$lookupMode_dropd","_ref$lookupMode_isMul","searchTerm","_store$dataSummary","getApiSummaryData","dataSummary","isLoadingSummary","getAlwaysGrid","getSummaryData","DropDown","Breadcrumbs","_item$count_format","StatsHorizontal","statTitle","Icon","baseClassName","fontSize","renderStats","Skeleton","sx","bgcolor","animation","height","width","count_format","count","isTreeLayout","Tree","searchString","Table","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","selectedRow","handleDeleteSelected","handleFiltersChange","filtersCustomAdd","ability","AbilityContext","dynamicFilterComponents","setDynamicFilterComponents","dynamicFilterDatas","invoices","getUserData","_dynamicColumnsFilter","_dynamicColumnsFilter2","_dynamicColumnsFilter3","_dynamicColumnsFilter4","dynamicColumnsFilter","xl","htmlFor","can","sessionStorage","getItem","_ref2","storeApp","apps_app","sort_dir","setSortDir","setSearchTerm","_useState9","_useState10","currentPage","setCurrentPage","_useState11","_useState12","sort","setSort","_useState13","_useState14","setRowsPerPage","_useState15","_useState16","selectedRows","setSelectedRows","_useState17","_useState18","filtersCustom","_useState19","_useState20","toggleCleared","setToggleCleared","_useState21","_useState22","sidebarOpen","setSidebarOpen","_useState23","_useState24","loading","setLoading","_useState25","_useState26","_useState27","_useState28","showModal","setShowModal","_useState29","_useState30","handleEdit","rowData","detailFromGrid","setDataById","isLoading","getDataListApp","handleCloseModal","revivalBack","neutralizeBack","handleDelete","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","sent","deleteData","stop","_x","apply","_ref4","_callee2","countSelectedCopy","_context2","a","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","s","columns","_toConsumableArray","dynamicColumns","column","name","columnName","sortField","center","sortable","minWidth","selector","row","cell","dataFormat","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","app_logo","_row$app_name","Avatar","img","imgHeight","imgWidth","initials","content","app_name","GlobalActionsTable","disabledAction","tableColumns","useMemo","dark","light","removeDefaultValue","dataTree","parse","Card","DataTable","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","Number","Math","ceil","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","NoDataDisplay","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","ChevronDown","filters","isFiltered","keys","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget","par_name","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","handleChange","tree","setDataList","updateDataToApi","notReload","nameMsg","mainArray","forEach","iter","isArray","margin","SortableTree","treeData","onMoveNode","node","nextParentNode","prevPath","prevTreeIndex","nextPath","nextTreeIndex","parent_id","is_app_header","canDrag","args","searchMethod","searchQuery","toLowerCase","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","_ref5","path","fontWeight","_Fragment","paddingLeft","buttons","Ripple","Plus","size","UncontrolledTooltip","placement","preventDefault","Edit2","Trash2","hidden","disabled","defaultChecked","checked","handleChangeLookupMode","_store$selectedData","Select","theme","selectThemeColors","dataDropdown","filter","el","options","classnames","classNamePrefix","cardColor","stats","countTextColor","_ref$countTextStyle","countTextStyle","_ref$titleStyle","titleStyle","statsMargin","_ref$solidColor","solidColor","_ref$cardStyle","cardStyle","_ref$titleOnTop","titleOnTop","cardColorFix","inverse","CardBody","BreadCrumbs","mb","subtitle","Breadcrumb","BreadcrumbItem","tag","Link","to","Wrapper","link","isLastItem","active"],"mappings":"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","file":"static/js/43.a879e818.chunk.js","sourcesContent":["/* eslint-disable brace-style */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById,\r\n  dynamicForm\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicComponents, setDynamicComponents] = useState({})\r\n  const [formDatas, setFormDatas] = useState({})\r\n  const [formDatasError, setFormDatasError] = useState({})\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = () => {\r\n    if (countChanges(formDatas)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = () => {\r\n    if (\r\n      Object.values(formDatas).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(formDatas)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      // console.log(\"ERORR\")\r\n      // console.log(formDatas)\r\n      let errorFields = Object.assign({}, formDatasError)\r\n      for (let key in formDatas) {\r\n        // console.log(key, formDatas[key])\r\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\r\n          errorFields[key] = true\r\n        }\r\n      }\r\n      // console.log(errorFields)\r\n      setFormDatasError(errorFields)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\r\n    // console.log(value, fieldName, isMulti)\r\n    if (isMulti) {\r\n      if (formDatas[fieldName]) {\r\n        const index = formDatas[fieldName].indexOf(value)\r\n        if (index !== -1) {\r\n          formDatas[fieldName].splice(index, 1)\r\n        } else {\r\n          formDatas[fieldName].push(value)\r\n        }\r\n      } else {\r\n        formDatas[fieldName] = [value]\r\n      }\r\n    } else {\r\n      formDatas[fieldName] = value\r\n    }\r\n    // formDatasError[fieldName] = false\r\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // DYNAMIC IMPORT COMPONENTS\r\n    let componentsImport = {}\r\n    // const dynamicFormRelation = dynamicForm.filter(function (el) {\r\n    //   return el.type === \"dropdown\" || el.type === \"table\"\r\n    // })\r\n\r\n    const dynamicFormRelation = dynamicForm\r\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\r\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\r\n      const fieldLabel = dynamicFormRelation[i][\"fieldLabel\"]\r\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\r\n        \"id_\",\r\n        \"\"\r\n      )\r\n\r\n      formDatas[fieldName] = null\r\n      formDatasError[fieldName] = false\r\n\r\n      ////////////INPUT - DROPDOWN\r\n      if (\r\n        dynamicFormRelation[i][\"type\"] === \"dropdown\" ||\r\n        dynamicFormRelation[i][\"type\"] === \"table\"\r\n      ) {\r\n        const MyComponent = lazy(() => import(`../../${path_name}`))\r\n        componentsImport[`${path_name}_comp`] = (\r\n          <Fragment>\r\n            <Label className=\"form-label\" for={fieldName}>\r\n              {t(fieldLabel ?? \"\")}\r\n            </Label>\r\n            <MyComponent\r\n              key={`dynInput_${fieldName}`}\r\n              lookupMode={true}\r\n              lookupMode_fieldName={fieldName}\r\n              lookupMode_dropdown={\r\n                dynamicFormRelation[i][\"type\"] === \"dropdown\"\r\n              }\r\n              lookupMode_isMulti={\r\n                dynamicFormRelation[i].isMultiSelection ?? false\r\n              }\r\n              lookupMode_onChange={handleChangeInputs}\r\n              lookupMode_defaultValue={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n                  ? allStore[storeName].data.map((x) => x[fieldName])\r\n                  : allStore[storeName]?.selectedData\r\n                  ? allStore[storeName].selectedData[fieldName]\r\n                  : \"\"\r\n              }\r\n              lookupMode_isM2MDefValFromGrid={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\r\n              }\r\n            />\r\n          </Fragment>\r\n        )\r\n      }\r\n\r\n      ////////////INPUT - TEXT\r\n      else {\r\n        componentsImport[`${path_name}_comp`] = (\r\n          <Fragment>\r\n            <Label className=\"form-label\" for={fieldName}>\r\n              {t(fieldLabel ?? \"\")}\r\n            </Label>\r\n            <Input\r\n              key={`dynInput_${fieldName}`}\r\n              defaultValue={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n                  ? allStore[storeName].data.map((x) => x[fieldName])\r\n                  : allStore[storeName]?.selectedData\r\n                  ? allStore[storeName].selectedData[fieldName]\r\n                  : \"\"\r\n              }\r\n              onChange={(e) =>\r\n                handleChangeInputs(\r\n                  e.target.value,\r\n                  fieldName,\r\n                  dynamicFormRelation[i].isMultiSelection ?? false\r\n                )\r\n              }\r\n              // className={\r\n              //   !formDatasError[fieldName]\r\n              //     ? \"form-control is-invalid\"\r\n              //     : \"form-control\"\r\n              // }\r\n              id={`dynInput_${fieldName}`}\r\n            />\r\n          </Fragment>\r\n        )\r\n      }\r\n    }\r\n\r\n    setDynamicComponents(componentsImport)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\r\n            </h2>\r\n            <p className=\"mb-1\">\r\n              {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\r\n            </p>\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              {dynamicForm.map((item, index) => {\r\n                const path_name = item.fieldName.replaceAll(\"id_\", \"\")\r\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\r\n                  if (item.type === \"table\") {\r\n                    return (\r\n                      <Col key={path_name} md={12} xs={12}>\r\n                        <Suspense fallback={<div>Loading...</div>}>\r\n                          <div\r\n                            className={\r\n                              !formDatasError[item.fieldName]\r\n                                ? \"dynamicForm_input\"\r\n                                : \"dynamicForm_input dynamicForm_input_invalid\"\r\n                            }\r\n                          >\r\n                            {dynamicComponents[`${path_name}_comp`]}\r\n                            {item?.isM2MDefValFromGrid &&\r\n                              formDatas[item.fieldName] && (\r\n                                <div\r\n                                  style={{ textAlign: \"right\" }}\r\n                                  className=\"text-primary\"\r\n                                >\r\n                                  {formDatas[item.fieldName]?.length}{\" \"}\r\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                        </Suspense>\r\n                      </Col>\r\n                    )\r\n                  } else {\r\n                    return (\r\n                      <Col key={path_name} md={12} xs={12}>\r\n                        <Suspense fallback={<div>Loading...</div>}>\r\n                          <div\r\n                            className={\r\n                              !formDatasError[item.fieldName]\r\n                                ? \"\"\r\n                                : \"dynamicForm_input_invalid\"\r\n                            }\r\n                          >\r\n                            {dynamicComponents[`${path_name}_comp`]}\r\n                            {item?.isM2MDefValFromGrid &&\r\n                              formDatas[item.fieldName] && (\r\n                                <div\r\n                                  style={{ textAlign: \"right\" }}\r\n                                  className=\"text-primary\"\r\n                                >\r\n                                  {formDatas[item.fieldName]?.length}{\" \"}\r\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                        </Suspense>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                } else {\r\n                  return (\r\n                    <Col key={path_name} md={12} xs={12}>\r\n                      <div\r\n                        className={\r\n                          !formDatasError[item.fieldName]\r\n                            ? \"\"\r\n                            : \"dynamicForm_input_invalid\"\r\n                        }\r\n                      >\r\n                        {dynamicComponents[`${path_name}_comp`]}\r\n                      </div>\r\n                    </Col>\r\n                  )\r\n                }\r\n              })}\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Table from \"./Table\"\r\nimport Tree from \"./Tree\"\r\nimport DropDown from \"./DropDown\"\r\nimport { Row, Col, Input } from \"reactstrap\"\r\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\"\r\nimport { User, UserPlus, UserCheck, UserX } from \"react-feather\"\r\nimport Icon from \"@mui/material/Icon\"\r\nimport AddCardOutlinedIcon from \"@mui/icons-material/AddCardOutlined\"\r\nimport \"./style.scss\"\r\nimport Breadcrumbs from \"@components/breadcrumbs\"\r\n\r\nimport {\r\n  storeName,\r\n  getAlwaysGrid,\r\n  getApiSummaryData,\r\n  getSummaryData,\r\n  pageTitle,\r\n  isTreeLayout\r\n} from \"./store\"\r\nimport { Skeleton } from \"@mui/material\"\r\n\r\nconst List = ({\r\n  lookupMode = false,\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_dropdown = false,\r\n  lookupMode_isMulti = false,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n  const handleFilter = (event) => {\r\n    // console.log(\"handleFilter\")\r\n    setSearchTerm(event)\r\n    // debounceFn(event)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      getApiSummaryData &&\r\n      (store.dataSummary?.length === 0 ||\r\n        (!store.isLoadingSummary && getAlwaysGrid))\r\n    ) {\r\n      dispatch(getSummaryData({}))\r\n    }\r\n  }, [dispatch, store.dataSummary?.length])\r\n\r\n  const colors = [\r\n    \"primary\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"secondary\"\r\n  ]\r\n\r\n  return !lookupMode_dropdown ? (\r\n    <Fragment>\r\n      <div className=\"content-header row\">\r\n        {!lookupMode && (\r\n          <Breadcrumbs\r\n            title={t(pageTitle)}\r\n            data={[{ title: t(\"App Setting\") }, { title: t(pageTitle) }]}\r\n          />\r\n        )}\r\n        {/* <div className=\"content-header-right text-md-end col-md col-12 mb-2 \">\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"app-user-list\">\r\n        {!lookupMode && getApiSummaryData && (\r\n          <Row>\r\n            {store.dataSummary?.map((item, index) => {\r\n              return (\r\n                <Col>\r\n                  <StatsHorizontal\r\n                    color={colors[index]}\r\n                    statTitle={`${t(item.title)}`}\r\n                    icon={\r\n                      item.icon ? (\r\n                        <Icon\r\n                          baseClassName=\"material-icons-outlined\"\r\n                          fontSize=\"20\"\r\n                        >\r\n                          {item.icon}\r\n                        </Icon>\r\n                      ) : (\r\n                        <Icon\r\n                          baseClassName=\"material-icons-outlined\"\r\n                          fontSize=\"20\"\r\n                        >\r\n                          lightbulb\r\n                        </Icon>\r\n                      )\r\n                    }\r\n                    renderStats={\r\n                      store.isLoadingSummary ? (\r\n                        <Skeleton\r\n                          sx={{ bgcolor: \"#eef2f8\" }}\r\n                          animation=\"wave\"\r\n                          height={25}\r\n                          width={40}\r\n                          className=\"fw-bolder mb-75\"\r\n                        />\r\n                      ) : (\r\n                        <h3 className=\"fw-bolder mb-75\">\r\n                          {item.count_format ?? item.count}\r\n                        </h3>\r\n                      )\r\n                    }\r\n                  />\r\n                </Col>\r\n              )\r\n            })}\r\n          </Row>\r\n        )}\r\n        {isTreeLayout ? (\r\n          <Tree\r\n            searchString={searchTerm}\r\n            lookupMode={lookupMode}\r\n            lookupMode_fieldName={lookupMode_fieldName}\r\n            lookupMode_defaultValue={lookupMode_defaultValue}\r\n            lookupMode_onChange={lookupMode_onChange}\r\n            lookupMode_isMulti={lookupMode_isMulti}\r\n            lookupMode_isM2MDefValFromGrid\r\n          />\r\n        ) : (\r\n          <Table\r\n            lookupMode={lookupMode}\r\n            lookupMode_fieldName={lookupMode_fieldName}\r\n            lookupMode_defaultValue={lookupMode_defaultValue}\r\n            lookupMode_onChange={lookupMode_onChange}\r\n            lookupMode_isMulti={lookupMode_isMulti}\r\n            lookupMode_isM2MDefValFromGrid\r\n          />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  ) : (\r\n    <DropDown\r\n      lookupMode_fieldName={lookupMode_fieldName}\r\n      lookupMode_onChange={lookupMode_onChange}\r\n      lookupMode_defaultValue={lookupMode_defaultValue}\r\n      lookupMode_isMulti={lookupMode_isMulti}\r\n      lookupMode_isM2MDefValFromGrid\r\n    />\r\n  )\r\n}\r\n\r\nexport default List\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  disabledAction,\r\n  dynamicColumnsFilter,\r\n  setDataList\r\n} from \"./store\"\r\n\r\nimport { getDataList as getDataListApp } from \"../app/store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  CardText\r\n} from \"reactstrap\"\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Moment from \"moment\"\r\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\r\n\r\nimport { getDataList as getDataListPermission } from \"../permission/store\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport Avatar from \"@components/avatar\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected,\r\n  handleFiltersChange,\r\n  filtersCustomAdd,\r\n  searchString,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const dispatch = useDispatch()\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicFilterComponents, setDynamicFilterComponents] = useState({})\r\n  const [dynamicFilterDatas, setDynamicFilterDatas] = useState({})\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\r\n    fieldName = `filter_${fieldName}`\r\n    if (isMulti) {\r\n      if (dynamicFilterDatas[fieldName]) {\r\n        const index = dynamicFilterDatas[fieldName].indexOf(value)\r\n        if (index !== -1) {\r\n          dynamicFilterDatas[fieldName].splice(index, 1)\r\n        } else {\r\n          dynamicFilterDatas[fieldName].push(value)\r\n        }\r\n      } else {\r\n        dynamicFilterDatas[fieldName] = [value]\r\n      }\r\n    } else {\r\n      dynamicFilterDatas[fieldName] = value\r\n    }\r\n    return handleFiltersChange(dynamicFilterDatas[fieldName], fieldName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // DYNAMIC IMPORT COMPONENTS\r\n    let componentsImport = {}\r\n    for (let i = 0; i < dynamicColumnsFilter.length; i++) {\r\n      const fieldName = dynamicColumnsFilter[i][\"fieldName\"]\r\n      const path_name = dynamicColumnsFilter[i][\"fieldName\"].replaceAll(\r\n        \"id_\",\r\n        \"\"\r\n      )\r\n\r\n      dynamicFilterDatas[`filter_${fieldName}`] = null\r\n      const MyComponent = lazy(() => import(`../${path_name}`))\r\n      componentsImport[`${path_name}_comp`] = (\r\n        <MyComponent\r\n          lookupMode={true}\r\n          lookupMode_fieldName={fieldName}\r\n          lookupMode_dropdown={true}\r\n          lookupMode_isMulti={dynamicColumnsFilter[i].isMultiSelection ?? false}\r\n          lookupMode_onChange={handleChangeInputs}\r\n          lookupMode_defaultValue={\r\n            dynamicColumnsFilter[i]?.isM2MDefValFromGrid\r\n              ? allStore[storeName].data.map((x) => x[fieldName])\r\n              : allStore[storeName]?.selectedData\r\n              ? allStore[storeName].selectedData[fieldName]\r\n              : \"\"\r\n          }\r\n          lookupMode_isM2MDefValFromGrid={\r\n            dynamicColumnsFilter[i]?.isM2MDefValFromGrid ?? false\r\n          }\r\n        />\r\n      )\r\n    }\r\n\r\n    setDynamicFilterComponents(componentsImport)\r\n  }, [dispatch, dynamicFilterDatas])\r\n\r\n  return (\r\n    <div\r\n      className={`invoice-list-table-header w-100 ms-50 mb-75 ${\r\n        !lookupMode ? \"mt-2 me-1\" : \"\"\r\n      }`}\r\n    >\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          {!lookupMode && (\r\n            <div className=\"d-flex align-items-center w-100\">\r\n              <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n              <Input\r\n                className=\"mx-50\"\r\n                type=\"select\"\r\n                id=\"rows-per-page\"\r\n                value={rowsPerPage}\r\n                onChange={handlePerPage}\r\n                style={{ width: \"5rem\" }}\r\n              >\r\n                <option value=\"10\">10</option>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"50\">50</option>\r\n              </Input>\r\n              <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className={`d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column p-0 mt-xl-0 mt-1 ${\r\n            !lookupMode ? \"pe-xl-1\" : \"\"\r\n          }`}\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) &&\r\n          !lookupMode ? (\r\n            <div\r\n              className={`d-flex align-items-center mb-sm-0 mb-1 ${\r\n                !lookupMode ? \"me-1\" : \"\"\r\n              }`}\r\n            >\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className={`d-flex align-items-center mb-sm-0 mb-1 me-1`}>\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {dynamicColumnsFilter.map((item, index) => {\r\n            const path_name = item.fieldName.replaceAll(\"id_\", \"\")\r\n            return (\r\n              <div\r\n                key={path_name}\r\n                className={`mt-50 width-300 mt-sm-0 mt-1 ${\r\n                  !lookupMode ? \"me-1\" : \"\"\r\n                }`}\r\n              >\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                  {dynamicFilterComponents[`${path_name}_comp`]}\r\n                </Suspense>\r\n              </div>\r\n\r\n              // <Col key={path_name} md={12} xs={12}>\r\n              //   <Label className=\"form-label\" for={item.fieldName}>\r\n              //     {t(item.fieldLabel ?? \"\")}\r\n              //   </Label>\r\n              //   <Suspense fallback={<div>Loading...</div>}>\r\n              //     <div\r\n              //       className={\r\n              //         !formDatasError[item.fieldName]\r\n              //           ? \"dynamicForm_input\"\r\n              //           : \"dynamicForm_input dynamicForm_input_invalid\"\r\n              //       }\r\n              //     >\r\n              //       {dynamicComponents[`${path_name}_comp`]}\r\n              //       {item?.isM2MDefValFromGrid &&\r\n              //         formDatas[item.fieldName] && (\r\n              //           <div\r\n              //             style={{ textAlign: \"right\" }}\r\n              //             className=\"text-primary\"\r\n              //           >\r\n              //             {formDatas[item.fieldName]?.length}{\" \"}\r\n              //             {t(item.fieldLabel)} {t(\"Selected\")}\r\n              //           </div>\r\n              //         )}\r\n              //     </div>\r\n              //   </Suspense>\r\n              // </Col>\r\n            )\r\n          })}\r\n\r\n          {/* {!filtersCustomAdd[\"filter_id_permission\"] ? (\r\n            <div className=\"mt-50 width-200 me-1 mt-sm-0 mt-1\">\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                // value={role}\r\n                onChange={(e) =>\r\n                  handleFiltersChange(e.target.value, \"filter_id_permission\")\r\n                }\r\n              >\r\n                <option value=\"\">\r\n                  {t(\"Select\")} {t(\"Permission\")}\r\n                </option>\r\n                {allStore[\"apps_permission\"].data.map((item, index) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.title}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </div>\r\n          ) : null} */}\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            {ability.can(\"post\", sessionStorage.getItem(\"current_page_perm\")) &&\r\n            !lookupMode ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = ({\r\n  filtersCustomAdd,\r\n  searchString,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const storeApp = useSelector((state) => state.apps_app)\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(lookupMode ? 5 : 10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n\r\n  const [filtersCustom, setFiltersCustom] = useState(filtersCustomAdd ?? {})\r\n\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        if (storeApp.data.length === 0 && !storeApp.isLoading) {\r\n          dispatch(getDataListApp({})).then((res) => {\r\n            setLoading(false)\r\n            setShowModal(true)\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleChangeLookupMode = (\r\n    e,\r\n    id,\r\n    lookupMode_fieldName,\r\n    lookupMode_isMulti\r\n  ) => {\r\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\r\n  }\r\n\r\n  const handleFiltersChange = (value, par_name) => {\r\n    filtersCustom[par_name] = value\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n    if (lookupMode && lookupMode_isMulti) {\r\n      lookupMode_onChange(\r\n        state.selectedRows.map((s) => s.id),\r\n        lookupMode_fieldName,\r\n        lookupMode_isMulti\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderCell = (row, column) => {\r\n    const field = row[column.fieldName]\r\n    const dataFormat = column.dataFormat\r\n    if (dataFormat) {\r\n      if (dataFormat.includes(\":\")) {\r\n        const columnTypeFormat = dataFormat.split(\":\")\r\n        const columnType = columnTypeFormat[0]\r\n        const columnFormat = columnTypeFormat[1]\r\n        let columnFormated = row[column.fieldName]\r\n        if (columnType === \"date\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        if (columnType === \"datetime\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        return columnFormated\r\n      }\r\n    }\r\n    return row[column.fieldName]\r\n  }\r\n\r\n  const columns = [\r\n    ...store.dynamicColumns.map((column) => ({\r\n      name: column.columnName,\r\n      sortField: column.fieldName,\r\n      center: false,\r\n      sortable: true,\r\n      minWidth: column.minWidth,\r\n      selector: (row) => row[column.fieldName],\r\n      cell: (row) => renderCell(row, column)\r\n    })),\r\n    {\r\n      name: t(\"App\"),\r\n      center: false,\r\n      sortable: false,\r\n      selector: (row) => row?.app_logo,\r\n      cell: (row) => (\r\n        <div className=\"d-flex justify-content-left align-items-center\">\r\n          {row?.app_logo ? (\r\n            <Avatar\r\n              className=\"me-1\"\r\n              img={row?.app_logo}\r\n              width=\"32\"\r\n              height=\"32\"\r\n              imgHeight=\"25\"\r\n              imgWidth=\"30\"\r\n              color={\"light-primary\"}\r\n            />\r\n          ) : (\r\n            <Avatar\r\n              initials\r\n              className=\"me-1\"\r\n              // color={row.avatarColor}\r\n              content={row?.app_name ?? \"\"}\r\n            />\r\n          )}\r\n\r\n          <div className=\"d-flex flex-column\">\r\n            <span className=\"fw-bolder\">{row.app_name}</span>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    // {\r\n    //   name: t(\"App Name\"),\r\n    //   sortField: \"attributes\",\r\n    //   center: false,\r\n    //   sortable: true,\r\n    //   selector: (row) => row.attributes,\r\n    //   cell: (row) => row.attributes\r\n    // },\r\n    !lookupMode && {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <GlobalActionsTable\r\n          disabledAction={disabledAction}\r\n          row={row}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      )\r\n      // (\r\n      //   <Input\r\n      //     disabled={row.hidden}\r\n      //     defaultChecked={row.checked}\r\n      //     onChange={(e) =>\r\n      //       handleChangeLookupMode(\r\n      //         e,\r\n      //         row.id,\r\n      //         lookupMode_fieldName,\r\n      //         lookupMode_isMulti\r\n      //       )\r\n      //     }\r\n      //     type=\"checkbox\"\r\n      //     id={`checkbox-${row.id}`}\r\n      //   />\r\n      // )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) =>\r\n              column.name === \"Actions\" ? (\r\n                <Fragment>\r\n                  <Skeleton\r\n                    sx={{ bgcolor: colors.dark.light }}\r\n                    animation=\"wave\"\r\n                    className=\"ms-2 me-1\"\r\n                    width={30}\r\n                    height={40}\r\n                  />\r\n                  <Skeleton\r\n                    sx={{ bgcolor: colors.dark.light }}\r\n                    animation=\"wave\"\r\n                    width={30}\r\n                    height={40}\r\n                  />\r\n                </Fragment>\r\n              ) : (\r\n                <Skeleton\r\n                  sx={{ bgcolor: colors.dark.light }}\r\n                  animation=\"wave\"\r\n                  width=\"100%\"\r\n                  height={40}\r\n                />\r\n              )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  const removeDefaultValue = (data, dataTree) => {\r\n    // console.log(dataTree)\r\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\r\n    // mainArray.forEach(function iter(a) {\r\n    //   if (data.includes(a.id)) {\r\n    //     a[\"checked\"] = true\r\n    //     a[\"hidden\"] = true\r\n    //   }\r\n    //   // console.log(a.id, !data.includes(a.id))\r\n\r\n    //   // eslint-disable-next-line no-unused-expressions\r\n    //   Array.isArray(a.children) && a.children.forEach(iter)\r\n    // })\r\n    // dispatch(setDataList(mainArray))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage,\r\n          ...filtersCustom\r\n        })\r\n      ).then((x) => {\r\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\r\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\r\n        }\r\n      })\r\n    }\r\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\r\n      removeDefaultValue(lookupMode_defaultValue, store.data)\r\n    }\r\n  }, [dispatch, sort_dir, sort, currentPage, filtersCustom])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                  handleFiltersChange={handleFiltersChange}\r\n                  filtersCustomAdd={filtersCustomAdd}\r\n                  lookupMode={lookupMode}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef,\r\n  Component\r\n} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  setDataList,\r\n  putData\r\n} from \"./store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy,\r\n  Slack,\r\n  User,\r\n  Settings,\r\n  Database,\r\n  Edit2,\r\n  MoreVertical,\r\n  Trash2,\r\n  Archive,\r\n  Eye,\r\n  CheckCircle,\r\n  CheckSquare,\r\n  Check,\r\n  Square,\r\n  Plus\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Badge,\r\n  UncontrolledTooltip,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nconst MySwal = withReactContent(Swal)\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst List = ({\r\n  searchString,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { t } = useTranslation()\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const ability = useContext(AbilityContext)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\r\n\r\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\r\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const toggleSidebar = (row = null) => {\r\n    // console.log(row.id)\r\n    setCurrentDataAdd(row)\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const handleChange = (tree) => {\r\n    dispatch(setDataList(tree))\r\n  }\r\n\r\n  const handleChangeLookupMode = (\r\n    e,\r\n    id,\r\n    lookupMode_fieldName,\r\n    lookupMode_isMulti\r\n  ) => {\r\n    let mainArray = JSON.parse(JSON.stringify(store.data))\r\n    mainArray.forEach(function iter(a) {\r\n      if (a.id === id) {\r\n        a.checked = e.target.checked\r\n      }\r\n      // eslint-disable-next-line no-unused-expressions\r\n      Array.isArray(a.children) && a.children.forEach(iter)\r\n    })\r\n    handleChange(mainArray)\r\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\r\n  }\r\n\r\n  const eventCanDragNode = (args) => {\r\n    // console.log(args)\r\n    if (args.node.is_app_header) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const onMoveNode = ({\r\n    treeData,\r\n    node,\r\n    nextParentNode,\r\n    prevPath,\r\n    prevTreeIndex,\r\n    nextPath,\r\n    nextTreeIndex\r\n  }) => {\r\n    // console.log(nextParentNode)\r\n    const data = {\r\n      id: node.id,\r\n      title: node.title,\r\n      parent_id: nextParentNode.is_app_header ? null : nextParentNode.id\r\n    }\r\n    updateDataToApi(data, true)\r\n  }\r\n\r\n  const updateDataToApi = (data, notReload = false) => {\r\n    // console.log(data)\r\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\r\n    if (notReload) data[\"notReload\"] = true\r\n    const nameMsg = data.title\r\n    dispatch(putData(data, notReload)).then((res) => {\r\n      // console.log(res)\r\n      if (res.meta.requestStatus === \"fulfilled\") {\r\n        toast.success(\r\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\r\n          {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          }\r\n        )\r\n      } else if (res.meta.requestStatus === \"rejected\") {\r\n        toast.error(res.payload.message, {\r\n          style: {\r\n            padding: \"16px\",\r\n            color: colors.danger.main,\r\n            border: `1px solid ${colors.danger.main}`\r\n          },\r\n          iconTheme: {\r\n            primary: colors.danger.main\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const customSearchMethod = ({ node, searchQuery }) => {\r\n    return (\r\n      searchQuery &&\r\n      node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1\r\n    )\r\n  }\r\n\r\n  const selectPrevMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null\r\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\r\n        : searchFoundCount - 1\r\n    )\r\n\r\n  const selectNextMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\r\n    )\r\n\r\n  const removeDefaultValue = (data, dataTree) => {\r\n    // console.log(dataTree)\r\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\r\n    mainArray.forEach(function iter(a) {\r\n      if (data.includes(a.id)) {\r\n        a[\"checked\"] = true\r\n        a[\"hidden\"] = true\r\n      }\r\n      // console.log(a.id, !data.includes(a.id))\r\n\r\n      // eslint-disable-next-line no-unused-expressions\r\n      Array.isArray(a.children) && a.children.forEach(iter)\r\n    })\r\n    // console.log(data)\r\n    // console.log(mainArray)\r\n    dispatch(setDataList(mainArray))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(getDataList({})).then((x) => {\r\n        // console.log(lookupMode_isM2MDefValFromGrid)\r\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\r\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\r\n        }\r\n      })\r\n    }\r\n    // console.log(lookupMode_isM2MDefValFromGrid)\r\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\r\n      removeDefaultValue(lookupMode_defaultValue, store.data)\r\n    }\r\n  }, [dispatch, store.data.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={store.isLoading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <div\r\n              style={{\r\n                height: !lookupMode ? 800 : 350,\r\n                margin: !lookupMode ? 20 : 10\r\n              }}\r\n            >\r\n              <SortableTree\r\n                treeData={store.data}\r\n                onChange={handleChange}\r\n                onMoveNode={!lookupMode ? onMoveNode : null}\r\n                canDrag={!lookupMode ? eventCanDragNode : false}\r\n                searchMethod={customSearchMethod}\r\n                searchQuery={searchString}\r\n                searchFocusOffset={searchFocusIndex}\r\n                searchFinishCallback={(matches) => {\r\n                  setSearchFoundCount(matches.length)\r\n                  setSearchFocusIndex(\r\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\r\n                  )\r\n                }}\r\n                // onlyExpandSearchedNodes\r\n                maxDepth={4}\r\n                generateNodeProps={({ node, path }) => ({\r\n                  style: {\r\n                    fontSize: node.is_app_header ? `16px` : \"14px\",\r\n                    fontWeight: node.is_app_header ? `bold` : \"normal\"\r\n                  },\r\n                  title: node.icon ? (\r\n                    <>\r\n                      <div\r\n                        style={{\r\n                          paddingLeft: node.is_app_header ? 0 : 10,\r\n                          fontWeight: node.is_app_header ? `bold` : 400\r\n                        }}\r\n                      >\r\n                        {node.title}\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <div\r\n                      style={{ fontWeight: node.is_app_header ? `bold` : 400 }}\r\n                    >\r\n                      {node.title}\r\n                    </div>\r\n                  ),\r\n                  buttons: [\r\n                    ability.can(\r\n                      \"post\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) && !lookupMode ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-primary\"\r\n                          id=\"btn-edit\"\r\n                          onClick={(e) => {\r\n                            toggleSidebar(node)\r\n                          }}\r\n                        >\r\n                          <Plus size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                          {t(\"Add Child\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    ability.can(\r\n                      \"update\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) &&\r\n                    !lookupMode &&\r\n                    !node.is_app_header ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-info\"\r\n                          id=\"btn-edit\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleEdit(node)\r\n                          }}\r\n                        >\r\n                          <Edit2 size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                          {t(\"Edit\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    ability.can(\r\n                      \"delete\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) &&\r\n                    !lookupMode &&\r\n                    !node.is_app_header ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          id=\"btn-delete\"\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-danger\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleDelete(node.id)\r\n                          }}\r\n                        >\r\n                          <Trash2 size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"btn-delete\"\r\n                        >\r\n                          {t(\"Delete\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    lookupMode && !node.is_app_header ? (\r\n                      <div\r\n                        className={\r\n                          node.hidden\r\n                            ? \"form-check form-check-secondary\"\r\n                            : \"form-check form-check-primary\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          disabled={node.hidden}\r\n                          defaultChecked={node.checked}\r\n                          onChange={(e) =>\r\n                            handleChangeLookupMode(\r\n                              e,\r\n                              node.id,\r\n                              lookupMode_fieldName,\r\n                              lookupMode_isMulti\r\n                            )\r\n                          }\r\n                          type=\"checkbox\"\r\n                          id={`checkbox-${node.id}`}\r\n                        />\r\n                      </div>\r\n                    ) : null\r\n                  ]\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n          currentData={currentDataAdd}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport \"./style.scss\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport classnames from \"classnames\"\r\nimport Select from \"react-select\"\r\n\r\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\r\n\r\nconst List = ({\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_isMulti = false,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const onChangeInput = (e) => {\r\n    return lookupMode_onChange(e, lookupMode_fieldName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      dispatch(getDataList({}))\r\n    }\r\n  }, [dispatch, store.data.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Select\r\n        theme={selectThemeColors}\r\n        defaultValue={\r\n          !lookupMode_isMulti\r\n            ? store.dataDropdown.filter(\r\n                (el) => el.value === lookupMode_defaultValue\r\n              )\r\n            : lookupMode_defaultValue\r\n        }\r\n        isMulti={lookupMode_isMulti}\r\n        // onChange={lookupMode_onChange}\r\n        onChange={onChangeInput}\r\n        options={store.dataDropdown}\r\n        className={classnames(\"react-select\", {\r\n          \"is-invalid\": store.selectedData?.id === null\r\n        })}\r\n        classNamePrefix=\"select\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","// ** Third Party Components\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from \"reactstrap\"\r\nimport { Fragment } from \"react\"\r\n\r\nconst StatsHorizontal = ({\r\n  icon,\r\n  color,\r\n  cardColor,\r\n  stats,\r\n  renderStats,\r\n  statTitle,\r\n  className,\r\n  countTextColor,\r\n  countTextStyle = {},\r\n  titleStyle = {},\r\n  statsMargin,\r\n  solidColor = false,\r\n  cardStyle = {},\r\n  titleOnTop = false\r\n}) => {\r\n  const cardColorFix = !solidColor ? `bg-light-${cardColor}` : `bg-${cardColor}`\r\n  return (\r\n    <Card\r\n      style={{ ...cardStyle }}\r\n      {...(cardColor ? { className: cardColorFix, inverse: true } : {})}\r\n    >\r\n      <CardBody className={className}>\r\n        {!titleOnTop ? (\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <Fragment>\r\n                <div>\r\n                  {renderStats ? (\r\n                    renderStats\r\n                  ) : (\r\n                    <h3\r\n                      className={classnames(\"fw-bolder\", {\r\n                        \"mb-0\": !statsMargin,\r\n                        [statsMargin]: statsMargin\r\n                      })}\r\n                      style={{\r\n                        color: countTextColor ?? \"#5e5873\",\r\n                        ...countTextStyle\r\n                      }}\r\n                    >\r\n                      {stats}\r\n                    </h3>\r\n                  )}\r\n\r\n                  <p style={{ ...titleStyle }} className=\"card-text\">\r\n                    {statTitle}\r\n                  </p>\r\n                </div>\r\n                <div\r\n                  className={`avatar avatar-stats p-50 m-0 ${\r\n                    color ? `bg-light-${color}` : \"bg-light-primary\"\r\n                  }`}\r\n                >\r\n                  <div className=\"avatar-content\">{icon}</div>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Fragment>\r\n            <div>\r\n              <p style={{ ...titleStyle }} className=\"card-text\">\r\n                {statTitle}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              {renderStats ? (\r\n                renderStats\r\n              ) : (\r\n                <Fragment>\r\n                  <div>\r\n                    {renderStats ? (\r\n                      renderStats\r\n                    ) : (\r\n                      <h3\r\n                        className={classnames(\"fw-bolder\", {\r\n                          \"mb-0\": !statsMargin,\r\n                          [statsMargin]: statsMargin\r\n                        })}\r\n                        style={{\r\n                          color: countTextColor ?? \"#5e5873\",\r\n                          ...countTextStyle\r\n                        }}\r\n                      >\r\n                        {stats}\r\n                      </h3>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    className={`avatar avatar-stats p-50 m-0 ${\r\n                      color ? `bg-light-${color}` : \"bg-light-primary\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"avatar-content\">{icon}</div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element,\r\n  color: PropTypes.string,\r\n  cardColor: PropTypes.string,\r\n  statTitle: PropTypes.string,\r\n  statsMargin: PropTypes.oneOf([\r\n    \"mb-0\",\r\n    \"mb-25\",\r\n    \"mb-50\",\r\n    \"mb-75\",\r\n    \"mb-1\",\r\n    \"mb-2\",\r\n    \"mb-3\",\r\n    \"mb-4\",\r\n    \"mb-5\"\r\n  ])\r\n}\r\n","// ** React Imports\r\nimport { Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from \"react-feather\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from \"reactstrap\"\r\n\r\nconst BreadCrumbs = (props) => {\r\n  const { t } = useTranslation()\r\n  // ** Props\r\n  const { data, title, mb, subtitle } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag=\"li\"\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ \"text-primary\": !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\r\n            {item.title}\r\n          </Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`content-header-left col-md-9 col-8 ${\r\n        mb || mb === 0 ? `mb-${mb}` : \"mb-2\"\r\n      }`}\r\n    >\r\n      <div className=\"row breadcrumbs-top\">\r\n        <div className=\"col-12\">\r\n          {title ? (\r\n            <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem tag=\"li\">\r\n                <Link to=\"/\">{t(\"Home\")}</Link>\r\n              </BreadcrumbItem>\r\n              {renderBreadCrumbs()}\r\n            </Breadcrumb>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">{subtitle ?? \"\"}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n"],"sourceRoot":""}