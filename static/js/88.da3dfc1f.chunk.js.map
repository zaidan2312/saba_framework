{"version":3,"sources":["views/pages/authentication/Register.js","@core/components/input-password-toggle/index.js"],"names":["defaultValues","email","terms","username","password","Register","ability","useContext","AbilityContext","skin","useSkin","navigate","useNavigate","dispatch","useDispatch","_useForm","useForm","control","setError","handleSubmit","errors","formState","illustration","source","require","concat","default","_jsx","className","children","_jsxs","Row","Link","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","Col","lg","sm","src","alt","md","CardTitle","tag","CardText","Form","action","onSubmit","data","tempData","_objectSpread","Object","values","every","field","length","useJwt","register","then","res","error","property","type","message","user","accessToken","update","handleLogin","catch","err","console","log","key","Label","for","Controller","name","render","_ref","Input","autoFocus","placeholder","invalid","FormFeedback","_ref2","_ref3","InputPasswordToggle","_ref4","checked","value","href","Button","block","color","Facebook","size","Twitter","Mail","GitHub","forwardRef","props","ref","_classnames","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","inputVisibility","setInputVisibility","Fragment","InputGroup","classnames","_defineProperty","InputGroupText","Eye","EyeOff","renderIcon","defaultProps"],"mappings":"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","file":"static/js/88.da3dfc1f.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useContext } from \"react\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from \"@hooks/useSkin\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from \"react-redux\"\r\nimport { handleLogin } from \"@store/authentication\"\r\n\r\n// ** Third Party Components\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport { Facebook, Twitter, Mail, GitHub } from \"react-feather\"\r\n\r\n// ** Context\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from \"@components/input-password-toggle\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardText,\r\n  Label,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  FormFeedback\r\n} from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"@styles/react/pages/page-authentication.scss\"\r\n\r\nconst defaultValues = {\r\n  email: \"\",\r\n  terms: false,\r\n  username: \"\",\r\n  password: \"\"\r\n}\r\n\r\nconst Register = () => {\r\n  // ** Hooks\r\n  const ability = useContext(AbilityContext)\r\n  const { skin } = useSkin()\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  const illustration =\r\n      skin === \"dark\" ? \"register-v2-dark.svg\" : \"register-v2.svg\",\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = (data) => {\r\n    const tempData = { ...data }\r\n    delete tempData.terms\r\n    if (\r\n      Object.values(tempData).every((field) => field.length > 0) &&\r\n      data.terms === true\r\n    ) {\r\n      const { username, email, password } = data\r\n      useJwt\r\n        .register({ username, email, password })\r\n        .then((res) => {\r\n          if (res.data.error) {\r\n            for (const property in res.data.error) {\r\n              if (res.data.error[property] !== null) {\r\n                setError(property, {\r\n                  type: \"manual\",\r\n                  message: res.data.error[property]\r\n                })\r\n              }\r\n            }\r\n          } else {\r\n            const data = {\r\n              ...res.data.user,\r\n              accessToken: res.data.accessToken\r\n            }\r\n            ability.update(res.data.user.ability)\r\n            dispatch(handleLogin(data))\r\n            navigate(\"/\")\r\n          }\r\n        })\r\n        .catch((err) => console.log(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: \"manual\",\r\n            message: `Please enter a valid ${key}`\r\n          })\r\n        }\r\n        if (key === \"terms\" && data.terms === false) {\r\n          setError(\"terms\", {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-wrapper auth-cover\">\r\n      <Row className=\"auth-inner m-0\">\r\n        <Link className=\"brand-logo\" to=\"/\" onClick={(e) => e.preventDefault()}>\r\n          <svg viewBox=\"0 0 139 95\" version=\"1.1\" height=\"28\">\r\n            <defs>\r\n              <linearGradient\r\n                x1=\"100%\"\r\n                y1=\"10.5120544%\"\r\n                x2=\"50%\"\r\n                y2=\"89.4879456%\"\r\n                id=\"linearGradient-1\"\r\n              >\r\n                <stop stopColor=\"#000000\" offset=\"0%\"></stop>\r\n                <stop stopColor=\"#FFFFFF\" offset=\"100%\"></stop>\r\n              </linearGradient>\r\n              <linearGradient\r\n                x1=\"64.0437835%\"\r\n                y1=\"46.3276743%\"\r\n                x2=\"37.373316%\"\r\n                y2=\"100%\"\r\n                id=\"linearGradient-2\"\r\n              >\r\n                <stop stopColor=\"#EEEEEE\" stopOpacity=\"0\" offset=\"0%\"></stop>\r\n                <stop stopColor=\"#FFFFFF\" offset=\"100%\"></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g\r\n              id=\"Page-1\"\r\n              stroke=\"none\"\r\n              strokeWidth=\"1\"\r\n              fill=\"none\"\r\n              fillRule=\"evenodd\"\r\n            >\r\n              <g id=\"Artboard\" transform=\"translate(-400.000000, -178.000000)\">\r\n                <g id=\"Group\" transform=\"translate(400.000000, 178.000000)\">\r\n                  <path\r\n                    d=\"M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z\"\r\n                    id=\"Path\"\r\n                    className=\"text-primary\"\r\n                    style={{ fill: \"currentColor\" }}\r\n                  ></path>\r\n                  <path\r\n                    d=\"M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z\"\r\n                    id=\"Path\"\r\n                    fill=\"url(#linearGradient-1)\"\r\n                    opacity=\"0.2\"\r\n                  ></path>\r\n                  <polygon\r\n                    id=\"Path-2\"\r\n                    fill=\"#000000\"\r\n                    opacity=\"0.049999997\"\r\n                    points=\"69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325\"\r\n                  ></polygon>\r\n                  <polygon\r\n                    id=\"Path-2\"\r\n                    fill=\"#000000\"\r\n                    opacity=\"0.099999994\"\r\n                    points=\"69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338\"\r\n                  ></polygon>\r\n                  <polygon\r\n                    id=\"Path-3\"\r\n                    fill=\"url(#linearGradient-2)\"\r\n                    opacity=\"0.099999994\"\r\n                    points=\"101.428699 0 83.0667527 94.1480575 130.378721 47.0740288\"\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className=\"brand-text text-primary ms-1\">Vuexy</h2>\r\n        </Link>\r\n        <Col className=\"d-none d-lg-flex align-items-center p-5\" lg=\"8\" sm=\"12\">\r\n          <div className=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n            <img className=\"img-fluid\" src={source} alt=\"Login Cover\" />\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          className=\"d-flex align-items-center auth-bg px-2 p-lg-5\"\r\n          lg=\"4\"\r\n          sm=\"12\"\r\n        >\r\n          <Col className=\"px-xl-2 mx-auto\" sm=\"8\" md=\"6\" lg=\"12\">\r\n            <CardTitle tag=\"h2\" className=\"fw-bold mb-1\">\r\n              Adventure starts here 🚀\r\n            </CardTitle>\r\n            <CardText className=\"mb-2\">\r\n              Make your app management easy and fun!\r\n            </CardText>\r\n\r\n            <Form\r\n              action=\"/\"\r\n              className=\"auth-register-form mt-2\"\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <div className=\"mb-1\">\r\n                <Label className=\"form-label\" for=\"register-username\">\r\n                  Username\r\n                </Label>\r\n                <Controller\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      autoFocus\r\n                      placeholder=\"johndoe\"\r\n                      invalid={errors.username && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n                {errors.username ? (\r\n                  <FormFeedback>{errors.username.message}</FormFeedback>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <Label className=\"form-label\" for=\"register-email\">\r\n                  Email\r\n                </Label>\r\n                <Controller\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      type=\"email\"\r\n                      placeholder=\"john@example.com\"\r\n                      invalid={errors.email && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n                {errors.email ? (\r\n                  <FormFeedback>{errors.email.message}</FormFeedback>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <Label className=\"form-label\" for=\"register-password\">\r\n                  Password\r\n                </Label>\r\n                <Controller\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle\r\n                      className=\"input-group-merge\"\r\n                      invalid={errors.password && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"form-check mb-1\">\r\n                <Controller\r\n                  name=\"terms\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      id=\"terms\"\r\n                      type=\"checkbox\"\r\n                      checked={field.value}\r\n                      invalid={errors.terms && true}\r\n                    />\r\n                  )}\r\n                />\r\n                <Label className=\"form-check-label\" for=\"terms\">\r\n                  I agree to\r\n                  <a\r\n                    className=\"ms-25\"\r\n                    href=\"/\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                  >\r\n                    privacy policy & terms\r\n                  </a>\r\n                </Label>\r\n              </div>\r\n              <Button type=\"submit\" block color=\"primary\">\r\n                Sign up\r\n              </Button>\r\n            </Form>\r\n            <p className=\"text-center mt-2\">\r\n              <span className=\"me-25\">Already have an account?</span>\r\n              <Link to=\"/login\">\r\n                <span>Sign in instead</span>\r\n              </Link>\r\n            </p>\r\n            <div className=\"divider my-2\">\r\n              <div className=\"divider-text\">or</div>\r\n            </div>\r\n            <div className=\"auth-footer-btn d-flex justify-content-center\">\r\n              <Button color=\"facebook\">\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color=\"twitter\">\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color=\"google\">\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className=\"me-0\" color=\"github\">\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","// ** React Imports\r\nimport { Fragment, useState, forwardRef } from \"react\"\r\n\r\n// ** Third Party Components\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, EyeOff } from \"react-feather\"\r\n\r\n// ** Reactstrap Imports\r\nimport { InputGroup, Input, InputGroupText, Label } from \"reactstrap\"\r\n\r\nconst InputPasswordToggle = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    invalid,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? (\r\n        <Label className=\"form-label\" for={htmlFor}>\r\n          {label}\r\n        </Label>\r\n      ) : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className,\r\n          \"is-invalid\": invalid\r\n        })}\r\n      >\r\n        <Input\r\n          ref={ref}\r\n          invalid={invalid}\r\n          type={inputVisibility === false ? \"password\" : \"text\"}\r\n          placeholder={placeholder ? placeholder : \"············\"}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor,\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupText\r\n          className=\"cursor-pointer\"\r\n          onClick={() => setInputVisibility(!inputVisibility)}\r\n        >\r\n          {renderIcon()}\r\n        </InputGroupText>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n})\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  invalid: PropTypes.bool,\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props[\"htmlFor\"] === \"undefined\") {\r\n      throw new Error(\"htmlFor prop is required when label prop is present\")\r\n    }\r\n  },\r\n  htmlFor(props, propName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props[\"label\"] === \"undefined\") {\r\n      throw new Error(\"label prop is required when htmlFor prop is present\")\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}